---------------------------------- page 1 ----------------------------------
#### DownExpandingContainer('title')
  StaticGroupedFlowables()
    Paragraph('AtomVM', style='title page title')
         > (0,0,1,0,2) title page title [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('AtomVM')
    Paragraph('Release 0.5.0', style='title page subtitle')
         > (0,0,1,0,2) title page subtitle [Sphinx] > title page title
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Release 0.5.0')
    Paragraph('github.com/atomvm', style='title page author')
         > (0,0,1,0,2) title page author [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('github.com/atomvm')
    Paragraph('Mar 22, 2022', style='title page date')
         > (0,0,1,0,2) title page date [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Mar 22, 2022')
---------------------------------- page i ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Table of Contents', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Table of Contents')
        StringField('Table of Contents')
          SingleStyledText('Table of Contents')
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    TableOfContentsSection(style='table of contents')
         > (0,0,1,0,1) table of contents section [Sphinx] > DEFAULT
           (0,0,0,1,1) chapter [Sphinx] > DEFAULT
      TableOfContents()   table of contents
           > (0,0,0,0,2) table of contents [Sphinx] > default
        TableOfContentsEntry('1	Welcome to AtomVM!	3')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1')
            Tab('	')
            ReferenceField('Welcome to AtomVM!')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Welcome to AtomVM!')
                MixedStyledText('Welcome to AtomVM!')
                  SingleStyledText('Welcome to AtomVM!')
            Tab('	')
            ReferenceField('3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
        TableOfContentsEntry('1.1	What is AtomVM?	3')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.1')
            Tab('	')
            ReferenceField('What is AtomVM?')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('What is AtomVM?')
                MixedStyledText('What is AtomVM?')
                  SingleStyledText('What is AtomVM?')
            Tab('	')
            ReferenceField('3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
        TableOfContentsEntry('1.2	Why Erlang/Elixir?	3')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.2')
            Tab('	')
            ReferenceField('Why Erlang/Elixir?')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Why Erlang/Elixir?')
                MixedStyledText('Why Erlang/Elixir?')
                  SingleStyledText('Why Erlang/Elixir?')
            Tab('	')
            ReferenceField('3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
        TableOfContentsEntry('1.3	Design Philosophy	4')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.3')
            Tab('	')
            ReferenceField('Design Philosophy')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Design Philosophy')
                MixedStyledText('Design Philosophy')
                  SingleStyledText('Design Philosophy')
            Tab('	')
            ReferenceField('4')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4')
        TableOfContentsEntry('1.4	Licensing	4')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.4')
            Tab('	')
            ReferenceField('Licensing')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Licensing')
                MixedStyledText('Licensing')
                  SingleStyledText('Licensing')
            Tab('	')
            ReferenceField('4')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4')
        TableOfContentsEntry('1.5	Source Code	4')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.5')
            Tab('	')
            ReferenceField('Source Code')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Source Code')
                MixedStyledText('Source Code')
                  SingleStyledText('Source Code')
            Tab('	')
            ReferenceField('4')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4')
        TableOfContentsEntry('1.6	Contributing	5')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.6')
            Tab('	')
            ReferenceField('Contributing')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Contributing')
                MixedStyledText('Contributing')
                  SingleStyledText('Contributing')
            Tab('	')
            ReferenceField('5')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
        TableOfContentsEntry('1.7	Where to go from here	5')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.7')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.7')
            Tab('	')
            ReferenceField('Where to go from here')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Where to go from here')
                MixedStyledText('Where to go from here')
                  SingleStyledText('Where to go from here')
            Tab('	')
            ReferenceField('5')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
        TableOfContentsEntry('2	Getting Started Guide	7')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2')
            Tab('	')
            ReferenceField('Getting Started Guide')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Getting Started Guide')
                MixedStyledText('Getting Started Guide')
                  SingleStyledText('Getting Started Guide')
            Tab('	')
            ReferenceField('7')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
        TableOfContentsEntry('2.1	Getting Started on the ESP32...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.1')
            Tab('	')
            ReferenceField('Getting Started on the ESP32 pla...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Getting Started on the ESP32 pla...')
                MixedStyledText('Getting Started on the ESP32 pla...')
                  SingleStyledText('Getting Started on the ESP32 pla...')
            Tab('	')
            ReferenceField('7')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
        TableOfContentsEntry('2.2	Getting Started on the STM32...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.2')
            Tab('	')
            ReferenceField('Getting Started on the STM32 pla...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Getting Started on the STM32 pla...')
                MixedStyledText('Getting Started on the STM32 pla...')
                  SingleStyledText('Getting Started on the STM32 pla...')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
        TableOfContentsEntry('2.3	Getting Started on the Gener...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.3')
            Tab('	')
            ReferenceField('Getting Started on the Generic U...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Getting Started on the Generic U...')
                MixedStyledText('Getting Started on the Generic U...')
                  SingleStyledText('Getting Started on the Generic U...')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
        TableOfContentsEntry('2.4	Where to go from here	11')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.4')
            Tab('	')
            ReferenceField('Where to go from here')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Where to go from here')
                MixedStyledText('Where to go from here')
                  SingleStyledText('Where to go from here')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
        TableOfContentsEntry('3	Programmers Guide	13')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
            Tab('	')
            ReferenceField('Programmers Guide')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('3.1	AtomVM Features	13')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.1')
            Tab('	')
            ReferenceField('AtomVM Features')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AtomVM Features')
                MixedStyledText('AtomVM Features')
                  SingleStyledText('AtomVM Features')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('3.2	AtomVM Development	14')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.2')
            Tab('	')
            ReferenceField('AtomVM Development')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AtomVM Development')
                MixedStyledText('AtomVM Development')
                  SingleStyledText('AtomVM Development')
            Tab('	')
            ReferenceField('14')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('14')
        TableOfContentsEntry('3.3	Applications	16')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.3')
            Tab('	')
            ReferenceField('Applications')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Applications')
                MixedStyledText('Applications')
                  SingleStyledText('Applications')
            Tab('	')
            ReferenceField('16')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('16')
        TableOfContentsEntry('3.4	Core APIs	18')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.4')
            Tab('	')
            ReferenceField('Core APIs')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Core APIs')
                MixedStyledText('Core APIs')
                  SingleStyledText('Core APIs')
            Tab('	')
            ReferenceField('18')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('18')
        TableOfContentsEntry('3.5	ESP32-specific APIs	21')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.5')
            Tab('	')
            ReferenceField('ESP32-specific APIs')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('ESP32-specific APIs')
                MixedStyledText('ESP32-specific APIs')
                  SingleStyledText('ESP32-specific APIs')
            Tab('	')
            ReferenceField('21')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('21')
        TableOfContentsEntry('3.6	Peripherals	23')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.6')
            Tab('	')
            ReferenceField('Peripherals')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Peripherals')
                MixedStyledText('Peripherals')
                  SingleStyledText('Peripherals')
            Tab('	')
            ReferenceField('23')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('23')
        TableOfContentsEntry('3.7	Protocols	28')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.7')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.7')
            Tab('	')
            ReferenceField('Protocols')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Protocols')
                MixedStyledText('Protocols')
                  SingleStyledText('Protocols')
            Tab('	')
            ReferenceField('28')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('28')
        TableOfContentsEntry('4	Example Programs	35')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4')
            Tab('	')
            ReferenceField('Example Programs')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
            Tab('	')
            ReferenceField('35')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('35')
        TableOfContentsEntry('4.1	Erlang Examples	35')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.1')
            Tab('	')
            ReferenceField('Erlang Examples')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Erlang Examples')
                MixedStyledText('Erlang Examples')
                  SingleStyledText('Erlang Examples')
            Tab('	')
            ReferenceField('35')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('35')
        TableOfContentsEntry('4.2	ESP32 Examples	38')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.2')
            Tab('	')
            ReferenceField('ESP32 Examples')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('ESP32 Examples')
                MixedStyledText('ESP32 Examples')
                  SingleStyledText('ESP32 Examples')
            Tab('	')
            ReferenceField('38')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('38')
        TableOfContentsEntry('4.3	Flashing AtomVM Examples for...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.3')
            Tab('	')
            ReferenceField('Flashing AtomVM Examples for ESP...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Flashing AtomVM Examples for ESP...')
                MixedStyledText('Flashing AtomVM Examples for ESP...')
                  SingleStyledText('Flashing AtomVM Examples for ESP...')
            Tab('	')
            ReferenceField('38')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('38')
        TableOfContentsEntry('5	Network Programming Guide	45')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
            Tab('	')
            ReferenceField('Network Programming Guide')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Network Programming Guide')
                MixedStyledText('Network Programming Guide')
                  SingleStyledText('Network Programming Guide')
            Tab('	')
            ReferenceField('45')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('45')
        TableOfContentsEntry('5.1	Station (STA) mode	45')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.1')
            Tab('	')
            ReferenceField('Station (STA) mode')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Station (STA) mode')
                MixedStyledText('Station (STA) mode')
                  SingleStyledText('Station (STA) mode')
            Tab('	')
            ReferenceField('45')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('45')
        TableOfContentsEntry('5.2	AP mode	47')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.2')
            Tab('	')
            ReferenceField('AP mode')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AP mode')
                MixedStyledText('AP mode')
                  SingleStyledText('AP mode')
            Tab('	')
            ReferenceField('47')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('47')
        TableOfContentsEntry('5.3	STA+AP mode	49')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.3')
            Tab('	')
            ReferenceField('STA+AP mode')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('STA+AP mode')
                MixedStyledText('STA+AP mode')
                  SingleStyledText('STA+AP mode')
            Tab('	')
            ReferenceField('49')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('49')
        TableOfContentsEntry('5.4	SNTP Support	49')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.4')
            Tab('	')
            ReferenceField('SNTP Support')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('SNTP Support')
                MixedStyledText('SNTP Support')
                  SingleStyledText('SNTP Support')
            Tab('	')
            ReferenceField('49')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('49')
        TableOfContentsEntry('5.5	NVS Credentials	49')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.5')
            Tab('	')
            ReferenceField('NVS Credentials')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('NVS Credentials')
                MixedStyledText('NVS Credentials')
                  SingleStyledText('NVS Credentials')
            Tab('	')
            ReferenceField('49')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('49')
        TableOfContentsEntry('5.6	Stopping the Network	50')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.6')
            Tab('	')
            ReferenceField('Stopping the Network')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Stopping the Network')
                MixedStyledText('Stopping the Network')
                  SingleStyledText('Stopping the Network')
            Tab('	')
            ReferenceField('50')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('50')
        TableOfContentsEntry('6	Build Instructions	51')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6')
            Tab('	')
            ReferenceField('Build Instructions')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
            Tab('	')
            ReferenceField('51')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('51')
        TableOfContentsEntry('6.1	Downloading AtomVM	51')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.1')
            Tab('	')
            ReferenceField('Downloading AtomVM')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Downloading AtomVM')
                MixedStyledText('Downloading AtomVM')
                  SingleStyledText('Downloading AtomVM')
            Tab('	')
            ReferenceField('51')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('51')
        TableOfContentsEntry('6.2	Source code organization	51')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.2')
            Tab('	')
            ReferenceField('Source code organization')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Source code organization')
                MixedStyledText('Source code organization')
                  SingleStyledText('Source code organization')
            Tab('	')
            ReferenceField('51')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('51')
        TableOfContentsEntry('6.3	Building for Generic UNIX	52')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.3')
            Tab('	')
            ReferenceField('Building for Generic UNIX')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Building for Generic UNIX')
                MixedStyledText('Building for Generic UNIX')
                  SingleStyledText('Building for Generic UNIX')
            Tab('	')
            ReferenceField('52')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('52')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		i')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		i')
          MixedStyledText('		i')
            Tab('	')
            Tab('	')
            Field('i')
              SingleStyledText('i')
---------------------------------- page ii ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) TableOfContentsSection(style='table of contents')
         > (0,0,1,0,1) table of contents section [Sphinx] > DEFAULT
           (0,0,0,1,1) chapter [Sphinx] > DEFAULT
      (continued) TableOfContents()   table of contents
           > (0,0,0,0,2) table of contents [Sphinx] > default
        TableOfContentsEntry('6.4	Building for ESP32	53')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
        TableOfContentsEntry('6.5	Building for STM32	59')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.5')
            Tab('	')
            ReferenceField('Building for STM32')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Building for STM32')
                MixedStyledText('Building for STM32')
                  SingleStyledText('Building for STM32')
            Tab('	')
            ReferenceField('59')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('59')
        TableOfContentsEntry('7	AtomVM Internals	61')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('7')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
            Tab('	')
            ReferenceField('AtomVM Internals')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AtomVM Internals')
                MixedStyledText('AtomVM Internals')
                  SingleStyledText('AtomVM Internals')
            Tab('	')
            ReferenceField('61')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('61')
        TableOfContentsEntry('7.1	What is an Abstract Machine?...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.1')
            Tab('	')
            ReferenceField('What is an Abstract Machine?')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('What is an Abstract Machine?')
                MixedStyledText('What is an Abstract Machine?')
                  SingleStyledText('What is an Abstract Machine?')
            Tab('	')
            ReferenceField('61')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('61')
        TableOfContentsEntry('7.2	AtomVM Data Structures	62')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.2')
            Tab('	')
            ReferenceField('AtomVM Data Structures')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AtomVM Data Structures')
                MixedStyledText('AtomVM Data Structures')
                  SingleStyledText('AtomVM Data Structures')
            Tab('	')
            ReferenceField('62')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('62')
        TableOfContentsEntry('7.3	Runtime Execution Loop	63')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.3')
            Tab('	')
            ReferenceField('Runtime Execution Loop')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Runtime Execution Loop')
                MixedStyledText('Runtime Execution Loop')
                  SingleStyledText('Runtime Execution Loop')
            Tab('	')
            ReferenceField('63')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('63')
        TableOfContentsEntry('7.4	Module Loading	63')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.4')
            Tab('	')
            ReferenceField('Module Loading')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Module Loading')
                MixedStyledText('Module Loading')
                  SingleStyledText('Module Loading')
            Tab('	')
            ReferenceField('63')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('63')
        TableOfContentsEntry('7.5	Function Calls and Return Va...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.5')
            Tab('	')
            ReferenceField('Function Calls and Return Values')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Function Calls and Return Values')
                MixedStyledText('Function Calls and Return Values')
                  SingleStyledText('Function Calls and Return Values')
            Tab('	')
            ReferenceField('63')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('63')
        TableOfContentsEntry('7.6	Exception Handling	63')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.6')
            Tab('	')
            ReferenceField('Exception Handling')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Exception Handling')
                MixedStyledText('Exception Handling')
                  SingleStyledText('Exception Handling')
            Tab('	')
            ReferenceField('63')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('63')
        TableOfContentsEntry('7.7	The Scheduler	63')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.7')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.7')
            Tab('	')
            ReferenceField('The Scheduler')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('The Scheduler')
                MixedStyledText('The Scheduler')
                  SingleStyledText('The Scheduler')
            Tab('	')
            ReferenceField('63')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('63')
        TableOfContentsEntry('8	Memory Management	65')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('8')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8')
            Tab('	')
            ReferenceField('Memory Management')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
            Tab('	')
            ReferenceField('65')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('65')
        TableOfContentsEntry('8.1	The Context structure	65')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.1')
            Tab('	')
            ReferenceField('The Context structure')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('The Context structure')
                MixedStyledText('The Context structure')
                  SingleStyledText('The Context structure')
            Tab('	')
            ReferenceField('65')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('65')
        TableOfContentsEntry('8.2	Simple Terms	68')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.2')
            Tab('	')
            ReferenceField('Simple Terms')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Simple Terms')
                MixedStyledText('Simple Terms')
                  SingleStyledText('Simple Terms')
            Tab('	')
            ReferenceField('68')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('68')
        TableOfContentsEntry('8.3	Boxed terms	69')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.3')
            Tab('	')
            ReferenceField('Boxed terms')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Boxed terms')
                MixedStyledText('Boxed terms')
                  SingleStyledText('Boxed terms')
            Tab('	')
            ReferenceField('69')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('69')
        TableOfContentsEntry('8.4	Lists	75')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.4')
            Tab('	')
            ReferenceField('Lists')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Lists')
                MixedStyledText('Lists')
                  SingleStyledText('Lists')
            Tab('	')
            ReferenceField('75')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('75')
        TableOfContentsEntry('8.5	Special Stack Types	76')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.5')
            Tab('	')
            ReferenceField('Special Stack Types')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Special Stack Types')
                MixedStyledText('Special Stack Types')
                  SingleStyledText('Special Stack Types')
            Tab('	')
            ReferenceField('76')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('76')
        TableOfContentsEntry('8.6	Garbage Collection	77')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('8.6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8.6')
            Tab('	')
            ReferenceField('Garbage Collection')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Garbage Collection')
                MixedStyledText('Garbage Collection')
                  SingleStyledText('Garbage Collection')
            Tab('	')
            ReferenceField('77')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('77')
        TableOfContentsEntry('9	Packbeam Format	83')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('9')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9')
            Tab('	')
            ReferenceField('Packbeam Format')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Packbeam Format')
                MixedStyledText('Packbeam Format')
                  SingleStyledText('Packbeam Format')
            Tab('	')
            ReferenceField('83')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('83')
        TableOfContentsEntry('9.1	Overview	83')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('9.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9.1')
            Tab('	')
            ReferenceField('Overview')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Overview')
                MixedStyledText('Overview')
                  SingleStyledText('Overview')
            Tab('	')
            ReferenceField('83')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('83')
        TableOfContentsEntry('9.2	Packbeam Header	83')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('9.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9.2')
            Tab('	')
            ReferenceField('Packbeam Header')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Packbeam Header')
                MixedStyledText('Packbeam Header')
                  SingleStyledText('Packbeam Header')
            Tab('	')
            ReferenceField('83')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('83')
        TableOfContentsEntry('9.3	File encodings	84')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('9.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9.3')
            Tab('	')
            ReferenceField('File encodings')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('File encodings')
                MixedStyledText('File encodings')
                  SingleStyledText('File encodings')
            Tab('	')
            ReferenceField('84')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('84')
        TableOfContentsEntry('10	API Reference Documentation	8...')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('10')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('10')
            Tab('	')
            ReferenceField('API Reference Documentation')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('API Reference Documentation')
                MixedStyledText('API Reference Documentation')
                  SingleStyledText('API Reference Documentation')
            Tab('	')
            ReferenceField('87')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('87')
        TableOfContentsEntry('10.1	Erlang Libraries	87')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('10.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('10.1')
            Tab('	')
            ReferenceField('Erlang Libraries')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Erlang Libraries')
                MixedStyledText('Erlang Libraries')
                  SingleStyledText('Erlang Libraries')
            Tab('	')
            ReferenceField('87')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('87')
        TableOfContentsEntry('10.2	AtomVMLib (C)	87')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('10.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('10.2')
            Tab('	')
            ReferenceField('AtomVMLib (C)')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('AtomVMLib (C)')
                MixedStyledText('AtomVMLib (C)')
                  SingleStyledText('AtomVMLib (C)')
            Tab('	')
            ReferenceField('87')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('87')
        TableOfContentsEntry('11	Contributing	89')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('11')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
            Tab('	')
            ReferenceField('Contributing')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Contributing')
                MixedStyledText('Contributing')
                  SingleStyledText('Contributing')
            Tab('	')
            ReferenceField('89')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('89')
        TableOfContentsEntry('11.1	Git Recommended Practices	8...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('11.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11.1')
            Tab('	')
            ReferenceField('Git Recommended Practices')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Git Recommended Practices')
                MixedStyledText('Git Recommended Practices')
                  SingleStyledText('Git Recommended Practices')
            Tab('	')
            ReferenceField('89')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('89')
        TableOfContentsEntry('11.2	Coding Style	89')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('11.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11.2')
            Tab('	')
            ReferenceField('Coding Style')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Coding Style')
                MixedStyledText('Coding Style')
                  SingleStyledText('Coding Style')
            Tab('	')
            ReferenceField('89')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('89')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('ii')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        Field('ii')
          SingleStyledText('ii')
---------------------------------- page 1 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    DocumentTree()   index.rst   <document>
      Paragraph('Welcome to AtomVM, the Erlang vi...')   index.rst:10   <paragraph>
           > (0,0,0,0,2) body [Sphinx] > default
          MixedStyledText('Welcome to AtomVM, the Erlang vi...')
            MixedStyledText('Welcome to AtomVM, the Erlang vi...')
              SingleStyledText('Welcome to AtomVM, the Erlang vi...')
      Paragraph('AtomVM is a lightweight implemen...')   index.rst:12   <paragraph>
           > (0,0,0,0,2) body [Sphinx] > default
          MixedStyledText('AtomVM is a lightweight implemen...')
            MixedStyledText('AtomVM is a lightweight implemen...')
              SingleStyledText('AtomVM is a lightweight implemen...')
      Paragraph('AtomVM includes many advanced fe...')   index.rst:14   <paragraph>
           > (0,0,0,0,2) body [Sphinx] > default
          MixedStyledText('AtomVM includes many advanced fe...')
            MixedStyledText('AtomVM includes many advanced fe...')
              SingleStyledText('AtomVM includes many advanced fe...')
      Admonition()   index.rst   <warning>
           > (0,0,0,1,2) warning admonition [Sphinx] > boxed builtin admonition
             (0,0,0,0,2) admonition [Sphinx] > DEFAULT
        Paragraph('Warning AtomVM is currently in A...')
             > (0,0,0,0,2) body [Sphinx] > default
            MixedStyledText('Warning AtomVM is currently in A...')
              MixedStyledText('Warning AtomVM is currently in A...')
                MixedStyledText('Warning', style='inline title')
                     x (0,0,1,1,3) warning admonition inline title
                     > (0,0,1,0,3) admonition inline title [Sphinx] > admonition title
                  SingleStyledText('Warning')
                SingleStyledText(' ')
                MixedStyledText('AtomVM is currently in Alpha sta...')
                  SingleStyledText('AtomVM is currently in Alpha sta...')
      Paragraph('[PDF][EPUB]')   index.rst:18   <paragraph>
           > (0,0,0,0,2) body [Sphinx] > default
          MixedStyledText('[PDF][EPUB]')
            MixedStyledText('[PDF][EPUB]')
              SingleStyledText('[')
              MixedStyledText('PDF', style='external link')   <reference>
                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                SingleStyledText('PDF')
              SingleStyledText('][')
              MixedStyledText('EPUB', style='external link')   <reference>
                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                SingleStyledText('EPUB')
              SingleStyledText(']')
      StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%welcome-to-atomvm')   <start_of_file>
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		1')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		1')
          MixedStyledText('		1')
            Tab('	')
            Tab('	')
            Field('1')
              SingleStyledText('1')
---------------------------------- page 2 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%welcome-to-atomvm')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2		Chapter ​.  ​')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2		Chapter ​.  ​')
          MixedStyledText('2		Chapter ​.  ​')
            Field('2')
              SingleStyledText('2')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
---------------------------------- page 3 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 1', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 1')
        MixedStyledText('Chapter 1')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('1', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('1')
  Paragraph('Welcome to AtomVM!', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Welcome to AtomVM!')
        MixedStyledText('Welcome to AtomVM!')
          MixedStyledText('Welcome to AtomVM!')
            SingleStyledText('Welcome to AtomVM!')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%welcome-to-atomvm')   <start_of_file>
          Section(id='%welcome-to-atomvm#welcome-to-atomvm')   welcome-to-atomvm.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('Welcome to AtomVM, the Erlang vi...')   welcome-to-atomvm.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('Welcome to AtomVM, the Erlang vi...')
                  MixedStyledText('Welcome to AtomVM, the Erlang vi...')
                    SingleStyledText('Welcome to AtomVM, the Erlang vi...')
            Section(id='%welcome-to-atomvm#what-is-atomvm')   welcome-to-atomvm.md:11   <section>
              Heading('1.1 What is AtomVM?')   welcome-to-atomvm.md:11   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.1 ')
                    SingleStyledText('1.1')
                    SingleStyledText(' ')
                  MixedStyledText('What is AtomVM?')
                    MixedStyledText('What is AtomVM?')
                      SingleStyledText('What is AtomVM?')
              Paragraph('AtomVM is a ground-up implementa...')   welcome-to-atomvm.md:13   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM is a ground-up implementa...')
                    MixedStyledText('AtomVM is a ground-up implementa...')
                      SingleStyledText('AtomVM is a ground-up implementa...')
                      MixedStyledText('Bogdan Erlang Abstract Machine', style='external link')   welcome-to-atomvm.md:13   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Bogdan Erlang Abstract Machine')
                      SingleStyledText(' (a.k.a the BEAM) and is designe...')
                      MixedStyledText('Espressif', style='external link')   welcome-to-atomvm.md:13   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Espressif')
                      SingleStyledText(' ')
                      MixedStyledText('ESP32', style='external link')   welcome-to-atomvm.md:13   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('ESP32')
                      SingleStyledText(' and ')
                      MixedStyledText('ST Microelectronics', style='external link')   welcome-to-atomvm.md:13   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('ST Microelectronics')
                      SingleStyledText(' ')
                      MixedStyledText('STM32', style='external link')   welcome-to-atomvm.md:13   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('STM32')
                      SingleStyledText(' micro-controllers.  It allows d...')
              Paragraph('AtomVM features include:')   welcome-to-atomvm.md:15   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM features include:')
                    MixedStyledText('AtomVM features include:')
                      SingleStyledText('AtomVM features include:')
              List(style='bulleted')   welcome-to-atomvm.md:17   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   welcome-to-atomvm.md:17   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('An Erlang runtime, capable of ex...')   welcome-to-atomvm.md:17   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('An Erlang runtime, capable of ex...')
                          MixedStyledText('An Erlang runtime, capable of ex...')
                            SingleStyledText('An Erlang runtime, capable of ex...')
                ListItem()   welcome-to-atomvm.md:18   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Support for all the major Erlang...')   welcome-to-atomvm.md:18   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Support for all the major Erlang...')
                          MixedStyledText('Support for all the major Erlang...')
                            SingleStyledText('Support for all the major Erlang...')
                ListItem()   welcome-to-atomvm.md:19   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('A memory-managed environment, wi...')   welcome-to-atomvm.md:19   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('A memory-managed environment, wi...')
                          MixedStyledText('A memory-managed environment, wi...')
                            SingleStyledText('A memory-managed environment, wi...')
                ListItem()   welcome-to-atomvm.md:20   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Support for truly functional pro...')   welcome-to-atomvm.md:20   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Support for truly functional pro...')
                          MixedStyledText('Support for truly functional pro...')
                            SingleStyledText('Support for truly functional pro...')
                ListItem()   welcome-to-atomvm.md:21   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('A concurrency-oriented platform,...')   welcome-to-atomvm.md:21   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('A concurrency-oriented platform,...')
                          MixedStyledText('A concurrency-oriented platform,...')
                            SingleStyledText('A concurrency-oriented platform,...')
                ListItem()   welcome-to-atomvm.md:22   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('A rich set of networking APIs, f...')   welcome-to-atomvm.md:22   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('A rich set of networking APIs, f...')
                          MixedStyledText('A rich set of networking APIs, f...')
                            SingleStyledText('A rich set of networking APIs, f...')
                ListItem()   welcome-to-atomvm.md:23   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('A rich set of APIs for interfaci...')   welcome-to-atomvm.md:23   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('A rich set of APIs for interfaci...')
                          MixedStyledText('A rich set of APIs for interfaci...')
                            SingleStyledText('A rich set of APIs for interfaci...')
                ListItem()   welcome-to-atomvm.md:24   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('And more!')   welcome-to-atomvm.md:24   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('And more!')
                          MixedStyledText('And more!')
                            SingleStyledText('And more!')
            Section(id='%welcome-to-atomvm#why-erlang-elixir')   welcome-to-atomvm.md:26   <section>
              Heading('1.2 Why Erlang/Elixir?')   welcome-to-atomvm.md:26   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.2 ')
                    SingleStyledText('1.2')
                    SingleStyledText(' ')
                  MixedStyledText('Why Erlang/Elixir?')
                    MixedStyledText('Why Erlang/Elixir?')
                      SingleStyledText('Why Erlang/Elixir?')
              Paragraph('The environments on which AtomVM...')   welcome-to-atomvm.md:28   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The environments on which AtomVM...')
                    MixedStyledText('The environments on which AtomVM...')
                      SingleStyledText('The environments on which AtomVM...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		3')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		3')
          MixedStyledText('		3')
            Tab('	')
            Tab('	')
            Field('3')
              SingleStyledText('3')
---------------------------------- page 4 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%welcome-to-atomvm')   <start_of_file>
          (continued) Section(id='%welcome-to-atomvm#welcome-to-atomvm')   welcome-to-atomvm.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%welcome-to-atomvm#why-erlang-elixir')   welcome-to-atomvm.md:26   <section>
              Paragraph('However, because the BEAM is pro...')   welcome-to-atomvm.md:30   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              Paragraph('In many ways, the programming mo...')   welcome-to-atomvm.md:32   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In many ways, the programming mo...')
                    MixedStyledText('In many ways, the programming mo...')
                      SingleStyledText('In many ways, the programming mo...')
              Paragraph('As an implementation of the BEAM...')   welcome-to-atomvm.md:34   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('As an implementation of the BEAM...')
                    MixedStyledText('As an implementation of the BEAM...')
                      SingleStyledText('As an implementation of the BEAM...')
              Paragraph('In addition, because it is targe...')   welcome-to-atomvm.md:36   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In addition, because it is targe...')
                    MixedStyledText('In addition, because it is targe...')
                      SingleStyledText('In addition, because it is targe...')
              Paragraph('Finally, one of the exciting asp...')   welcome-to-atomvm.md:38   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Finally, one of the exciting asp...')
                    MixedStyledText('Finally, one of the exciting asp...')
                      SingleStyledText('Finally, one of the exciting asp...')
              Paragraph('We think you will agree that Ato...')   welcome-to-atomvm.md:40   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('We think you will agree that Ato...')
                    MixedStyledText('We think you will agree that Ato...')
                      SingleStyledText('We think you will agree that Ato...')
            Section(id='%welcome-to-atomvm#design-philosophy')   welcome-to-atomvm.md:42   <section>
              Heading('1.3 Design Philosophy')   welcome-to-atomvm.md:42   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.3 ')
                    SingleStyledText('1.3')
                    SingleStyledText(' ')
                  MixedStyledText('Design Philosophy')
                    MixedStyledText('Design Philosophy')
                      SingleStyledText('Design Philosophy')
              Paragraph('AtomVM is designed from the star...')   welcome-to-atomvm.md:44   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM is designed from the star...')
                    MixedStyledText('AtomVM is designed from the star...')
                      SingleStyledText('AtomVM is designed from the star...')
              Paragraph('From the developer’s point of vi...')   welcome-to-atomvm.md:46   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('From the developer’s point of vi...')
                    MixedStyledText('From the developer’s point of vi...')
                      SingleStyledText('From the developer’s point of vi...')
            Section(id='%welcome-to-atomvm#licensing')   welcome-to-atomvm.md:48   <section>
              Heading('1.4 Licensing')   welcome-to-atomvm.md:48   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.4 ')
                    SingleStyledText('1.4')
                    SingleStyledText(' ')
                  MixedStyledText('Licensing')
                    MixedStyledText('Licensing')
                      SingleStyledText('Licensing')
              Paragraph('AtomVM is licensed under the ter...')   welcome-to-atomvm.md:50   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM is licensed under the ter...')
                    MixedStyledText('AtomVM is licensed under the ter...')
                      SingleStyledText('AtomVM is licensed under the ter...')
                      MixedStyledText('Apache2', style='external link')   welcome-to-atomvm.md:50   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Apache2')
                      SingleStyledText(' and ')
                      MixedStyledText('LGPLv2', style='external link')   welcome-to-atomvm.md:50   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('LGPLv2')
                      SingleStyledText(' licenses.')
            Section(id='%welcome-to-atomvm#source-code')   welcome-to-atomvm.md:52   <section>
              Heading('1.5 Source Code')   welcome-to-atomvm.md:52   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.5 ')
                    SingleStyledText('1.5')
                    SingleStyledText(' ')
                  MixedStyledText('Source Code')
                    MixedStyledText('Source Code')
                      SingleStyledText('Source Code')
              Paragraph('The AtomVM Github Repository con...')   welcome-to-atomvm.md:54   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM Github Repository con...')
                    MixedStyledText('The AtomVM Github Repository con...')
                      SingleStyledText('The ')
                      MixedStyledText('AtomVM Github Repository', style='external link')   welcome-to-atomvm.md:54   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('AtomVM Github Repository')
                      SingleStyledText(' contains the AtomVM source code...')
                      Reference('Build Instructions')   <reference>
                           > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                        MixedStyledText('Build Instructions')
                          MixedStyledText('Build Instructions')   <inline>
                            SingleStyledText('Build Instructions')
                      SingleStyledText(' contains instructions for build...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4		Chapter 1.  Welcome to AtomVM...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4		Chapter 1.  Welcome to AtomVM...')
          MixedStyledText('4		Chapter 1.  Welcome to AtomVM...')
            Field('4')
              SingleStyledText('4')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('1')
              SingleStyledText('1')
            SingleStyledText('.  ')
            Field('Welcome to AtomVM!')
              MixedStyledText('Welcome to AtomVM!')
                MixedStyledText('Welcome to AtomVM!')
                  SingleStyledText('Welcome to AtomVM!')
---------------------------------- page 5 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%welcome-to-atomvm')   <start_of_file>
          (continued) Section(id='%welcome-to-atomvm#welcome-to-atomvm')   welcome-to-atomvm.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%welcome-to-atomvm#source-code')   welcome-to-atomvm.md:52   <section>
              (continued) Paragraph('The AtomVM Github Repository con...')   welcome-to-atomvm.md:54   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
            Section(id='%welcome-to-atomvm#contributing')   welcome-to-atomvm.md:56   <section>
              Heading('1.6 Contributing')   welcome-to-atomvm.md:56   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.6 ')
                    SingleStyledText('1.6')
                    SingleStyledText(' ')
                  MixedStyledText('Contributing')
                    MixedStyledText('Contributing')
                      SingleStyledText('Contributing')
              Paragraph('The AtomVM community welcomes co...')   welcome-to-atomvm.md:58   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM community welcomes co...')
                    MixedStyledText('The AtomVM community welcomes co...')
                      SingleStyledText('The AtomVM community welcomes co...')
                      Reference('contributing guidelines')   <reference>
                           > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                        MixedStyledText('contributing guidelines')
                          MixedStyledText('contributing guidelines')   <inline>
                            SingleStyledText('contributing guidelines')
                      SingleStyledText(' for information about how to co...')
              Paragraph('AtomVM developers can be reached...')   welcome-to-atomvm.md:60   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM developers can be reached...')
                    MixedStyledText('AtomVM developers can be reached...')
                      SingleStyledText('AtomVM developers can be reached...')
            Section(id='%welcome-to-atomvm#where-to-go-from-here')   welcome-to-atomvm.md:62   <section>
              Heading('1.7 Where to go from here')   welcome-to-atomvm.md:62   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.7 ')
                    SingleStyledText('1.7')
                    SingleStyledText(' ')
                  MixedStyledText('Where to go from here')
                    MixedStyledText('Where to go from here')
                      SingleStyledText('Where to go from here')
              Paragraph('The following guides provide mor...')   welcome-to-atomvm.md:64   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following guides provide mor...')
                    MixedStyledText('The following guides provide mor...')
                      SingleStyledText('The following guides provide mor...')
              List(style='bulleted')   welcome-to-atomvm.md:66   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   welcome-to-atomvm.md:66   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Getting Started Guide')   welcome-to-atomvm.md:66   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Getting Started Guide')
                          MixedStyledText('Getting Started Guide')
                            Reference('Getting Started Guide')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Getting Started Guide')
                                MixedStyledText('Getting Started Guide')   <inline>
                                  SingleStyledText('Getting Started Guide')
                ListItem()   welcome-to-atomvm.md:67   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Programmers Guide')   welcome-to-atomvm.md:67   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Programmers Guide')
                          MixedStyledText('Programmers Guide')
                            Reference('Programmers Guide')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Programmers Guide')
                                MixedStyledText('Programmers Guide')   <inline>
                                  SingleStyledText('Programmers Guide')
                ListItem()   welcome-to-atomvm.md:68   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Example Programs')   welcome-to-atomvm.md:68   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Example Programs')
                          MixedStyledText('Example Programs')
                            Reference('Example Programs')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Example Programs')
                                MixedStyledText('Example Programs')   <inline>
                                  SingleStyledText('Example Programs')
                ListItem()   welcome-to-atomvm.md:69   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Build Instructions')   welcome-to-atomvm.md:69   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Build Instructions')
                          MixedStyledText('Build Instructions')
                            Reference('Build Instructions')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Build Instructions')
                                MixedStyledText('Build Instructions')   <inline>
                                  SingleStyledText('Build Instructions')
        StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('1.6.  Contributing		5')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('1.6.  Contributing		5')
          MixedStyledText('1.6.  Contributing		5')
            Field('1.6')
              SingleStyledText('1.6')
            SingleStyledText('.  ')
            Field('Contributing')
              MixedStyledText('Contributing')
                MixedStyledText('Contributing')
                  SingleStyledText('Contributing')
            Tab('	')
            Tab('	')
            Field('5')
              SingleStyledText('5')
---------------------------------- page 6 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6		Chapter 1.  Welcome to AtomVM...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6		Chapter 1.  Welcome to AtomVM...')
          MixedStyledText('6		Chapter 1.  Welcome to AtomVM...')
            Field('6')
              SingleStyledText('6')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('1')
              SingleStyledText('1')
            SingleStyledText('.  ')
            Field('Welcome to AtomVM!')
              MixedStyledText('Welcome to AtomVM!')
                MixedStyledText('Welcome to AtomVM!')
                  SingleStyledText('Welcome to AtomVM!')
---------------------------------- page 7 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 2', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 2')
        MixedStyledText('Chapter 2')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('2', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('2')
  Paragraph('Getting Started Guide', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Getting Started Guide')
        MixedStyledText('Getting Started Guide')
          MixedStyledText('Getting Started Guide')
            SingleStyledText('Getting Started Guide')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
          Section(id='%getting-started-guide#getting-started-guide')   getting-started-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('The getting started is broken up...')   getting-started-guide.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The getting started is broken up...')
                  MixedStyledText('The getting started is broken up...')
                    SingleStyledText('The getting started is broken up...')
            List(style='bulleted')   getting-started-guide.md:11   <bullet_list>
                 > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
              ListItem()   getting-started-guide.md:11   <list_item>
                   x (0,0,1,0,4) bulleted list item
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                       (0,0,0,0,2) list item label [Sphinx] > default
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()
                     > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                  Paragraph('Getting Started on the ESP32 pla...')   getting-started-guide.md:11   <paragraph>
                       > (0,0,0,0,5) list item paragraph [Sphinx] > default
                         (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Getting Started on the ESP32 pla...')
                        MixedStyledText('Getting Started on the ESP32 pla...')
                          SingleStyledText('Getting Started on the ESP32 pla...')
              ListItem()   getting-started-guide.md:12   <list_item>
                   x (0,0,1,0,4) bulleted list item
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                       (0,0,0,0,2) list item label [Sphinx] > default
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()
                     > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                  Paragraph('Getting Started on the STM32 pla...')   getting-started-guide.md:12   <paragraph>
                       > (0,0,0,0,5) list item paragraph [Sphinx] > default
                         (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Getting Started on the STM32 pla...')
                        MixedStyledText('Getting Started on the STM32 pla...')
                          SingleStyledText('Getting Started on the STM32 pla...')
              ListItem()   getting-started-guide.md:13   <list_item>
                   x (0,0,1,0,4) bulleted list item
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                       (0,0,0,0,2) list item label [Sphinx] > default
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()
                     > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                  Paragraph('Getting Started on the Generic U...')   getting-started-guide.md:13   <paragraph>
                       > (0,0,0,0,5) list item paragraph [Sphinx] > default
                         (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Getting Started on the Generic U...')
                        MixedStyledText('Getting Started on the Generic U...')
                          SingleStyledText('Getting Started on the Generic U...')
            Section(id='%getting-started-guide#getting-started-on-the-esp32-platform')   getting-started-guide.md:15   <section>
              Heading('2.1 Getting Started on the ESP32...')   getting-started-guide.md:15   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.1 ')
                    SingleStyledText('2.1')
                    SingleStyledText(' ')
                  MixedStyledText('Getting Started on the ESP32 pla...')
                    MixedStyledText('Getting Started on the ESP32 pla...')
                      SingleStyledText('Getting Started on the ESP32 pla...')
              Paragraph('The AtomVM virtual machine is su...')   getting-started-guide.md:17   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM virtual machine is su...')
                    MixedStyledText('The AtomVM virtual machine is su...')
                      SingleStyledText('The AtomVM virtual machine is su...')
                      MixedStyledText('Espressif', style='external link')   getting-started-guide.md:17   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Espressif')
                      SingleStyledText(' ')
                      MixedStyledText('ESP32', style='external link')   getting-started-guide.md:17   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('ESP32')
                      SingleStyledText(' platform, allowing users to wri...')
              Paragraph('These instructions cover how to ...')   getting-started-guide.md:19   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('These instructions cover how to ...')
                    MixedStyledText('These instructions cover how to ...')
                      SingleStyledText('These instructions cover how to ...')
              Paragraph('For most applications, you shoul...')   getting-started-guide.md:21   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('For most applications, you shoul...')
                    MixedStyledText('For most applications, you shoul...')
                      SingleStyledText('For most applications, you shoul...')
              Section(id='%getting-started-guide#requirements')   getting-started-guide.md:23   <section>
                Heading('2.1.1 Requirements')   getting-started-guide.md:23   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.1 ')
                      SingleStyledText('2.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('Requirements')
                      MixedStyledText('Requirements')
                        SingleStyledText('Requirements')
                Paragraph('Deployment of AtomVM application...')   getting-started-guide.md:25   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Deployment of AtomVM application...')
                      MixedStyledText('Deployment of AtomVM application...')
                        SingleStyledText('Deployment of AtomVM application...')
                List(style='bulleted')   getting-started-guide.md:27   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   getting-started-guide.md:27   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('A computer running MacOS or Linu...')   getting-started-guide.md:27   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('A computer running MacOS or Linu...')
                            MixedStyledText('A computer running MacOS or Linu...')
                              SingleStyledText('A computer running MacOS or Linu...')
                  ListItem()   getting-started-guide.md:28   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('An ESP32 module with a USB/UART ...')   getting-started-guide.md:28   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('An ESP32 module with a USB/UART ...')
                            MixedStyledText('An ESP32 module with a USB/UART ...')
                              SingleStyledText('An ESP32 module with a USB/UART ...')
                  ListItem()   getting-started-guide.md:29   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('A USB cable capable of connectin...')   getting-started-guide.md:29   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('A USB cable capable of connectin...')
                            MixedStyledText('A USB cable capable of connectin...')
                              SingleStyledText('A USB cable capable of connectin...')
                  ListItem()   getting-started-guide.md:30   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('The esptool program, for flashin...')   getting-started-guide.md:30   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('The esptool program, for flashin...')
                            MixedStyledText('The esptool program, for flashin...')
                              SingleStyledText('The ')
                              MixedStyledText('esptool', style='external link')   getting-started-guide.md:30   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('esptool', style='monospaced')   getting-started-guide.md:30   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('esptool')
                              SingleStyledText(' program, for flashing the AtomV...')
                  ListItem()   getting-started-guide.md:31   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('An Erlang/OTP release (21, 22, o...')   getting-started-guide.md:31   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('An Erlang/OTP release (21, 22, o...')
                            MixedStyledText('An Erlang/OTP release (21, 22, o...')
                              SingleStyledText('An ')
                              MixedStyledText('Erlang/OTP', style='external link')   getting-started-guide.md:31   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                SingleStyledText('Erlang/OTP')
                              SingleStyledText(' release (21, 22, or 23);')
                  ListItem()   getting-started-guide.md:32   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('A serial console program, such a...')   getting-started-guide.md:32   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('A serial console program, such a...')
                            MixedStyledText('A serial console program, such a...')
                              SingleStyledText('A serial console program, such a...')
                              MixedStyledText('minicom', style='monospaced')   getting-started-guide.md:32   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('minicom')
                              SingleStyledText(' or ')
                              MixedStyledText('screen', style='monospaced')   getting-started-guide.md:32   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('screen')
                              SingleStyledText(', so that you can view console o...')
                  ListItem()   getting-started-guide.md:33   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('(optional) For Erlang programs, ...')   getting-started-guide.md:33   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('(optional) For Erlang programs, ...')
                            MixedStyledText('(optional) For Erlang programs, ...')
                              SingleStyledText('(optional) For Erlang programs, ')
                              MixedStyledText('rebar3', style='external link')   getting-started-guide.md:33   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('rebar3', style='monospaced')   getting-started-guide.md:33   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('rebar3')
                              SingleStyledText(';')
                  ListItem()   getting-started-guide.md:34   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('(optional) For Elixir programs, ...')   getting-started-guide.md:34   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('(optional) For Elixir programs, ...')
                            MixedStyledText('(optional) For Elixir programs, ...')
                              SingleStyledText('(optional) For Elixir programs, ')
                              MixedStyledText('mix', style='external link')   getting-started-guide.md:34   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('mix', style='monospaced')   getting-started-guide.md:34   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('mix')
                              SingleStyledText(', which ships with the Elixir ru...')
              Section(id='%getting-started-guide#deployment-overview')   getting-started-guide.md:36   <section>
                Heading('2.1.2 Deployment Overview')   getting-started-guide.md:36   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.2 ')
                      SingleStyledText('2.1.2')
                      SingleStyledText(' ')
                    MixedStyledText('Deployment Overview')
                      MixedStyledText('Deployment Overview')
                        SingleStyledText('Deployment Overview')
                Paragraph('The ES32 AtomVM virtual machine ...')   getting-started-guide.md:38   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The ES32 AtomVM virtual machine ...')
                      MixedStyledText('The ES32 AtomVM virtual machine ...')
                        SingleStyledText('The ES32 AtomVM virtual machine ...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		7')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		7')
          MixedStyledText('		7')
            Tab('	')
            Tab('	')
            Field('7')
              SingleStyledText('7')
---------------------------------- page 8 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
          (continued) Section(id='%getting-started-guide#getting-started-guide')   getting-started-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%getting-started-guide#getting-started-on-the-esp32-platform')   getting-started-guide.md:15   <section>
              (continued) Section(id='%getting-started-guide#deployment-overview')   getting-started-guide.md:36   <section>
                Paragraph('The AtomVM virtual machine is im...')   getting-started-guide.md:40   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('AtomVM developers will typically...')   getting-started-guide.md:42   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM developers will typically...')
                      MixedStyledText('AtomVM developers will typically...')
                        SingleStyledText('AtomVM developers will typically...')
                        MixedStyledText('.avm', style='monospaced')   getting-started-guide.md:42   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.avm')
                        SingleStyledText(') files.  This packbeam file is ...')
                        MixedStyledText('0x210000', style='monospaced')   getting-started-guide.md:42   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x210000')
                        SingleStyledText('.  When AtomVM starts, it will l...')
                        MixedStyledText('start/0', style='monospaced')   getting-started-guide.md:42   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function.  Once that module is ...')
                Paragraph('The following diagram provides a...')   getting-started-guide.md:44   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following diagram provides a...')
                      MixedStyledText('The following diagram provides a...')
                        SingleStyledText('The following diagram provides a...')
                CodeBlock('|               |\n+-------------...')   getting-started-guide.md:46   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('|               |\n+-------------...')
                      MixedStyledText('|               |\n+-------------...')
                        Token('|               |\n+-------------...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Deploying an AtomVM application ...')   getting-started-guide.md:66   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Deploying an AtomVM application ...')
                      MixedStyledText('Deploying an AtomVM application ...')
                        SingleStyledText('Deploying an AtomVM application ...')
                List(style='enumerated')   getting-started-guide.md:68   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   getting-started-guide.md:68   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Connecting the ESP32 device;')   getting-started-guide.md:68   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Connecting the ESP32 device;')
                            MixedStyledText('Connecting the ESP32 device;')
                              SingleStyledText('Connecting the ESP32 device;')
                  ListItem()   getting-started-guide.md:69   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Deploying the AtomVM virtual mac...')   getting-started-guide.md:69   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Deploying the AtomVM virtual mac...')
                            MixedStyledText('Deploying the AtomVM virtual mac...')
                              SingleStyledText('Deploying the AtomVM virtual mac...')
                  ListItem()   getting-started-guide.md:70   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('3.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('3.')
                          SingleStyledText('3')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Deploying an AtomVM application ...')   getting-started-guide.md:70   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Deploying an AtomVM application ...')
                            MixedStyledText('Deploying an AtomVM application ...')
                              SingleStyledText('Deploying an AtomVM application ...')
                Paragraph('These steps are described in mor...')   getting-started-guide.md:72   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('These steps are described in mor...')
                      MixedStyledText('These steps are described in mor...')
                        SingleStyledText('These steps are described in mor...')
              Section(id='%getting-started-guide#connecting-the-esp32-device')   getting-started-guide.md:74   <section>
                Heading('2.1.3 Connecting the ESP32 devic...')   getting-started-guide.md:74   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.3 ')
                      SingleStyledText('2.1.3')
                      SingleStyledText(' ')
                    MixedStyledText('Connecting the ESP32 device')
                      MixedStyledText('Connecting the ESP32 device')
                        SingleStyledText('Connecting the ESP32 device')
                Paragraph('Connect the ESP32 to your develo...')   getting-started-guide.md:76   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Connect the ESP32 to your develo...')
                      MixedStyledText('Connect the ESP32 to your develo...')
                        SingleStyledText('Connect the ESP32 to your develo...')
                CodeBlock('+---------------+\n| laptop or PC...')   getting-started-guide.md:78   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+---------------+\n| laptop or PC...')
                      MixedStyledText('+---------------+\n| laptop or PC...')
                        Token('+---------------+\n| laptop or PC...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   getting-started-guide.md:87   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. There are a wide variety o...')   getting-started-guide.md:87   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. There are a wide variety o...')
                        MixedStyledText('Note. There are a wide variety o...')
                          SingleStyledText('Note. There are a wide variety o...')
                          MixedStyledText('Espressif ESP32 DevKit', style='external link')   getting-started-guide.md:87   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('Espressif ESP32 DevKit')
                          SingleStyledText('.')
                Paragraph('Consult your local development b...')   getting-started-guide.md:89   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Consult your local development b...')
                      MixedStyledText('Consult your local development b...')
                        SingleStyledText('Consult your local development b...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8		Chapter 2.  Getting Started G...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8		Chapter 2.  Getting Started G...')
          MixedStyledText('8		Chapter 2.  Getting Started G...')
            Field('8')
              SingleStyledText('8')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('Getting Started Guide')
              MixedStyledText('Getting Started Guide')
                MixedStyledText('Getting Started Guide')
                  SingleStyledText('Getting Started Guide')
---------------------------------- page 9 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
          (continued) Section(id='%getting-started-guide#getting-started-guide')   getting-started-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%getting-started-guide#getting-started-on-the-esp32-platform')   getting-started-guide.md:15   <section>
              Section(id='%getting-started-guide#deploying-the-atomvm-virtual-machine')   getting-started-guide.md:91   <section>
                Heading('2.1.4 Deploying the AtomVM virtu...')   getting-started-guide.md:91   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                Paragraph('The following methods can be use...')   getting-started-guide.md:93   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following methods can be use...')
                      MixedStyledText('The following methods can be use...')
                        SingleStyledText('The following methods can be use...')
                List(style='enumerated')   getting-started-guide.md:95   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   getting-started-guide.md:95   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Flashing a binary image;')   getting-started-guide.md:95   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Flashing a binary image;')
                            MixedStyledText('Flashing a binary image;')
                              SingleStyledText('Flashing a binary image;')
                  ListItem()   getting-started-guide.md:96   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Building from source.')   getting-started-guide.md:96   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Building from source.')
                            MixedStyledText('Building from source.')
                              SingleStyledText('Building from source.')
                Section(id='%getting-started-guide#flashing-a-binary-images')   getting-started-guide.md:98   <section>
                  Heading('Flashing a binary images')   getting-started-guide.md:98   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Flashing a binary images')
                        MixedStyledText('Flashing a binary images')
                          SingleStyledText('Flashing a binary images')
                  Paragraph('Flashing the ESP32 using a pre-b...')   getting-started-guide.md:100   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Flashing the ESP32 using a pre-b...')
                        MixedStyledText('Flashing the ESP32 using a pre-b...')
                          SingleStyledText('Flashing the ESP32 using a pre-b...')
                  Paragraph('We recommend first erasing any e...')   getting-started-guide.md:102   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('We recommend first erasing any e...')
                        MixedStyledText('We recommend first erasing any e...')
                          SingleStyledText('We recommend first erasing any e...')
                  CodeBlock('shell$ esptool.py --chip esp32 -...')   getting-started-guide.md:104   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ esptool.py --chip esp32 -...')
                        MixedStyledText('shell$ esptool.py --chip esp32 -...')
                          Token('shell$ esptool.py --chip esp32 -...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   getting-started-guide.md:107   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Specify the device port a...')   getting-started-guide.md:107   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Specify the device port a...')
                          MixedStyledText('Note.  Specify the device port a...')
                            SingleStyledText('Note.  Specify the device port a...')
                  Paragraph('Next, download the latest stable...')   getting-started-guide.md:109   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Next, download the latest stable...')
                        MixedStyledText('Next, download the latest stable...')
                          SingleStyledText('Next, download the latest stable...')
                          MixedStyledText('AtomVM web site', style='external link')   getting-started-guide.md:109   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM web site')
                          SingleStyledText('.')
                  StaticGroupedFlowables(style='block quote')   getting-started-guide.md:111   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Nightly images may be uns...')   getting-started-guide.md:111   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Nightly images may be uns...')
                          MixedStyledText('Note.  Nightly images may be uns...')
                            SingleStyledText('Note.  Nightly images may be uns...')
                  Paragraph('Finally, use the esptool to flas...')   getting-started-guide.md:113   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Finally, use the esptool to flas...')
                        MixedStyledText('Finally, use the esptool to flas...')
                          SingleStyledText('Finally, use the ')
                          MixedStyledText('esptool', style='monospaced')   getting-started-guide.md:113   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('esptool')
                          SingleStyledText(' to flash the image to the start...')
                          MixedStyledText('0x1000', style='monospaced')   getting-started-guide.md:113   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x1000')
                          SingleStyledText(' on the ESP32.  E.g.,')
                  CodeBlock('shell$ esptool.py --chip esp32 -...')   getting-started-guide.md:115   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ esptool.py --chip esp32 -...')
                        MixedStyledText('shell$ esptool.py --chip esp32 -...')
                          Token('shell$ esptool.py --chip esp32 -...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Once completed, your ESP32 devic...')   getting-started-guide.md:121   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once completed, your ESP32 devic...')
                        MixedStyledText('Once completed, your ESP32 devic...')
                          SingleStyledText('Once completed, your ESP32 devic...')
                Section(id='%getting-started-guide#building-from-source')   getting-started-guide.md:123   <section>
                  Heading('Building from source')   getting-started-guide.md:123   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Building from source')
                        MixedStyledText('Building from source')
                          SingleStyledText('Building from source')
                  Paragraph('You may optionally build AtomVM ...')   getting-started-guide.md:125   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You may optionally build AtomVM ...')
                        MixedStyledText('You may optionally build AtomVM ...')
                          SingleStyledText('You may optionally build AtomVM ...')
                  Paragraph('Instructions for building AtomVM...')   getting-started-guide.md:127   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Instructions for building AtomVM...')
                        MixedStyledText('Instructions for building AtomVM...')
                          SingleStyledText('Instructions for building AtomVM...')
                          Reference('Build Instructions')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('Build Instructions')
                              MixedStyledText('Build Instructions')   <inline>
                                SingleStyledText('Build Instructions')
              Section(id='%getting-started-guide#deploying-an-atomvm-application')   getting-started-guide.md:129   <section>
                Heading('2.1.5 Deploying an AtomVM applic...')   getting-started-guide.md:129   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.5 ')
                      SingleStyledText('2.1.5')
                      SingleStyledText(' ')
                    MixedStyledText('Deploying an AtomVM application')
                      MixedStyledText('Deploying an AtomVM application')
                        SingleStyledText('Deploying an AtomVM application')
                Paragraph('An AtomVM application is a colle...')   getting-started-guide.md:131   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('An AtomVM application is a colle...')
                      MixedStyledText('An AtomVM application is a colle...')
                        SingleStyledText('An AtomVM application is a colle...')
                        MixedStyledText('.avm', style='monospaced')   getting-started-guide.md:131   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.avm')
                        SingleStyledText(') file, which in turn is flashed...')
                        MixedStyledText('main', style='monospaced')   getting-started-guide.md:131   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main')
                        SingleStyledText(' data partition on the ESP32 fla...')
                        MixedStyledText('0x210000', style='monospaced')   getting-started-guide.md:131   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x210000')
                        SingleStyledText('.')
                Paragraph('When the AtomVM virtual machine ...')   getting-started-guide.md:133   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('When the AtomVM virtual machine ...')
                      MixedStyledText('When the AtomVM virtual machine ...')
                        SingleStyledText('When the AtomVM virtual machine ...')
                        MixedStyledText('start/0', style='monospaced')   getting-started-guide.md:133   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function in this partition, and...')
                Paragraph('AtomVM applications can be writt...')   getting-started-guide.md:135   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM applications can be writt...')
                      MixedStyledText('AtomVM applications can be writt...')
                        SingleStyledText('AtomVM applications can be writt...')
                Paragraph('This section describes both Erla...')   getting-started-guide.md:137   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This section describes both Erla...')
                      MixedStyledText('This section describes both Erla...')
                        SingleStyledText('This section describes both Erla...')
                Section(id='%getting-started-guide#erlang-tooling')   getting-started-guide.md:139   <section>
                  Heading('Erlang Tooling')   getting-started-guide.md:139   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Erlang Tooling')
                        MixedStyledText('Erlang Tooling')
                          SingleStyledText('Erlang Tooling')
                  Paragraph('Deployment of AtomVM application...')   getting-started-guide.md:141   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Deployment of AtomVM application...')
                        MixedStyledText('Deployment of AtomVM application...')
                          SingleStyledText('Deployment of AtomVM application...')
                          MixedStyledText('atomvm_rebar3_plugin', style='external link')   getting-started-guide.md:141   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            MixedStyledText('atomvm_rebar3_plugin', style='monospaced')   getting-started-guide.md:141   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('atomvm_rebar3_plugin')
                          SingleStyledText(' plugin, a community-supported p...')
                          MixedStyledText('rebar3', style='external link')   getting-started-guide.md:141   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            MixedStyledText('rebar3', style='monospaced')   getting-started-guide.md:141   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('rebar3')
                          SingleStyledText(' Erlang build tool.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2.1.  Getting Started on the ESP...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2.1.  Getting Started on the ESP...')
          MixedStyledText('2.1.  Getting Started on the ESP...')
            Field('2.1')
              SingleStyledText('2.1')
            SingleStyledText('.  ')
            Field('Getting Started on the ESP32 pla...')
              MixedStyledText('Getting Started on the ESP32 pla...')
                MixedStyledText('Getting Started on the ESP32 pla...')
                  SingleStyledText('Getting Started on the ESP32 pla...')
            Tab('	')
            Tab('	')
            Field('9')
              SingleStyledText('9')
---------------------------------- page 10 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
          (continued) Section(id='%getting-started-guide#getting-started-guide')   getting-started-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%getting-started-guide#getting-started-on-the-esp32-platform')   getting-started-guide.md:15   <section>
              (continued) Section(id='%getting-started-guide#deploying-an-atomvm-application')   getting-started-guide.md:129   <section>
                (continued) Section(id='%getting-started-guide#erlang-tooling')   getting-started-guide.md:139   <section>
                  (continued) Paragraph('Deployment of AtomVM application...')   getting-started-guide.md:141   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                  Paragraph('You can generate a simple applic...')   getting-started-guide.md:143   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You can generate a simple applic...')
                        MixedStyledText('You can generate a simple applic...')
                          SingleStyledText('You can generate a simple applic...')
                          MixedStyledText('atomvm_rebar3_plugin', style='monospaced')   getting-started-guide.md:143   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('atomvm_rebar3_plugin')
                          SingleStyledText(' template, as follows:')
                  Paragraph('Edit or create the $HOME/.config...')   getting-started-guide.md:145   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Edit or create the $HOME/.config...')
                        MixedStyledText('Edit or create the $HOME/.config...')
                          SingleStyledText('Edit or create the ')
                          MixedStyledText('$HOME/.config/rebar3/rebar.confi...', style='monospaced')   getting-started-guide.md:145   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('$HOME/.config/rebar3/rebar.confi...')
                          SingleStyledText(' file to include the ')
                          MixedStyledText('atomvm_rebar3_plugin', style='monospaced')   getting-started-guide.md:145   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('atomvm_rebar3_plugin')
                          SingleStyledText(' plugin:')
                  CodeBlock('%% $HOME/.config/rebar3/rebar.co...')   getting-started-guide.md:147   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% $HOME/.config/rebar3/rebar.co...')
                        MixedStyledText('%% $HOME/.config/rebar3/rebar.co...')
                          Token('%% $HOME/.config/rebar3/rebar.co...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('In any directory in which you ha...')   getting-started-guide.md:153   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In any directory in which you ha...')
                        MixedStyledText('In any directory in which you ha...')
                          SingleStyledText('In any directory in which you ha...')
                  CodeBlock('shell$ rebar3 new atomvm_app <ap...')   getting-started-guide.md:155   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ rebar3 new atomvm_app <ap...')
                        MixedStyledText('shell$ rebar3 new atomvm_app <ap...')
                          Token('shell$ rebar3 new atomvm_app <ap...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('where <app-name> is the name of ...')   getting-started-guide.md:157   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('where <app-name> is the name of ...')
                        MixedStyledText('where <app-name> is the name of ...')
                          SingleStyledText('where ')
                          MixedStyledText('<app-name>', style='monospaced')   getting-started-guide.md:157   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<app-name>')
                          SingleStyledText(' is the name of the application ...')
                          MixedStyledText('myapp', style='monospaced')   getting-started-guide.md:157   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('myapp')
                          SingleStyledText(').  This command will generate a...')
                          MixedStyledText('<app-name>', style='monospaced')   getting-started-guide.md:157   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<app-name>')
                          SingleStyledText('.')
                  Paragraph('The generated application will c...')   getting-started-guide.md:159   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The generated application will c...')
                        MixedStyledText('The generated application will c...')
                          SingleStyledText('The generated application will c...')
                          MixedStyledText('rebar.config', style='monospaced')   getting-started-guide.md:159   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('rebar.config')
                          SingleStyledText(' configuration and will contain ...')
                          MixedStyledText('<app-name>.erl', style='monospaced')   getting-started-guide.md:159   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<app-name>.erl')
                          SingleStyledText(' module, which exports the ')
                          MixedStyledText('start/0', style='monospaced')   getting-started-guide.md:159   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('start/0')
                          SingleStyledText(' function with a stubbed impleme...')
                  Paragraph('Specifically, note the following...')   getting-started-guide.md:161   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Specifically, note the following...')
                        MixedStyledText('Specifically, note the following...')
                          SingleStyledText('Specifically, note the following...')
                          MixedStyledText('rebar.config', style='monospaced')   getting-started-guide.md:161   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('rebar.config')
                          SingleStyledText(' file:')
                  CodeBlock('%% rebar.config\n{plugins, [\n    ...')   getting-started-guide.md:163   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% rebar.config\n{plugins, [\n    ...')
                        MixedStyledText('%% rebar.config\n{plugins, [\n    ...')
                          Token('%% rebar.config\n{plugins, [\n    ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('And note the myapp application e...')   getting-started-guide.md:169   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('And note the myapp application e...')
                        MixedStyledText('And note the myapp application e...')
                          SingleStyledText('And note the ')
                          MixedStyledText('myapp', style='monospaced')   getting-started-guide.md:169   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('myapp')
                          SingleStyledText(' application exports a ')
                          MixedStyledText('start/0', style='monospaced')   getting-started-guide.md:169   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('start/0')
                          SingleStyledText(' function, e.g.,')
                  CodeBlock('%% erlang\n-module(myapp).\n-expor...')   getting-started-guide.md:171   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\n-module(myapp).\n-expor...')
                        MixedStyledText('%% erlang\n-module(myapp).\n-expor...')
                          Token('%% erlang\n-module(myapp).\n-expor...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('With this plugin installed, you ...')   getting-started-guide.md:178   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('With this plugin installed, you ...')
                        MixedStyledText('With this plugin installed, you ...')
                          SingleStyledText('With this plugin installed, you ...')
                          MixedStyledText('esp32_flash', style='monospaced')   getting-started-guide.md:178   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('esp32_flash')
                          SingleStyledText(' target, which will build an Ato...')
                  CodeBlock('shell$ rebar3 esp32_flash --port...')   getting-started-guide.md:180   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ rebar3 esp32_flash --port...')
                        MixedStyledText('shell$ rebar3 esp32_flash --port...')
                          Token('shell$ rebar3 esp32_flash --port...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('10		Chapter 2.  Getting Started ...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('10		Chapter 2.  Getting Started ...')
          MixedStyledText('10		Chapter 2.  Getting Started ...')
            Field('10')
              SingleStyledText('10')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('Getting Started Guide')
              MixedStyledText('Getting Started Guide')
                MixedStyledText('Getting Started Guide')
                  SingleStyledText('Getting Started Guide')
---------------------------------- page 11 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%getting-started-guide')   <start_of_file>
          (continued) Section(id='%getting-started-guide#getting-started-guide')   getting-started-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%getting-started-guide#getting-started-on-the-esp32-platform')   getting-started-guide.md:15   <section>
              (continued) Section(id='%getting-started-guide#deploying-an-atomvm-application')   getting-started-guide.md:129   <section>
                (continued) Section(id='%getting-started-guide#erlang-tooling')   getting-started-guide.md:139   <section>
                  StaticGroupedFlowables(style='block quote')   getting-started-guide.md:199   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. Consult the the atomvm_reb...')   getting-started-guide.md:199   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                  Paragraph('Once the application has been fl...')   getting-started-guide.md:201   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once the application has been fl...')
                        MixedStyledText('Once the application has been fl...')
                          SingleStyledText('Once the application has been fl...')
                          MixedStyledText('minicom', style='monospaced')   getting-started-guide.md:201   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('minicom')
                          SingleStyledText(', ')
                          MixedStyledText('screen', style='monospaced')   getting-started-guide.md:201   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('screen')
                          SingleStyledText(', or equivalent.')
                Section(id='%getting-started-guide#elixir-tooling')   getting-started-guide.md:203   <section>
                  Heading('Elixir Tooling')   getting-started-guide.md:203   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Elixir Tooling')
                        MixedStyledText('Elixir Tooling')
                          SingleStyledText('Elixir Tooling')
                  StaticGroupedFlowables(style='block quote')   getting-started-guide.md:205   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('TODO mix + https://github.com/at...')   getting-started-guide.md:205   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('TODO mix + https://github.com/at...')
                          MixedStyledText('TODO mix + https://github.com/at...')
                            SingleStyledText('TODO mix + https://github.com/at...')
            Section(id='%getting-started-guide#getting-started-on-the-stm32-platform')   getting-started-guide.md:207   <section>
              Heading('2.2 Getting Started on the STM32...')   getting-started-guide.md:207   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.2 ')
                    SingleStyledText('2.2')
                    SingleStyledText(' ')
                  MixedStyledText('Getting Started on the STM32 pla...')
                    MixedStyledText('Getting Started on the STM32 pla...')
                      SingleStyledText('Getting Started on the STM32 pla...')
              StaticGroupedFlowables(style='block quote')   getting-started-guide.md:209   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('TODO will se distribute a binary...')   getting-started-guide.md:209   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('TODO will se distribute a binary...')
                      MixedStyledText('TODO will se distribute a binary...')
                        SingleStyledText('TODO will se distribute a binary...')
            Section(id='%getting-started-guide#getting-started-on-the-generic-unix-platform')   getting-started-guide.md:211   <section>
              Heading('2.3 Getting Started on the Gener...')   getting-started-guide.md:211   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.3 ')
                    SingleStyledText('2.3')
                    SingleStyledText(' ')
                  MixedStyledText('Getting Started on the Generic U...')
                    MixedStyledText('Getting Started on the Generic U...')
                      SingleStyledText('Getting Started on the Generic U...')
              Paragraph('AtomVM may be run on UNIX-like p...')   getting-started-guide.md:213   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM may be run on UNIX-like p...')
                    MixedStyledText('AtomVM may be run on UNIX-like p...')
                      SingleStyledText('AtomVM may be run on UNIX-like p...')
                      MixedStyledText('AtomVM', style='monospaced')   getting-started-guide.md:213   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('AtomVM')
                      SingleStyledText(' executable.')
              Paragraph('You may specify one or more AVM ...')   getting-started-guide.md:215   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You may specify one or more AVM ...')
                    MixedStyledText('You may specify one or more AVM ...')
                      SingleStyledText('You may specify one or more AVM ...')
                      MixedStyledText('AtomVM', style='monospaced')   getting-started-guide.md:215   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('AtomVM')
                      SingleStyledText(' command.  BEAM modules defined ...')
              CodeBlock('shell$ AtomVM /path/to/myapp.avm...')   getting-started-guide.md:217   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('shell$ AtomVM /path/to/myapp.avm...')
                    MixedStyledText('shell$ AtomVM /path/to/myapp.avm...')
                      Token('shell$ AtomVM /path/to/myapp.avm...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('Currently, the AtomVM executable...')   getting-started-guide.md:219   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Currently, the AtomVM executable...')
                    MixedStyledText('Currently, the AtomVM executable...')
                      SingleStyledText('Currently, the ')
                      MixedStyledText('AtomVM', style='monospaced')   getting-started-guide.md:219   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('AtomVM')
                      SingleStyledText(' executable must be built from s...')
              StaticGroupedFlowables(style='block quote')   getting-started-guide.md:221   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('See the AtomVM Build Instruction...')   getting-started-guide.md:221   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('See the AtomVM Build Instruction...')
                      MixedStyledText('See the AtomVM Build Instruction...')
                        SingleStyledText('See the AtomVM ')
                        Reference('Build Instructions')   <reference>
                             > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                          MixedStyledText('Build Instructions')
                            MixedStyledText('Build Instructions')   <inline>
                              SingleStyledText('Build Instructions')
                        SingleStyledText(' for instructions about how to b...')
            Section(id='%getting-started-guide#where-to-go-from-here')   getting-started-guide.md:223   <section>
              Heading('2.4 Where to go from here')   getting-started-guide.md:223   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.4 ')
                    SingleStyledText('2.4')
                    SingleStyledText(' ')
                  MixedStyledText('Where to go from here')
                    MixedStyledText('Where to go from here')
                      SingleStyledText('Where to go from here')
              Paragraph('The following resources may be u...')   getting-started-guide.md:225   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following resources may be u...')
                    MixedStyledText('The following resources may be u...')
                      SingleStyledText('The following resources may be u...')
              List(style='bulleted')   getting-started-guide.md:227   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   getting-started-guide.md:227   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Example Programs')   getting-started-guide.md:227   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Example Programs')
                          MixedStyledText('Example Programs')
                            Reference('Example Programs')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Example Programs')
                                MixedStyledText('Example Programs')   <inline>
                                  SingleStyledText('Example Programs')
                ListItem()   getting-started-guide.md:228   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Programmers Guide')   getting-started-guide.md:228   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Programmers Guide')
                          MixedStyledText('Programmers Guide')
                            Reference('Programmers Guide')   <reference>
                                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                              MixedStyledText('Programmers Guide')
                                MixedStyledText('Programmers Guide')   <inline>
                                  SingleStyledText('Programmers Guide')
        StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2.2.  Getting Started on the STM...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2.2.  Getting Started on the STM...')
          MixedStyledText('2.2.  Getting Started on the STM...')
            Field('2.2')
              SingleStyledText('2.2')
            SingleStyledText('.  ')
            Field('Getting Started on the STM32 pla...')
              MixedStyledText('Getting Started on the STM32 pla...')
                MixedStyledText('Getting Started on the STM32 pla...')
                  SingleStyledText('Getting Started on the STM32 pla...')
            Tab('	')
            Tab('	')
            Field('11')
              SingleStyledText('11')
---------------------------------- page 12 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('12		Chapter 2.  Getting Started ...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('12		Chapter 2.  Getting Started ...')
          MixedStyledText('12		Chapter 2.  Getting Started ...')
            Field('12')
              SingleStyledText('12')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('Getting Started Guide')
              MixedStyledText('Getting Started Guide')
                MixedStyledText('Getting Started Guide')
                  SingleStyledText('Getting Started Guide')
---------------------------------- page 13 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 3')
        MixedStyledText('Chapter 3')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('3', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('3')
  Paragraph('Programmers Guide', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Programmers Guide')
        MixedStyledText('Programmers Guide')
          MixedStyledText('Programmers Guide')
            SingleStyledText('Programmers Guide')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('This guide is intended for progr...')   programmers-guide.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This guide is intended for progr...')
                  MixedStyledText('This guide is intended for progr...')
                    SingleStyledText('This guide is intended for progr...')
            Paragraph('As an implementation of the Erla...')   programmers-guide.md:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('As an implementation of the Erla...')
                  MixedStyledText('As an implementation of the Erla...')
                    SingleStyledText('As an implementation of the Erla...')
            Paragraph('This document describes the deve...')   programmers-guide.md:13   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This document describes the deve...')
                  MixedStyledText('This document describes the deve...')
                    SingleStyledText('This document describes the deve...')
            Section(id='%programmers-guide#atomvm-features')   programmers-guide.md:15   <section>
              Heading('3.1 AtomVM Features')   programmers-guide.md:15   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.1 ')
                    SingleStyledText('3.1')
                    SingleStyledText(' ')
                  MixedStyledText('AtomVM Features')
                    MixedStyledText('AtomVM Features')
                      SingleStyledText('AtomVM Features')
              Paragraph('Currently, AtomVM implements a s...')   programmers-guide.md:17   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Currently, AtomVM implements a s...')
                    MixedStyledText('Currently, AtomVM implements a s...')
                      SingleStyledText('Currently, AtomVM implements a s...')
              Paragraph('A high level overview of the sup...')   programmers-guide.md:19   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('A high level overview of the sup...')
                    MixedStyledText('A high level overview of the sup...')
                      SingleStyledText('A high level overview of the sup...')
              List(style='bulleted')   programmers-guide.md:21   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   programmers-guide.md:21   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('All the major Erlang types, incl...')   programmers-guide.md:21   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('All the major Erlang types, incl...')
                          MixedStyledText('All the major Erlang types, incl...')
                            SingleStyledText('All the major Erlang types, incl...')
                    List(style='bulleted')   programmers-guide.md:22   <bullet_list>
                         > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                           (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                      ListItem()   programmers-guide.md:22   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('integers (with size limits)')   programmers-guide.md:22   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('integers (with size limits)')
                                MixedStyledText('integers (with size limits)')
                                  SingleStyledText('integers (with size limits)')
                      ListItem()   programmers-guide.md:23   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('limited support for floats (not ...')   programmers-guide.md:23   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('limited support for floats (not ...')
                                MixedStyledText('limited support for floats (not ...')
                                  SingleStyledText('limited support for floats (not ...')
                      ListItem()   programmers-guide.md:24   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('tuples')   programmers-guide.md:24   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('tuples')
                                MixedStyledText('tuples')
                                  SingleStyledText('tuples')
                      ListItem()   programmers-guide.md:25   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('lists')   programmers-guide.md:25   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('lists')
                                MixedStyledText('lists')
                                  SingleStyledText('lists')
                      ListItem()   programmers-guide.md:26   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('binaries')   programmers-guide.md:26   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('binaries')
                                MixedStyledText('binaries')
                                  SingleStyledText('binaries')
                      ListItem()   programmers-guide.md:27   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('maps')   programmers-guide.md:27   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('maps')
                                MixedStyledText('maps')
                                  SingleStyledText('maps')
                ListItem()   programmers-guide.md:28   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('support for many Erlang BIFs and...')   programmers-guide.md:28   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('support for many Erlang BIFs and...')
                          MixedStyledText('support for many Erlang BIFs and...')
                            SingleStyledText('support for many Erlang BIFs and...')
                ListItem()   programmers-guide.md:29   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('pattern matching (case statement...')   programmers-guide.md:29   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('pattern matching (case statement...')
                          MixedStyledText('pattern matching (case statement...')
                            SingleStyledText('pattern matching (case statement...')
                ListItem()   programmers-guide.md:30   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('try ... catch ... finally constr...')   programmers-guide.md:30   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('try ... catch ... finally constr...')
                          MixedStyledText('try ... catch ... finally constr...')
                            MixedStyledText('try ... catch ... finally', style='monospaced')   programmers-guide.md:30   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('try ... catch ... finally')
                            SingleStyledText(' constructs')
                ListItem()   programmers-guide.md:31   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('anonymous functions')   programmers-guide.md:31   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('anonymous functions')
                          MixedStyledText('anonymous functions')
                            SingleStyledText('anonymous functions')
                ListItem()   programmers-guide.md:32   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('process spawn and spawn_link')   programmers-guide.md:32   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('process spawn and spawn_link')
                          MixedStyledText('process spawn and spawn_link')
                            SingleStyledText('process ')
                            MixedStyledText('spawn', style='monospaced')   programmers-guide.md:32   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('spawn')
                            SingleStyledText(' and ')
                            MixedStyledText('spawn_link', style='monospaced')   programmers-guide.md:32   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('spawn_link')
                ListItem()   programmers-guide.md:33   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('send (!) and receive messages')   programmers-guide.md:33   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('send (!) and receive messages')
                          MixedStyledText('send (!) and receive messages')
                            SingleStyledText('send (')
                            MixedStyledText('!', style='monospaced')   programmers-guide.md:33   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('!')
                            SingleStyledText(') and ')
                            MixedStyledText('receive', style='monospaced')   programmers-guide.md:33   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('receive')
                            SingleStyledText(' messages')
                ListItem()   programmers-guide.md:34   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('bit syntax (with some restrictio...')   programmers-guide.md:34   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('bit syntax (with some restrictio...')
                          MixedStyledText('bit syntax (with some restrictio...')
                            SingleStyledText('bit syntax (with some restrictio...')
                ListItem()   programmers-guide.md:35   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('reference counted binaries')   programmers-guide.md:35   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('reference counted binaries')
                          MixedStyledText('reference counted binaries')
                            SingleStyledText('reference counted binaries')
              Paragraph('In addition, several features ar...')   programmers-guide.md:37   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In addition, several features ar...')
                    MixedStyledText('In addition, several features ar...')
                      SingleStyledText('In addition, several features ar...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		13')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		13')
          MixedStyledText('		13')
            Tab('	')
            Tab('	')
            Field('13')
              SingleStyledText('13')
---------------------------------- page 14 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#atomvm-features')   programmers-guide.md:15   <section>
              (continued) Paragraph('In addition, several features ar...')   programmers-guide.md:37   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              List(style='bulleted')   programmers-guide.md:39   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   programmers-guide.md:39   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Wifi networking (network)')   programmers-guide.md:39   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Wifi networking (network)')
                          MixedStyledText('Wifi networking (network)')
                            SingleStyledText('Wifi networking (')
                            MixedStyledText('network', style='monospaced')   programmers-guide.md:39   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('network')
                            SingleStyledText(')')
                ListItem()   programmers-guide.md:40   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('UDP and TCP/IP support (inet, ge...')   programmers-guide.md:40   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('UDP and TCP/IP support (inet, ge...')
                          MixedStyledText('UDP and TCP/IP support (inet, ge...')
                            SingleStyledText('UDP and TCP/IP support (')
                            MixedStyledText('inet', style='monospaced')   programmers-guide.md:40   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('inet')
                            SingleStyledText(', ')
                            MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:40   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('gen_tcp')
                            SingleStyledText(' and ')
                            MixedStyledText('gen_udp', style='monospaced')   programmers-guide.md:40   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('gen_udp')
                            SingleStyledText(')')
                ListItem()   programmers-guide.md:41   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Peripheral and system support on...')   programmers-guide.md:41   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Peripheral and system support on...')
                          MixedStyledText('Peripheral and system support on...')
                            SingleStyledText('Peripheral and system support on...')
                    List(style='bulleted')   programmers-guide.md:42   <bullet_list>
                         > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                           (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                      ListItem()   programmers-guide.md:42   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('GPIO, including pins reads, writ...')   programmers-guide.md:42   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('GPIO, including pins reads, writ...')
                                MixedStyledText('GPIO, including pins reads, writ...')
                                  SingleStyledText('GPIO, including pins reads, writ...')
                      ListItem()   programmers-guide.md:43   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('I2C interface')   programmers-guide.md:43   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('I2C interface')
                                MixedStyledText('I2C interface')
                                  SingleStyledText('I2C interface')
                      ListItem()   programmers-guide.md:44   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('SPI interface')   programmers-guide.md:44   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('SPI interface')
                                MixedStyledText('SPI interface')
                                  SingleStyledText('SPI interface')
                      ListItem()   programmers-guide.md:45   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('UART interface')   programmers-guide.md:45   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('UART interface')
                                MixedStyledText('UART interface')
                                  SingleStyledText('UART interface')
                      ListItem()   programmers-guide.md:46   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('LEDC (PWM)')   programmers-guide.md:46   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('LEDC (PWM)')
                                MixedStyledText('LEDC (PWM)')
                                  SingleStyledText('LEDC (PWM)')
                      ListItem()   programmers-guide.md:47   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('non-volatile storage (NVS)')   programmers-guide.md:47   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('non-volatile storage (NVS)')
                                MixedStyledText('non-volatile storage (NVS)')
                                  SingleStyledText('non-volatile storage (NVS)')
                      ListItem()   programmers-guide.md:48   <list_item>
                           x (0,0,1,0,4) bulleted list item
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                               (0,0,0,0,2) list item label [Sphinx] > default
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()
                             > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                          Paragraph('deep sleep')   programmers-guide.md:48   <paragraph>
                               > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('deep sleep')
                                MixedStyledText('deep sleep')
                                  SingleStyledText('deep sleep')
              Section(id='%programmers-guide#limitations')   programmers-guide.md:50   <section>
                Heading('3.1.1 Limitations')   programmers-guide.md:50   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.1.1 ')
                      SingleStyledText('3.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('Limitations')
                      MixedStyledText('Limitations')
                        SingleStyledText('Limitations')
                Paragraph('While the list of supported feat...')   programmers-guide.md:52   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('While the list of supported feat...')
                      MixedStyledText('While the list of supported feat...')
                        SingleStyledText('While the list of supported feat...')
                List(style='bulleted')   programmers-guide.md:54   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:54   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Bingnums.  Integer values are re...')   programmers-guide.md:54   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Bingnums.  Integer values are re...')
                            MixedStyledText('Bingnums.  Integer values are re...')
                              SingleStyledText('Bingnums.  Integer values are re...')
                  ListItem()   programmers-guide.md:55   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('SMP support.  The AtomVM VM is c...')   programmers-guide.md:55   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('SMP support.  The AtomVM VM is c...')
                            MixedStyledText('SMP support.  The AtomVM VM is c...')
                              SingleStyledText('SMP support.  The AtomVM VM is c...')
                  ListItem()   programmers-guide.md:56   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('The epmd and the disterl protoco...')   programmers-guide.md:56   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('The epmd and the disterl protoco...')
                            MixedStyledText('The epmd and the disterl protoco...')
                              SingleStyledText('The ')
                              MixedStyledText('epmd', style='monospaced')   programmers-guide.md:56   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('epmd')
                              SingleStyledText(' and the ')
                              MixedStyledText('disterl', style='monospaced')   programmers-guide.md:56   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('disterl')
                              SingleStyledText(' protocols are not supported.')
                  ListItem()   programmers-guide.md:57   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('There is no support for code hot...')   programmers-guide.md:57   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('There is no support for code hot...')
                            MixedStyledText('There is no support for code hot...')
                              SingleStyledText('There is no support for code hot...')
                  ListItem()   programmers-guide.md:58   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('There is no support for a Read-E...')   programmers-guide.md:58   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('There is no support for a Read-E...')
                            MixedStyledText('There is no support for a Read-E...')
                              SingleStyledText('There is no support for a Read-E...')
                  ListItem()   programmers-guide.md:59   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Numerous modules and functions f...')   programmers-guide.md:59   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Numerous modules and functions f...')
                            MixedStyledText('Numerous modules and functions f...')
                              SingleStyledText('Numerous modules and functions f...')
                              MixedStyledText('kernel', style='monospaced')   programmers-guide.md:59   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('kernel')
                              SingleStyledText(', ')
                              MixedStyledText('stdlib', style='monospaced')   programmers-guide.md:59   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('stdlib')
                              SingleStyledText(', ')
                              MixedStyledText('sasl', style='monospaced')   programmers-guide.md:59   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('sasl')
                              SingleStyledText(', etc) are not implemented.')
                Paragraph('AtomVM bit syntax is restricted ...')   programmers-guide.md:61   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM bit syntax is restricted ...')
                      MixedStyledText('AtomVM bit syntax is restricted ...')
                        SingleStyledText('AtomVM bit syntax is restricted ...')
                Paragraph('It is highly unlikely that an ex...')   programmers-guide.md:63   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('It is highly unlikely that an ex...')
                      MixedStyledText('It is highly unlikely that an ex...')
                        SingleStyledText('It is highly unlikely that an ex...')
                Paragraph('That being said, many of the fea...')   programmers-guide.md:65   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('That being said, many of the fea...')
                      MixedStyledText('That being said, many of the fea...')
                        SingleStyledText('That being said, many of the fea...')
            Section(id='%programmers-guide#atomvm-development')   programmers-guide.md:68   <section>
              Heading('3.2 AtomVM Development')   programmers-guide.md:68   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.2 ')
                    SingleStyledText('3.2')
                    SingleStyledText(' ')
                  MixedStyledText('AtomVM Development')
                    MixedStyledText('AtomVM Development')
                      SingleStyledText('AtomVM Development')
              Paragraph('This section describes the typic...')   programmers-guide.md:70   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This section describes the typic...')
                    MixedStyledText('This section describes the typic...')
                      SingleStyledText('This section describes the typic...')
              Section(id='%programmers-guide#development-environment')   programmers-guide.md:72   <section>
                Heading('3.2.1 Development Environment')   programmers-guide.md:72   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.2.1 ')
                      SingleStyledText('3.2.1')
                      SingleStyledText(' ')
                    MixedStyledText('Development Environment')
                      MixedStyledText('Development Environment')
                        SingleStyledText('Development Environment')
                Paragraph('In general, for most development...')   programmers-guide.md:74   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In general, for most development...')
                      MixedStyledText('In general, for most development...')
                        SingleStyledText('In general, for most development...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('14		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('14		Chapter 3.  Programmers Guid...')
          MixedStyledText('14		Chapter 3.  Programmers Guid...')
            Field('14')
              SingleStyledText('14')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 15 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#atomvm-development')   programmers-guide.md:68   <section>
              (continued) Section(id='%programmers-guide#development-environment')   programmers-guide.md:72   <section>
                (continued) Paragraph('In general, for most development...')   programmers-guide.md:74   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('Developers will want to make use...')   programmers-guide.md:76   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Developers will want to make use...')
                      MixedStyledText('Developers will want to make use...')
                        SingleStyledText('Developers will want to make use...')
                        MixedStyledText('rebar3', style='monospaced')   programmers-guide.md:76   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('rebar3')
                        SingleStyledText(' for Erlang developers or ')
                        MixedStyledText('mix', style='monospaced')   programmers-guide.md:76   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mix')
                        SingleStyledText(' for Elixir developers.')
                Paragraph('Developers will need to make use...')   programmers-guide.md:78   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Developers will need to make use...')
                      MixedStyledText('Developers will need to make use...')
                        SingleStyledText('Developers will need to make use...')
                List(style='enumerated')   programmers-guide.md:80   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   programmers-guide.md:80   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('AtomVM PackBEAM executable (desc...')   programmers-guide.md:80   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AtomVM PackBEAM executable (desc...')
                            MixedStyledText('AtomVM PackBEAM executable (desc...')
                              SingleStyledText('AtomVM ')
                              MixedStyledText('PackBEAM', style='monospaced')   programmers-guide.md:80   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('PackBEAM')
                              SingleStyledText(' executable (described below)')
                  ListItem()   programmers-guide.md:81   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('atomvm_rebar3_plugin, for Erlang...')   programmers-guide.md:81   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atomvm_rebar3_plugin, for Erlang...')
                            MixedStyledText('atomvm_rebar3_plugin, for Erlang...')
                              MixedStyledText('atomvm_rebar3_plugin', style='external link')   programmers-guide.md:81   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('atomvm_rebar3_plugin', style='monospaced')   programmers-guide.md:81   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('atomvm_rebar3_plugin')
                              SingleStyledText(', for Erlang development using ')
                              MixedStyledText('rebar3', style='external link')   programmers-guide.md:81   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('rebar3', style='monospaced')   programmers-guide.md:81   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('rebar3')
                              SingleStyledText('.')
                  ListItem()   programmers-guide.md:82   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('3.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('3.')
                          SingleStyledText('3')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('ExAtomVM Mix plugin, Elixir deve...')   programmers-guide.md:82   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ExAtomVM Mix plugin, Elixir deve...')
                            MixedStyledText('ExAtomVM Mix plugin, Elixir deve...')
                              MixedStyledText('ExAtomVM', style='external link')   programmers-guide.md:82   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('ExAtomVM', style='monospaced')   programmers-guide.md:82   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('ExAtomVM')
                              SingleStyledText(' Mix plugin, Elixir development ...')
                              MixedStyledText('Mix', style='external link')   programmers-guide.md:82   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                MixedStyledText('Mix', style='monospaced')   programmers-guide.md:82   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('Mix')
                              SingleStyledText('.')
                Paragraph('Some testing can be performed on...')   programmers-guide.md:84   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Some testing can be performed on...')
                      MixedStyledText('Some testing can be performed on...')
                        SingleStyledText('Some testing can be performed on...')
                        MixedStyledText('AtomVM', style='monospaced')   programmers-guide.md:84   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('AtomVM')
                        SingleStyledText(' executable that is suitable for...')
                Paragraph('Deployment and testing on micro-...')   programmers-guide.md:86   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Deployment and testing on micro-...')
                      MixedStyledText('Deployment and testing on micro-...')
                        SingleStyledText('Deployment and testing on micro-...')
                Section(id='%programmers-guide#esp32-deployment-requirements')   programmers-guide.md:88   <section>
                  Heading('ESP32 Deployment Requirements')   programmers-guide.md:88   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('ESP32 Deployment Requirements')
                        MixedStyledText('ESP32 Deployment Requirements')
                          SingleStyledText('ESP32 Deployment Requirements')
                  Paragraph('In order to deploy AtomVM applic...')   programmers-guide.md:90   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In order to deploy AtomVM applic...')
                        MixedStyledText('In order to deploy AtomVM applic...')
                          SingleStyledText('In order to deploy AtomVM applic...')
                  List(style='bulleted')   programmers-guide.md:92   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   programmers-guide.md:92   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('A computer running MacOS or Linu...')   programmers-guide.md:92   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('A computer running MacOS or Linu...')
                              MixedStyledText('A computer running MacOS or Linu...')
                                SingleStyledText('A computer running MacOS or Linu...')
                    ListItem()   programmers-guide.md:93   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('An ESP32 module with a USB/UART ...')   programmers-guide.md:93   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('An ESP32 module with a USB/UART ...')
                              MixedStyledText('An ESP32 module with a USB/UART ...')
                                SingleStyledText('An ESP32 module with a USB/UART ...')
                    ListItem()   programmers-guide.md:94   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('A USB cable capable of connectin...')   programmers-guide.md:94   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('A USB cable capable of connectin...')
                              MixedStyledText('A USB cable capable of connectin...')
                                SingleStyledText('A USB cable capable of connectin...')
                    ListItem()   programmers-guide.md:95   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The esptool program, for flashin...')   programmers-guide.md:95   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The esptool program, for flashin...')
                              MixedStyledText('The esptool program, for flashin...')
                                SingleStyledText('The ')
                                MixedStyledText('esptool', style='external link')   programmers-guide.md:95   <reference>
                                     > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                  MixedStyledText('esptool', style='monospaced')   programmers-guide.md:95   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('esptool')
                                SingleStyledText(' program, for flashing the AtomV...')
                    ListItem()   programmers-guide.md:96   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('(Optional, but recommended) A se...')   programmers-guide.md:96   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('(Optional, but recommended) A se...')
                              MixedStyledText('(Optional, but recommended) A se...')
                                SingleStyledText('(Optional, but recommended) A se...')
                                MixedStyledText('minicom', style='monospaced')   programmers-guide.md:96   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('minicom')
                                SingleStyledText(' or ')
                                MixedStyledText('screen', style='monospaced')   programmers-guide.md:96   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('screen')
                                SingleStyledText(', so that you can view console o...')
                Section(id='%programmers-guide#stm32-deployment-requirements')   programmers-guide.md:98   <section>
                  Heading('STM32 Deployment Requirements')   programmers-guide.md:98   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('STM32 Deployment Requirements')
                        MixedStyledText('STM32 Deployment Requirements')
                          SingleStyledText('STM32 Deployment Requirements')
                  Paragraph('TODO')   programmers-guide.md:100   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('TODO')
                        MixedStyledText('TODO')
                          SingleStyledText('TODO')
              Section(id='%programmers-guide#development-workflow')   programmers-guide.md:102   <section>
                Heading('3.2.2 Development Workflow')   programmers-guide.md:102   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.2.2 ')
                      SingleStyledText('3.2.2')
                      SingleStyledText(' ')
                    MixedStyledText('Development Workflow')
                      MixedStyledText('Development Workflow')
                        SingleStyledText('Development Workflow')
                Paragraph('For the majority of users, AtomV...')   programmers-guide.md:104   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For the majority of users, AtomV...')
                      MixedStyledText('For the majority of users, AtomV...')
                        SingleStyledText('For the majority of users, AtomV...')
                        MixedStyledText('.beam', style='monospaced')   programmers-guide.md:104   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.beam')
                        SingleStyledText(') files using standard Erlang or...')
                        MixedStyledText('erlc', style='monospaced')   programmers-guide.md:104   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlc')
                        SingleStyledText(', ')
                        MixedStyledText('rebar', style='monospaced')   programmers-guide.md:104   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('rebar')
                        SingleStyledText(', ')
                        MixedStyledText('mix', style='monospaced')   programmers-guide.md:104   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mix')
                        SingleStyledText(', etc).  The generated BEAM file...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:106   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  In a small number of case...')   programmers-guide.md:106   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  In a small number of case...')
                        MixedStyledText('Note.  In a small number of case...')
                          SingleStyledText('Note.  In a small number of case...')
                Paragraph('Once Erlang and/or Elixir files ...')   programmers-guide.md:108   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Once Erlang and/or Elixir files ...')
                      MixedStyledText('Once Erlang and/or Elixir files ...')
                        SingleStyledText('Once Erlang and/or Elixir files ...')
                        MixedStyledText('.avm', style='monospaced')   programmers-guide.md:108   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.avm')
                        SingleStyledText(') files, using AtomVM tooling, d...')
                Paragraph('AtomVM packbeam files are the ap...')   programmers-guide.md:110   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM packbeam files are the ap...')
                      MixedStyledText('AtomVM packbeam files are the ap...')
                        SingleStyledText('AtomVM packbeam files are the ap...')
                Paragraph('The following diagram illustrate...')   programmers-guide.md:112   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following diagram illustrate...')
                      MixedStyledText('The following diagram illustrate...')
                        SingleStyledText('The following diagram illustrate...')
                CodeBlock('*.erl or *.ex                  *...')   programmers-guide.md:115   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('*.erl or *.ex                  *...')
                      MixedStyledText('*.erl or *.ex                  *...')
                        Token('*.erl or *.ex                  *...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.2.  AtomVM Development		15')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.2.  AtomVM Development		15')
          MixedStyledText('3.2.  AtomVM Development		15')
            Field('3.2')
              SingleStyledText('3.2')
            SingleStyledText('.  ')
            Field('AtomVM Development')
              MixedStyledText('AtomVM Development')
                MixedStyledText('AtomVM Development')
                  SingleStyledText('AtomVM Development')
            Tab('	')
            Tab('	')
            Field('15')
              SingleStyledText('15')
---------------------------------- page 16 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#atomvm-development')   programmers-guide.md:68   <section>
              (continued) Section(id='%programmers-guide#development-workflow')   programmers-guide.md:102   <section>
                (continued) CodeBlock('*.erl or *.ex                  *...')   programmers-guide.md:115   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('The typical compile-test-debug c...')   programmers-guide.md:143   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The typical compile-test-debug c...')
                      MixedStyledText('The typical compile-test-debug c...')
                        SingleStyledText('The typical compile-test-debug c...')
                List(style='enumerated')   programmers-guide.md:145   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   programmers-guide.md:145   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Deploy the AtomVM virtual machin...')   programmers-guide.md:145   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Deploy the AtomVM virtual machin...')
                            MixedStyledText('Deploy the AtomVM virtual machin...')
                              SingleStyledText('Deploy the AtomVM virtual machin...')
                  ListItem()   programmers-guide.md:146   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Develop an AtomVM application in...')   programmers-guide.md:146   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Develop an AtomVM application in...')
                            MixedStyledText('Develop an AtomVM application in...')
                              SingleStyledText('Develop an AtomVM application in...')
                      List(style='enumerated')   programmers-guide.md:147   <enumerated_list>
                           > (0,0,1,0,5) nested enumerated list [Sphinx] > enumerated list
                             (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                        ListItem()   programmers-guide.md:147   <list_item>
                             x (0,0,1,0,4) enumerated list item
                          ListItemLabel('1.')
                               > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                                 (0,0,0,0,2) list item label [Sphinx] > default
                              MixedStyledText('1.')
                                SingleStyledText('1')
                                SingleStyledText('.')
                          StaticGroupedFlowables()
                               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                            Paragraph('Write application')   programmers-guide.md:147   <paragraph>
                                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('Write application')
                                  MixedStyledText('Write application')
                                    SingleStyledText('Write application')
                        ListItem()   programmers-guide.md:148   <list_item>
                             x (0,0,1,0,4) enumerated list item
                          ListItemLabel('2.')
                               > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                                 (0,0,0,0,2) list item label [Sphinx] > default
                              MixedStyledText('2.')
                                SingleStyledText('2')
                                SingleStyledText('.')
                          StaticGroupedFlowables()
                               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                            Paragraph('Deploy application to device')   programmers-guide.md:148   <paragraph>
                                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('Deploy application to device')
                                  MixedStyledText('Deploy application to device')
                                    SingleStyledText('Deploy application to device')
                        ListItem()   programmers-guide.md:149   <list_item>
                             x (0,0,1,0,4) enumerated list item
                          ListItemLabel('3.')
                               > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                                 (0,0,0,0,2) list item label [Sphinx] > default
                              MixedStyledText('3.')
                                SingleStyledText('3')
                                SingleStyledText('.')
                          StaticGroupedFlowables()
                               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                            Paragraph('Test/Debug/Fix application')   programmers-guide.md:149   <paragraph>
                                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('Test/Debug/Fix application')
                                  MixedStyledText('Test/Debug/Fix application')
                                    SingleStyledText('Test/Debug/Fix application')
                        ListItem()   programmers-guide.md:150   <list_item>
                             x (0,0,1,0,4) enumerated list item
                          ListItemLabel('4.')
                               > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                                 (0,0,0,0,2) list item label [Sphinx] > default
                              MixedStyledText('4.')
                                SingleStyledText('4')
                                SingleStyledText('.')
                          StaticGroupedFlowables()
                               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                            Paragraph('Repeat')   programmers-guide.md:150   <paragraph>
                                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                   (0,0,0,0,2) body [Sphinx] > default
                                MixedStyledText('Repeat')
                                  MixedStyledText('Repeat')
                                    SingleStyledText('Repeat')
                Paragraph('Deployment of the AtomVM virtual...')   programmers-guide.md:152   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Deployment of the AtomVM virtual...')
                      MixedStyledText('Deployment of the AtomVM virtual...')
                        SingleStyledText('Deployment of the AtomVM virtual...')
                Paragraph('For more information about deplo...')   programmers-guide.md:154   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For more information about deplo...')
                      MixedStyledText('For more information about deplo...')
                        SingleStyledText('For more information about deplo...')
                        Reference('Getting Started Guide')   <reference>
                             > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                          MixedStyledText('Getting Started Guide')
                            MixedStyledText('Getting Started Guide')   <inline>
                              SingleStyledText('Getting Started Guide')
            Section(id='%programmers-guide#applications')   programmers-guide.md:157   <section>
              Heading('3.3 Applications')   programmers-guide.md:157   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.3 ')
                    SingleStyledText('3.3')
                    SingleStyledText(' ')
                  MixedStyledText('Applications')
                    MixedStyledText('Applications')
                      SingleStyledText('Applications')
              Paragraph('An AtomVM application is a colle...')   programmers-guide.md:159   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('An AtomVM application is a colle...')
                    MixedStyledText('An AtomVM application is a colle...')
                      SingleStyledText('An AtomVM application is a colle...')
                      MixedStyledText('.avm', style='monospaced')   programmers-guide.md:159   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('.avm')
                      SingleStyledText(') file, and typically deployed (...')
              StaticGroupedFlowables(style='block quote')   programmers-guide.md:161   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  The return value from the...')   programmers-guide.md:161   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  The return value from the...')
                      MixedStyledText('Note.  The return value from the...')
                        SingleStyledText('Note.  The return value from the...')
                        MixedStyledText('start/0', style='monospaced')   programmers-guide.md:161   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function is ignored.')
              Paragraph('Here, for example is one of the ...')   programmers-guide.md:163   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Here, for example is one of the ...')
                    MixedStyledText('Here, for example is one of the ...')
                      SingleStyledText('Here, for example is one of the ...')
              CodeBlock('%% erlang\n-module(myapp).\n\n-expo...')   programmers-guide.md:165   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\n-module(myapp).\n\n-expo...')
                    MixedStyledText('%% erlang\n-module(myapp).\n\n-expo...')
                      Token('%% erlang\n-module(myapp).\n\n-expo...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('This particular application does...')   programmers-guide.md:173   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This particular application does...')
                    MixedStyledText('This particular application does...')
                      SingleStyledText('This particular application does...')
                      MixedStyledText('ok', style='monospaced')   programmers-guide.md:173   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('ok')
                      SingleStyledText('.  Typical AtomVM applications w...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('16		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('16		Chapter 3.  Programmers Guid...')
          MixedStyledText('16		Chapter 3.  Programmers Guid...')
            Field('16')
              SingleStyledText('16')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 17 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#applications')   programmers-guide.md:157   <section>
              (continued) Paragraph('This particular application does...')   programmers-guide.md:173   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              Paragraph('Most applications will spawn pro...')   programmers-guide.md:175   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Most applications will spawn pro...')
                    MixedStyledText('Most applications will spawn pro...')
                      SingleStyledText('Most applications will spawn pro...')
                      SingleStyledText(' ')
                      SingleStyledText('wait for certain conditions to a...')
                      SingleStyledText(' ')
                      SingleStyledText('that spawn processes and run for...')
                      MixedStyledText('receive ... end', style='monospaced')   programmers-guide.md:175   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('receive ... end')
                      SingleStyledText(' block, to')
                      SingleStyledText(' ')
                      SingleStyledText('prevent the AtomVM from terminat...')
              CodeBlock('%% erlang\nwait_forever() ->\n    ...')   programmers-guide.md:180   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\nwait_forever() ->\n    ...')
                    MixedStyledText('%% erlang\nwait_forever() ->\n    ...')
                      Token('%% erlang\nwait_forever() ->\n    ...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%programmers-guide#packbeam-files')   programmers-guide.md:185   <section>
                Heading('3.3.1 Packbeam files')   programmers-guide.md:185   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.3.1 ')
                      SingleStyledText('3.3.1')
                      SingleStyledText(' ')
                    MixedStyledText('Packbeam files')
                      MixedStyledText('Packbeam files')
                        SingleStyledText('Packbeam files')
                Paragraph('AtomVM applications are packaged...')   programmers-guide.md:187   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM applications are packaged...')
                      MixedStyledText('AtomVM applications are packaged...')
                        SingleStyledText('AtomVM applications are packaged...')
                        MixedStyledText('.avm', style='monospaced')   programmers-guide.md:187   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.avm')
                        SingleStyledText(') files, which contain collectio...')
                        MixedStyledText('.beam', style='monospaced')   programmers-guide.md:187   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.beam')
                        SingleStyledText(') files that have been generated...')
                Paragraph('At least one BEAM module in this...')   programmers-guide.md:189   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('At least one BEAM module in this...')
                      MixedStyledText('At least one BEAM module in this...')
                        SingleStyledText('At least one BEAM module in this...')
                        MixedStyledText('start/0', style='monospaced')   programmers-guide.md:189   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function.  The first module in ...')
                Paragraph('Not all files in a Packbeam need...')   programmers-guide.md:191   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Not all files in a Packbeam need...')
                      MixedStyledText('Not all files in a Packbeam need...')
                        SingleStyledText('Not all files in a Packbeam need...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:193   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  The Packbeam format is de...')   programmers-guide.md:193   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  The Packbeam format is de...')
                        MixedStyledText('Note.  The Packbeam format is de...')
                          SingleStyledText('Note.  The Packbeam format is de...')
                          Reference('PackBEAM format')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('PackBEAM format')
                              MixedStyledText('PackBEAM format')   <inline>
                                SingleStyledText('PackBEAM format')
                          SingleStyledText('.')
                Paragraph('The AtomVM community has provide...')   programmers-guide.md:195   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM community has provide...')
                      MixedStyledText('The AtomVM community has provide...')
                        SingleStyledText('The AtomVM community has provide...')
                        MixedStyledText('rebar3', style='monospaced')   programmers-guide.md:195   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('rebar3')
                        SingleStyledText(' and ')
                        MixedStyledText('mix', style='monospaced')   programmers-guide.md:195   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mix')
                        SingleStyledText(') to build Packbeam files and de...')
              Section(id='%programmers-guide#packbeam-tool')   programmers-guide.md:197   <section>
                Heading('3.3.2 PackBEAM tool')   programmers-guide.md:197   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.3.2 ')
                      SingleStyledText('3.3.2')
                      SingleStyledText(' ')
                    MixedStyledText('PackBEAM tool')
                      MixedStyledText('PackBEAM tool')
                        MixedStyledText('PackBEAM', style='monospaced')   programmers-guide.md:197   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('PackBEAM')
                        SingleStyledText(' tool')
                Paragraph('The PackBEAM tool is a command-l...')   programmers-guide.md:199   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The PackBEAM tool is a command-l...')
                      MixedStyledText('The PackBEAM tool is a command-l...')
                        SingleStyledText('The ')
                        MixedStyledText('PackBEAM', style='monospaced')   programmers-guide.md:199   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('PackBEAM')
                        SingleStyledText(' tool is a command-line applicat...')
                CodeBlock('shell$ PackBEAM -h\nUsage: PackBE...')   programmers-guide.md:201   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ PackBEAM -h\nUsage: PackBE...')
                      MixedStyledText('shell$ PackBEAM -h\nUsage: PackBE...')
                        Token('shell$ PackBEAM -h\nUsage: PackBE...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To create a packbeam file, speci...')   programmers-guide.md:207   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To create a packbeam file, speci...')
                      MixedStyledText('To create a packbeam file, speci...')
                        SingleStyledText('To create a packbeam file, speci...')
                        MixedStyledText('.avm', style='monospaced')   programmers-guide.md:207   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.avm')
                        SingleStyledText('), followed by a list of BEAM fi...')
                CodeBlock('shell$ PackBEAM foo.avm path/to/...')   programmers-guide.md:209   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ PackBEAM foo.avm path/to/...')
                      MixedStyledText('shell$ PackBEAM foo.avm path/to/...')
                        Token('shell$ PackBEAM foo.avm path/to/...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You can also specify another AVM...')   programmers-guide.md:211   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can also specify another AVM...')
                      MixedStyledText('You can also specify another AVM...')
                        SingleStyledText('You can also specify another AVM...')
                CodeBlock('shell$ PackBEAM foo.avm foo.avm ...')   programmers-guide.md:213   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ PackBEAM foo.avm foo.avm ...')
                      MixedStyledText('shell$ PackBEAM foo.avm foo.avm ...')
                        Token('shell$ PackBEAM foo.avm foo.avm ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To list the contents of an AVM f...')   programmers-guide.md:215   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To list the contents of an AVM f...')
                      MixedStyledText('To list the contents of an AVM f...')
                        SingleStyledText('To list the contents of an AVM f...')
                        MixedStyledText('-l', style='monospaced')   programmers-guide.md:215   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('-l')
                        SingleStyledText(' flag:')
                CodeBlock('shell% PackBEAM -l foo.avm\nfoo.b...')   programmers-guide.md:217   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell% PackBEAM -l foo.avm\nfoo.b...')
                      MixedStyledText('shell% PackBEAM -l foo.avm\nfoo.b...')
                        Token('shell% PackBEAM -l foo.avm\nfoo.b...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Any BEAM files that export a sta...')   programmers-guide.md:222   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Any BEAM files that export a sta...')
                      MixedStyledText('Any BEAM files that export a sta...')
                        SingleStyledText('Any BEAM files that export a ')
                        MixedStyledText('start/0', style='monospaced')   programmers-guide.md:222   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function will contain an asteri...')
                        MixedStyledText('*', style='monospaced')   programmers-guide.md:222   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('*')
                        SingleStyledText(') in the AVM file contents.')
              Section(id='%programmers-guide#running-atomvm')   programmers-guide.md:224   <section>
                Heading('3.3.3 Running AtomVM')   programmers-guide.md:224   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.3.3 ')
                      SingleStyledText('3.3.3')
                      SingleStyledText(' ')
                    MixedStyledText('Running AtomVM')
                      MixedStyledText('Running AtomVM')
                        SingleStyledText('Running AtomVM')
                Paragraph('AtomVM is executed in different ...')   programmers-guide.md:226   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM is executed in different ...')
                      MixedStyledText('AtomVM is executed in different ...')
                        SingleStyledText('AtomVM is executed in different ...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.3.  Applications		17')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.3.  Applications		17')
          MixedStyledText('3.3.  Applications		17')
            Field('3.3')
              SingleStyledText('3.3')
            SingleStyledText('.  ')
            Field('Applications')
              MixedStyledText('Applications')
                MixedStyledText('Applications')
                  SingleStyledText('Applications')
            Tab('	')
            Tab('	')
            Field('17')
              SingleStyledText('17')
---------------------------------- page 18 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#applications')   programmers-guide.md:157   <section>
              (continued) Section(id='%programmers-guide#running-atomvm')   programmers-guide.md:224   <section>
                (continued) Paragraph('AtomVM is executed in different ...')   programmers-guide.md:226   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('AtomVM will use the first module...')   programmers-guide.md:228   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM will use the first module...')
                      MixedStyledText('AtomVM will use the first module...')
                        SingleStyledText('AtomVM will use the first module...')
                        MixedStyledText('start/0', style='monospaced')   programmers-guide.md:228   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function as the entrypoint for ...')
                Section(id='%programmers-guide#atomvm-program-syntax')   programmers-guide.md:230   <section>
                  Heading('AtomVM program syntax')   programmers-guide.md:230   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('AtomVM program syntax')
                        MixedStyledText('AtomVM program syntax')
                          MixedStyledText('AtomVM', style='monospaced')   programmers-guide.md:230   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' program syntax')
                  Paragraph('On UNIX platforms, you can speci...')   programmers-guide.md:232   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('On UNIX platforms, you can speci...')
                        MixedStyledText('On UNIX platforms, you can speci...')
                          SingleStyledText('On UNIX platforms, you can speci...')
                  CodeBlock('shell$ AtomVM foo.avm\n')   programmers-guide.md:234   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ AtomVM foo.avm\n')
                        MixedStyledText('shell$ AtomVM foo.avm\n')
                          Token('shell$ AtomVM foo.avm\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   programmers-guide.md:236   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. If you start the AtomVM ex...')   programmers-guide.md:236   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. If you start the AtomVM ex...')
                          MixedStyledText('Note. If you start the AtomVM ex...')
                            SingleStyledText('Note. If you start the ')
                            MixedStyledText('AtomVM', style='monospaced')   programmers-guide.md:236   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('AtomVM')
                            SingleStyledText(' executable with a BEAM file, th...')
            Section(id='%programmers-guide#core-apis')   programmers-guide.md:238   <section>
              Heading('3.4 Core APIs')   programmers-guide.md:238   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.4 ')
                    SingleStyledText('3.4')
                    SingleStyledText(' ')
                  MixedStyledText('Core APIs')
                    MixedStyledText('Core APIs')
                      SingleStyledText('Core APIs')
              Paragraph('The AtomVM virtual machine provi...')   programmers-guide.md:240   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM virtual machine provi...')
                    MixedStyledText('The AtomVM virtual machine provi...')
                      SingleStyledText('The AtomVM virtual machine provi...')
              Paragraph('This section provides an overvie...')   programmers-guide.md:242   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This section provides an overvie...')
                    MixedStyledText('This section provides an overvie...')
                      SingleStyledText('This section provides an overvie...')
                      Reference('API reference documentation')   <reference>
                           > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                        MixedStyledText('API reference documentation')
                          MixedStyledText('API reference documentation')   <inline>
                            SingleStyledText('API reference documentation')
                      SingleStyledText('.')
              Section(id='%programmers-guide#standard-libraries')   programmers-guide.md:244   <section>
                Heading('3.4.1 Standard Libraries')   programmers-guide.md:244   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.4.1 ')
                      SingleStyledText('3.4.1')
                      SingleStyledText(' ')
                    MixedStyledText('Standard Libraries')
                      MixedStyledText('Standard Libraries')
                        SingleStyledText('Standard Libraries')
                Paragraph('AtomVM provides a limited implem...')   programmers-guide.md:246   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM provides a limited implem...')
                      MixedStyledText('AtomVM provides a limited implem...')
                        SingleStyledText('AtomVM provides a limited implem...')
                List(style='bulleted')   programmers-guide.md:248   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:248   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('base64')   programmers-guide.md:248   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('base64')
                            MixedStyledText('base64')
                              MixedStyledText('base64', style='monospaced')   programmers-guide.md:248   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('base64')
                  ListItem()   programmers-guide.md:249   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('gen_server')   programmers-guide.md:249   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('gen_server')
                            MixedStyledText('gen_server')
                              MixedStyledText('gen_server', style='monospaced')   programmers-guide.md:249   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('gen_server')
                  ListItem()   programmers-guide.md:250   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('gen_statem')   programmers-guide.md:250   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('gen_statem')
                            MixedStyledText('gen_statem')
                              MixedStyledText('gen_statem', style='monospaced')   programmers-guide.md:250   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('gen_statem')
                  ListItem()   programmers-guide.md:251   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('io and io_lib')   programmers-guide.md:251   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('io and io_lib')
                            MixedStyledText('io and io_lib')
                              MixedStyledText('io', style='monospaced')   programmers-guide.md:251   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('io')
                              SingleStyledText(' and ')
                              MixedStyledText('io_lib', style='monospaced')   programmers-guide.md:251   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('io_lib')
                  ListItem()   programmers-guide.md:252   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('lists')   programmers-guide.md:252   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('lists')
                            MixedStyledText('lists')
                              MixedStyledText('lists', style='monospaced')   programmers-guide.md:252   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('lists')
                  ListItem()   programmers-guide.md:253   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('maps')   programmers-guide.md:253   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('maps')
                            MixedStyledText('maps')
                              MixedStyledText('maps', style='monospaced')   programmers-guide.md:253   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('maps')
                  ListItem()   programmers-guide.md:254   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('proplists')   programmers-guide.md:254   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('proplists')
                            MixedStyledText('proplists')
                              MixedStyledText('proplists', style='monospaced')   programmers-guide.md:254   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('proplists')
                  ListItem()   programmers-guide.md:255   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('supervisor')   programmers-guide.md:255   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('supervisor')
                            MixedStyledText('supervisor')
                              MixedStyledText('supervisor', style='monospaced')   programmers-guide.md:255   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('supervisor')
                  ListItem()   programmers-guide.md:256   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('timer')   programmers-guide.md:256   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('timer')
                            MixedStyledText('timer')
                              MixedStyledText('timer', style='monospaced')   programmers-guide.md:256   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('timer')
                Paragraph('In addition AtomVM provides limi...')   programmers-guide.md:258   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In addition AtomVM provides limi...')
                      MixedStyledText('In addition AtomVM provides limi...')
                        SingleStyledText('In addition AtomVM provides limi...')
                List(style='bulleted')   programmers-guide.md:260   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:260   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('List')   programmers-guide.md:260   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('List')
                            MixedStyledText('List')
                              MixedStyledText('List', style='monospaced')   programmers-guide.md:260   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('List')
                  ListItem()   programmers-guide.md:261   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Tuple')   programmers-guide.md:261   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Tuple')
                            MixedStyledText('Tuple')
                              MixedStyledText('Tuple', style='monospaced')   programmers-guide.md:261   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Tuple')
                  ListItem()   programmers-guide.md:262   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Enum')   programmers-guide.md:262   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Enum')
                            MixedStyledText('Enum')
                              MixedStyledText('Enum', style='monospaced')   programmers-guide.md:262   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Enum')
                  ListItem()   programmers-guide.md:263   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Kernel')   programmers-guide.md:263   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Kernel')
                            MixedStyledText('Kernel')
                              MixedStyledText('Kernel', style='monospaced')   programmers-guide.md:263   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Kernel')
                  ListItem()   programmers-guide.md:264   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Module')   programmers-guide.md:264   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Module')
                            MixedStyledText('Module')
                              MixedStyledText('Module', style='monospaced')   programmers-guide.md:264   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Module')
                  ListItem()   programmers-guide.md:265   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Process')   programmers-guide.md:265   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Process')
                            MixedStyledText('Process')
                              MixedStyledText('Process', style='monospaced')   programmers-guide.md:265   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Process')
                  ListItem()   programmers-guide.md:266   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Console')   programmers-guide.md:266   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Console')
                            MixedStyledText('Console')
                              MixedStyledText('Console', style='monospaced')   programmers-guide.md:266   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Console')
                Paragraph('For detailed information about t...')   programmers-guide.md:268   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For detailed information about t...')
                      MixedStyledText('For detailed information about t...')
                        SingleStyledText('For detailed information about t...')
                        Reference('API reference documentation')   <reference>
                             > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                          MixedStyledText('API reference documentation')
                            MixedStyledText('API reference documentation')   <inline>
                              SingleStyledText('API reference documentation')
                        SingleStyledText('.  These modules provide a stric...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('18		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('18		Chapter 3.  Programmers Guid...')
          MixedStyledText('18		Chapter 3.  Programmers Guid...')
            Field('18')
              SingleStyledText('18')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 19 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#core-apis')   programmers-guide.md:238   <section>
              Section(id='%programmers-guide#console-output')   programmers-guide.md:270   <section>
                Heading('3.4.2 Console Output')   programmers-guide.md:270   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                Paragraph('There are several mechanisms for...')   programmers-guide.md:272   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('There are several mechanisms for...')
                      MixedStyledText('There are several mechanisms for...')
                        SingleStyledText('There are several mechanisms for...')
                Paragraph('For common debugging, many users...')   programmers-guide.md:274   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For common debugging, many users...')
                      MixedStyledText('For common debugging, many users...')
                        SingleStyledText('For common debugging, many users...')
                        MixedStyledText('erlang:display/1', style='monospaced')   programmers-guide.md:274   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:display/1')
                        SingleStyledText(' sufficient for debugging:')
                CodeBlock('%% erlang\nerlang:display({foo, [...')   programmers-guide.md:276   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nerlang:display({foo, [...')
                      MixedStyledText('%% erlang\nerlang:display({foo, [...')
                        Token('%% erlang\nerlang:display({foo, [...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The output parameter is any Erla...')   programmers-guide.md:279   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The output parameter is any Erla...')
                      MixedStyledText('The output parameter is any Erla...')
                        SingleStyledText('The output parameter is any Erla...')
                Paragraph('Users may prefer using the io:fo...')   programmers-guide.md:281   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Users may prefer using the io:fo...')
                      MixedStyledText('Users may prefer using the io:fo...')
                        SingleStyledText('Users may prefer using the ')
                        MixedStyledText('io:format/1,2', style='monospaced')   programmers-guide.md:281   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('io:format/1,2')
                        SingleStyledText(' functions for more controlled o...')
                CodeBlock('%% erlang\nio:format("The ~p did ...')   programmers-guide.md:283   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nio:format("The ~p did ...')
                      MixedStyledText('%% erlang\nio:format("The ~p did ...')
                        Token('%% erlang\nio:format("The ~p did ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Note that the io_lib module can ...')   programmers-guide.md:286   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note that the io_lib module can ...')
                      MixedStyledText('Note that the io_lib module can ...')
                        SingleStyledText('Note that the ')
                        MixedStyledText('io_lib', style='monospaced')   programmers-guide.md:286   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('io_lib')
                        SingleStyledText(' module can be used to format st...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:288   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. Formatting parameters are ...')   programmers-guide.md:288   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. Formatting parameters are ...')
                        MixedStyledText('Note. Formatting parameters are ...')
                          SingleStyledText('Note. Formatting parameters are ...')
                          MixedStyledText('~p', style='monospaced')   programmers-guide.md:288   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('~p')
                          SingleStyledText(', ')
                          MixedStyledText('~s', style='monospaced')   programmers-guide.md:288   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('~s')
                          SingleStyledText(', and ')
                          MixedStyledText('~n', style='monospaced')   programmers-guide.md:288   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('~n')
                          SingleStyledText('.')
              Section(id='%programmers-guide#process-management')   programmers-guide.md:290   <section>
                Heading('3.4.3 Process Management')   programmers-guide.md:290   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.4.3 ')
                      SingleStyledText('3.4.3')
                      SingleStyledText(' ')
                    MixedStyledText('Process Management')
                      MixedStyledText('Process Management')
                        SingleStyledText('Process Management')
                Paragraph('You can obtain a list of all pro...')   programmers-guide.md:292   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can obtain a list of all pro...')
                      MixedStyledText('You can obtain a list of all pro...')
                        SingleStyledText('You can obtain a list of all pro...')
                        MixedStyledText('erlang:processes/0', style='monospaced')   programmers-guide.md:292   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:processes/0')
                        SingleStyledText(':')
                CodeBlock('%% erlang\nPids = erlang:processe...')   programmers-guide.md:294   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nPids = erlang:processe...')
                      MixedStyledText('%% erlang\nPids = erlang:processe...')
                        Token('%% erlang\nPids = erlang:processe...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('And for each process, you can ge...')   programmers-guide.md:297   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('And for each process, you can ge...')
                      MixedStyledText('And for each process, you can ge...')
                        SingleStyledText('And for each process, you can ge...')
                        MixedStyledText('erlang:process_info/1', style='monospaced')   programmers-guide.md:297   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:process_info/1')
                        SingleStyledText(' function:')
                CodeBlock('%% erlang\n[io:format("Process in...')   programmers-guide.md:299   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\n[io:format("Process in...')
                      MixedStyledText('%% erlang\n[io:format("Process in...')
                        Token('%% erlang\n[io:format("Process in...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The return value is a property l...')   programmers-guide.md:302   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The return value is a property l...')
                      MixedStyledText('The return value is a property l...')
                        SingleStyledText('The return value is a property l...')
                        MixedStyledText('heap_size', style='monospaced')   programmers-guide.md:302   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('heap_size')
                        SingleStyledText(', ')
                        MixedStyledText('stack_size', style='monospaced')   programmers-guide.md:302   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('stack_size')
                        SingleStyledText(', ')
                        MixedStyledText('message_queue_len', style='monospaced')   programmers-guide.md:302   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('message_queue_len')
                        SingleStyledText(',and ')
                        MixedStyledText('memory', style='monospaced')   programmers-guide.md:302   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('memory')
                        SingleStyledText(' consumed by the process.')
              Section(id='%programmers-guide#system-apis')   programmers-guide.md:304   <section>
                Heading('3.4.4 System APIs')   programmers-guide.md:304   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.4.4 ')
                      SingleStyledText('3.4.4')
                      SingleStyledText(' ')
                    MixedStyledText('System APIs')
                      MixedStyledText('System APIs')
                        SingleStyledText('System APIs')
                Paragraph('You can obtain system informatio...')   programmers-guide.md:306   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can obtain system informatio...')
                      MixedStyledText('You can obtain system informatio...')
                        SingleStyledText('You can obtain system informatio...')
                        MixedStyledText('erlang:system_info/1', style='monospaced')   programmers-guide.md:306   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:system_info/1')
                        SingleStyledText(' function, which takes an atom p...')
                List(style='bulleted')   programmers-guide.md:308   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:308   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('process_count The number of proc...')   programmers-guide.md:308   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('process_count The number of proc...')
                            MixedStyledText('process_count The number of proc...')
                              MixedStyledText('process_count', style='monospaced')   programmers-guide.md:308   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('process_count')
                              SingleStyledText(' The number of processes running...')
                  ListItem()   programmers-guide.md:309   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('port_count The number of ports r...')   programmers-guide.md:309   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('port_count The number of ports r...')
                            MixedStyledText('port_count The number of ports r...')
                              MixedStyledText('port_count', style='monospaced')   programmers-guide.md:309   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('port_count')
                              SingleStyledText(' The number of ports running in ...')
                  ListItem()   programmers-guide.md:310   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('atom_count The number of atoms a...')   programmers-guide.md:310   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atom_count The number of atoms a...')
                            MixedStyledText('atom_count The number of atoms a...')
                              MixedStyledText('atom_count', style='monospaced')   programmers-guide.md:310   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('atom_count')
                              SingleStyledText(' The number of atoms allocated i...')
                  ListItem()   programmers-guide.md:311   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('word_size The word size (in byte...')   programmers-guide.md:311   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('word_size The word size (in byte...')
                            MixedStyledText('word_size The word size (in byte...')
                              MixedStyledText('word_size', style='monospaced')   programmers-guide.md:311   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('word_size')
                              SingleStyledText(' The word size (in bytes) on the...')
                Paragraph('For example,')   programmers-guide.md:313   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example,')
                      MixedStyledText('For example,')
                        SingleStyledText('For example,')
                CodeBlock('%% erlang\nio:format("Atom Count:...')   programmers-guide.md:315   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nio:format("Atom Count:...')
                      MixedStyledText('%% erlang\nio:format("Atom Count:...')
                        Token('%% erlang\nio:format("Atom Count:...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:318   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Additional platform-speci...')   programmers-guide.md:318   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Additional platform-speci...')
                        MixedStyledText('Note.  Additional platform-speci...')
                          SingleStyledText('Note.  Additional platform-speci...')
                Paragraph('Use the atomvm:platform/0 to obt...')   programmers-guide.md:320   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use the atomvm:platform/0 to obt...')
                      MixedStyledText('Use the atomvm:platform/0 to obt...')
                        SingleStyledText('Use the ')
                        MixedStyledText('atomvm:platform/0', style='monospaced')   programmers-guide.md:320   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm:platform/0')
                        SingleStyledText(' to obtain the system platform o...')
                CodeBlock('%% erlang\ncase atomvm:platform()...')   programmers-guide.md:322   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\ncase atomvm:platform()...')
                      MixedStyledText('%% erlang\ncase atomvm:platform()...')
                        Token('%% erlang\ncase atomvm:platform()...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.4.  Core APIs		19')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.4.  Core APIs		19')
          MixedStyledText('3.4.  Core APIs		19')
            Field('3.4')
              SingleStyledText('3.4')
            SingleStyledText('.  ')
            Field('Core APIs')
              MixedStyledText('Core APIs')
                MixedStyledText('Core APIs')
                  SingleStyledText('Core APIs')
            Tab('	')
            Tab('	')
            Field('19')
              SingleStyledText('19')
---------------------------------- page 20 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#core-apis')   programmers-guide.md:238   <section>
              (continued) Section(id='%programmers-guide#system-apis')   programmers-guide.md:304   <section>
                (continued) CodeBlock('%% erlang\ncase atomvm:platform()...')   programmers-guide.md:322   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('Use erlang:garbage_collect/0 or ...')   programmers-guide.md:332   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use erlang:garbage_collect/0 or ...')
                      MixedStyledText('Use erlang:garbage_collect/0 or ...')
                        SingleStyledText('Use ')
                        MixedStyledText('erlang:garbage_collect/0', style='monospaced')   programmers-guide.md:332   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:garbage_collect/0')
                        SingleStyledText(' or ')
                        MixedStyledText('erlang:garbage_collect/1', style='monospaced')   programmers-guide.md:332   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:garbage_collect/1')
                        SingleStyledText(' to force the AtomVM garbage col...')
                Paragraph('The 0-arity version of this func...')   programmers-guide.md:334   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The 0-arity version of this func...')
                      MixedStyledText('The 0-arity version of this func...')
                        SingleStyledText('The 0-arity version of this func...')
                CodeBlock('%% erlang\nPid = ... %% get a ref...')   programmers-guide.md:336   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nPid = ... %% get a ref...')
                      MixedStyledText('%% erlang\nPid = ... %% get a ref...')
                        Token('%% erlang\nPid = ... %% get a ref...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%programmers-guide#system-time')   programmers-guide.md:340   <section>
                Heading('3.4.5 System Time')   programmers-guide.md:340   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.4.5 ')
                      SingleStyledText('3.4.5')
                      SingleStyledText(' ')
                    MixedStyledText('System Time')
                      MixedStyledText('System Time')
                        SingleStyledText('System Time')
                Paragraph('AtomVM supports numerous functio...')   programmers-guide.md:342   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM supports numerous functio...')
                      MixedStyledText('AtomVM supports numerous functio...')
                        SingleStyledText('AtomVM supports numerous functio...')
                Paragraph('Use erlang:timestamp/0 to get th...')   programmers-guide.md:344   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use erlang:timestamp/0 to get th...')
                      MixedStyledText('Use erlang:timestamp/0 to get th...')
                        SingleStyledText('Use ')
                        MixedStyledText('erlang:timestamp/0', style='monospaced')   programmers-guide.md:344   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:timestamp/0')
                        SingleStyledText(' to get the current time since t...')
                CodeBlock('%% erlang\n{MegaSecs, Secs, Micro...')   programmers-guide.md:346   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\n{MegaSecs, Secs, Micro...')
                      MixedStyledText('%% erlang\n{MegaSecs, Secs, Micro...')
                        Token('%% erlang\n{MegaSecs, Secs, Micro...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('User erlang:system_time/1 to obt...')   programmers-guide.md:349   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('User erlang:system_time/1 to obt...')
                      MixedStyledText('User erlang:system_time/1 to obt...')
                        SingleStyledText('User ')
                        MixedStyledText('erlang:system_time/1', style='monospaced')   programmers-guide.md:349   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:system_time/1')
                        SingleStyledText(' to obtain the seconds or millis...')
                CodeBlock('%% erlang\nSeconds = erlang:syste...')   programmers-guide.md:351   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nSeconds = erlang:syste...')
                      MixedStyledText('%% erlang\nSeconds = erlang:syste...')
                        Token('%% erlang\nSeconds = erlang:syste...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Use erlang:universaltime/0 to ge...')   programmers-guide.md:355   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use erlang:universaltime/0 to ge...')
                      MixedStyledText('Use erlang:universaltime/0 to ge...')
                        SingleStyledText('Use ')
                        MixedStyledText('erlang:universaltime/0', style='monospaced')   programmers-guide.md:355   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:universaltime/0')
                        SingleStyledText(' to get the current time at seco...')
                CodeBlock('%% erlang\n{{Year, Month, Day}, {...')   programmers-guide.md:357   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\n{{Year, Month, Day}, {...')
                      MixedStyledText('%% erlang\n{{Year, Month, Day}, {...')
                        Token('%% erlang\n{{Year, Month, Day}, {...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:360   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Setting the system time i...')   programmers-guide.md:360   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Setting the system time i...')
                        MixedStyledText('Note.  Setting the system time i...')
                          SingleStyledText('Note.  Setting the system time i...')
                          Reference('Network Programming Guide')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('Network Programming Guide')
                              MixedStyledText('Network Programming Guide')   <inline>
                                SingleStyledText('Network Programming Guide')
                          SingleStyledText('.')
              Section(id='%programmers-guide#miscellaneous')   programmers-guide.md:362   <section>
                Heading('3.4.6 Miscellaneous')   programmers-guide.md:362   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.4.6 ')
                      SingleStyledText('3.4.6')
                      SingleStyledText(' ')
                    MixedStyledText('Miscellaneous')
                      MixedStyledText('Miscellaneous')
                        SingleStyledText('Miscellaneous')
                Paragraph('Use the erlang:md5/1 function to...')   programmers-guide.md:364   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use the erlang:md5/1 function to...')
                      MixedStyledText('Use the erlang:md5/1 function to...')
                        SingleStyledText('Use the ')
                        MixedStyledText('erlang:md5/1', style='monospaced')   programmers-guide.md:364   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:md5/1')
                        SingleStyledText(' function to compute the MD5 has...')
                CodeBlock('%% erlang\nHash = erlang:md5(<<fo...')   programmers-guide.md:366   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nHash = erlang:md5(<<fo...')
                      MixedStyledText('%% erlang\nHash = erlang:md5(<<fo...')
                        Token('%% erlang\nHash = erlang:md5(<<fo...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Use atomvm:random/0 to generate ...')   programmers-guide.md:369   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use atomvm:random/0 to generate ...')
                      MixedStyledText('Use atomvm:random/0 to generate ...')
                        SingleStyledText('Use ')
                        MixedStyledText('atomvm:random/0', style='monospaced')   programmers-guide.md:369   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm:random/0')
                        SingleStyledText(' to generate a random unsigned 3...')
                        MixedStyledText('0..4294967295', style='monospaced')   programmers-guide.md:369   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0..4294967295')
                        SingleStyledText(':')
                CodeBlock('%% erlang\nRandomInetger = atomvm...')   programmers-guide.md:371   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nRandomInetger = atomvm...')
                      MixedStyledText('%% erlang\nRandomInetger = atomvm...')
                        Token('%% erlang\nRandomInetger = atomvm...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Use atomvm:random_bytes/1 to ret...')   programmers-guide.md:374   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use atomvm:random_bytes/1 to ret...')
                      MixedStyledText('Use atomvm:random_bytes/1 to ret...')
                        SingleStyledText('Use ')
                        MixedStyledText('atomvm:random_bytes/1', style='monospaced')   programmers-guide.md:374   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm:random_bytes/1')
                        SingleStyledText(' to return a randomly populated ...')
                CodeBlock('%% erlang\nRandomBinary = erlang:...')   programmers-guide.md:376   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nRandomBinary = erlang:...')
                      MixedStyledText('%% erlang\nRandomBinary = erlang:...')
                        Token('%% erlang\nRandomBinary = erlang:...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('20		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('20		Chapter 3.  Programmers Guid...')
          MixedStyledText('20		Chapter 3.  Programmers Guid...')
            Field('20')
              SingleStyledText('20')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 21 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#core-apis')   programmers-guide.md:238   <section>
              (continued) Section(id='%programmers-guide#miscellaneous')   programmers-guide.md:362   <section>
                Paragraph('Use base64:encode/1 and base64:d...')   programmers-guide.md:379   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                CodeBlock('%% erlang\nEncoded = base64:encod...')   programmers-guide.md:381   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nEncoded = base64:encod...')
                      MixedStyledText('%% erlang\nEncoded = base64:encod...')
                        Token('%% erlang\nEncoded = base64:encod...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You can Use base64:encode_to_str...')   programmers-guide.md:385   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can Use base64:encode_to_str...')
                      MixedStyledText('You can Use base64:encode_to_str...')
                        SingleStyledText('You can Use ')
                        MixedStyledText('base64:encode_to_string/1', style='monospaced')   programmers-guide.md:385   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('base64:encode_to_string/1')
                        SingleStyledText(' and ')
                        MixedStyledText('base64:decode_to_string/1', style='monospaced')   programmers-guide.md:385   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('base64:decode_to_string/1')
                        SingleStyledText(' to perform the same encoding, b...')
            Section(id='%programmers-guide#esp32-specific-apis')   programmers-guide.md:387   <section>
              Heading('3.5 ESP32-specific APIs')   programmers-guide.md:387   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.5 ')
                    SingleStyledText('3.5')
                    SingleStyledText(' ')
                  MixedStyledText('ESP32-specific APIs')
                    MixedStyledText('ESP32-specific APIs')
                      SingleStyledText('ESP32-specific APIs')
              Paragraph('Certain APIs are specific to and...')   programmers-guide.md:389   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Certain APIs are specific to and...')
                    MixedStyledText('Certain APIs are specific to and...')
                      SingleStyledText('Certain APIs are specific to and...')
              Section(id='%programmers-guide#system-level-apis')   programmers-guide.md:391   <section>
                Heading('3.5.1 System-Level APIs')   programmers-guide.md:391   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.5.1 ')
                      SingleStyledText('3.5.1')
                      SingleStyledText(' ')
                    MixedStyledText('System-Level APIs')
                      MixedStyledText('System-Level APIs')
                        SingleStyledText('System-Level APIs')
                Paragraph('As noted above, the erlang:syste...')   programmers-guide.md:393   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('As noted above, the erlang:syste...')
                      MixedStyledText('As noted above, the erlang:syste...')
                        SingleStyledText('As noted above, the ')
                        MixedStyledText('erlang:system_info/1', style='monospaced')   programmers-guide.md:393   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:system_info/1')
                        SingleStyledText(' function can be used to obtain ...')
                Paragraph('You can request ESP32-specific i...')   programmers-guide.md:395   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can request ESP32-specific i...')
                      MixedStyledText('You can request ESP32-specific i...')
                        SingleStyledText('You can request ESP32-specific i...')
                List(style='bulleted')   programmers-guide.md:397   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:397   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_free_heap_size Returns the a...')   programmers-guide.md:397   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_free_heap_size Returns the a...')
                            MixedStyledText('esp_free_heap_size Returns the a...')
                              MixedStyledText('esp_free_heap_size', style='monospaced')   programmers-guide.md:397   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_free_heap_size')
                              SingleStyledText(' Returns the available free spac...')
                  ListItem()   programmers-guide.md:398   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_chip_info Returns 4-tuple of...')   programmers-guide.md:398   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_chip_info Returns 4-tuple of...')
                            MixedStyledText('esp_chip_info Returns 4-tuple of...')
                              MixedStyledText('esp_chip_info', style='monospaced')   programmers-guide.md:398   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_chip_info')
                              SingleStyledText(' Returns 4-tuple of the form ')
                              MixedStyledText('{esp32, Features, Cores, Revisio...', style='monospaced')   programmers-guide.md:398   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('{esp32, Features, Cores, Revisio...')
                              SingleStyledText(', where ')
                              MixedStyledText('Features', style='monospaced')   programmers-guide.md:398   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Features')
                              SingleStyledText(' is a bit mask of features enabl...')
                              MixedStyledText('Cores', style='monospaced')   programmers-guide.md:398   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Cores')
                              SingleStyledText(' is the number of CPU cores on t...')
                              MixedStyledText('Revision', style='monospaced')   programmers-guide.md:398   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Revision')
                              SingleStyledText(' is the chip version.')
                  ListItem()   programmers-guide.md:399   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_idf_version Return the IDF S...')   programmers-guide.md:399   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_idf_version Return the IDF S...')
                            MixedStyledText('esp_idf_version Return the IDF S...')
                              MixedStyledText('esp_idf_version', style='monospaced')   programmers-guide.md:399   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_idf_version')
                              SingleStyledText(' Return the IDF SDK version, as ...')
                Paragraph('For example,')   programmers-guide.md:401   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example,')
                      MixedStyledText('For example,')
                        SingleStyledText('For example,')
                CodeBlock('%% erlang\nFreeHeapSize = erlang:...')   programmers-guide.md:403   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nFreeHeapSize = erlang:...')
                      MixedStyledText('%% erlang\nFreeHeapSize = erlang:...')
                        Token('%% erlang\nFreeHeapSize = erlang:...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%programmers-guide#non-volatile-storage')   programmers-guide.md:406   <section>
                Heading('3.5.2 Non-volatile Storage')   programmers-guide.md:406   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.5.2 ')
                      SingleStyledText('3.5.2')
                      SingleStyledText(' ')
                    MixedStyledText('Non-volatile Storage')
                      MixedStyledText('Non-volatile Storage')
                        SingleStyledText('Non-volatile Storage')
                Paragraph('AtomVM provides functions for se...')   programmers-guide.md:408   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM provides functions for se...')
                      MixedStyledText('AtomVM provides functions for se...')
                        SingleStyledText('AtomVM provides functions for se...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:410   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  NVS storage is limited in...')   programmers-guide.md:410   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  NVS storage is limited in...')
                        MixedStyledText('Note.  NVS storage is limited in...')
                          SingleStyledText('Note.  NVS storage is limited in...')
                Paragraph('NVS entries are stored under a n...')   programmers-guide.md:412   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('NVS entries are stored under a n...')
                      MixedStyledText('NVS entries are stored under a n...')
                        SingleStyledText('NVS entries are stored under a n...')
                        MixedStyledText('atomvm', style='monospaced')   programmers-guide.md:412   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm')
                        SingleStyledText(' for entries under its control. ...')
                        MixedStyledText('atomvm', style='monospaced')   programmers-guide.md:412   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm')
                        SingleStyledText(' namespace, but they are strongl...')
                Paragraph('To set a value in non-volatile s...')   programmers-guide.md:414   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To set a value in non-volatile s...')
                      MixedStyledText('To set a value in non-volatile s...')
                        SingleStyledText('To set a value in non-volatile s...')
                        MixedStyledText('esp:set_binary/3', style='monospaced')   programmers-guide.md:414   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:set_binary/3')
                        SingleStyledText(' function, and specify a namespa...')
                CodeBlock('%% erlang\nNamespace = <<"my-name...')   programmers-guide.md:416   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nNamespace = <<"my-name...')
                      MixedStyledText('%% erlang\nNamespace = <<"my-name...')
                        Token('%% erlang\nNamespace = <<"my-name...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To retrieve a value in non-volat...')   programmers-guide.md:421   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To retrieve a value in non-volat...')
                      MixedStyledText('To retrieve a value in non-volat...')
                        SingleStyledText('To retrieve a value in non-volat...')
                        MixedStyledText('esp:get_binary/2', style='monospaced')   programmers-guide.md:421   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:get_binary/2')
                        SingleStyledText(' function, and specify a namespa...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.5.  ESP32-specific APIs		21')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.5.  ESP32-specific APIs		21')
          MixedStyledText('3.5.  ESP32-specific APIs		21')
            Field('3.5')
              SingleStyledText('3.5')
            SingleStyledText('.  ')
            Field('ESP32-specific APIs')
              MixedStyledText('ESP32-specific APIs')
                MixedStyledText('ESP32-specific APIs')
                  SingleStyledText('ESP32-specific APIs')
            Tab('	')
            Tab('	')
            Field('21')
              SingleStyledText('21')
---------------------------------- page 22 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#esp32-specific-apis')   programmers-guide.md:387   <section>
              (continued) Section(id='%programmers-guide#non-volatile-storage')   programmers-guide.md:406   <section>
                (continued) Paragraph('To retrieve a value in non-volat...')   programmers-guide.md:421   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                CodeBlock('%% erlang\nValue = esp:get_binary...')   programmers-guide.md:423   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nValue = esp:get_binary...')
                      MixedStyledText('%% erlang\nValue = esp:get_binary...')
                        Token('%% erlang\nValue = esp:get_binary...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To delete an entry, use the esp:...')   programmers-guide.md:426   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To delete an entry, use the esp:...')
                      MixedStyledText('To delete an entry, use the esp:...')
                        SingleStyledText('To delete an entry, use the ')
                        MixedStyledText('esp:erase_key/2', style='monospaced')   programmers-guide.md:426   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:erase_key/2')
                        SingleStyledText(' function, and specify a namespa...')
                CodeBlock('%% erlang\nok = esp:erase_key(Nam...')   programmers-guide.md:428   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nok = esp:erase_key(Nam...')
                      MixedStyledText('%% erlang\nok = esp:erase_key(Nam...')
                        Token('%% erlang\nok = esp:erase_key(Nam...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You can delete all entries in a ...')   programmers-guide.md:431   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can delete all entries in a ...')
                      MixedStyledText('You can delete all entries in a ...')
                        SingleStyledText('You can delete all entries in a ...')
                        MixedStyledText('esp:erase_all/1', style='monospaced')   programmers-guide.md:431   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:erase_all/1')
                        SingleStyledText(' function:')
                CodeBlock('%% erlang\nok = esp:erase_all(Nam...')   programmers-guide.md:433   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nok = esp:erase_all(Nam...')
                      MixedStyledText('%% erlang\nok = esp:erase_all(Nam...')
                        Token('%% erlang\nok = esp:erase_all(Nam...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Finally, you can delete all entr...')   programmers-guide.md:436   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Finally, you can delete all entr...')
                      MixedStyledText('Finally, you can delete all entr...')
                        SingleStyledText('Finally, you can delete all entr...')
                        MixedStyledText('esp:reformat/0', style='monospaced')   programmers-guide.md:436   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:reformat/0')
                        SingleStyledText(' function:')
                CodeBlock('%% erlang\nok = esp:reformat().\n')   programmers-guide.md:438   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nok = esp:reformat().\n')
                      MixedStyledText('%% erlang\nok = esp:reformat().\n')
                        Token('%% erlang\nok = esp:reformat().\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Applications should use the esp:...')   programmers-guide.md:441   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Applications should use the esp:...')
                      MixedStyledText('Applications should use the esp:...')
                        SingleStyledText('Applications should use the ')
                        MixedStyledText('esp:reformat/0', style='monospaced')   programmers-guide.md:441   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:reformat/0')
                        SingleStyledText(' function with caution, in case ...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:443   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  NVS entries are currently...')   programmers-guide.md:443   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  NVS entries are currently...')
                        MixedStyledText('Note.  NVS entries are currently...')
                          SingleStyledText('Note.  NVS entries are currently...')
              Section(id='%programmers-guide#restart-and-deep-sleep')   programmers-guide.md:445   <section>
                Heading('3.5.3 Restart and Deep Sleep')   programmers-guide.md:445   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.5.3 ')
                      SingleStyledText('3.5.3')
                      SingleStyledText(' ')
                    MixedStyledText('Restart and Deep Sleep')
                      MixedStyledText('Restart and Deep Sleep')
                        SingleStyledText('Restart and Deep Sleep')
                Paragraph('You can use the esp:restart/0 fu...')   programmers-guide.md:447   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can use the esp:restart/0 fu...')
                      MixedStyledText('You can use the esp:restart/0 fu...')
                        SingleStyledText('You can use the ')
                        MixedStyledText('esp:restart/0', style='monospaced')   programmers-guide.md:447   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:restart/0')
                        SingleStyledText(' function to immediately restart...')
                CodeBlock('%% erlang\nesp:restart().\n')   programmers-guide.md:449   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nesp:restart().\n')
                      MixedStyledText('%% erlang\nesp:restart().\n')
                        Token('%% erlang\nesp:restart().\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Use the esp:reset_reason/0 funct...')   programmers-guide.md:452   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use the esp:reset_reason/0 funct...')
                      MixedStyledText('Use the esp:reset_reason/0 funct...')
                        SingleStyledText('Use the ')
                        MixedStyledText('esp:reset_reason/0', style='monospaced')   programmers-guide.md:452   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:reset_reason/0')
                        SingleStyledText(' function to obtain the reason f...')
                List(style='bulleted')   programmers-guide.md:454   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:454   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_unknown')   programmers-guide.md:454   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_unknown')
                            MixedStyledText('esp_rst_unknown')
                              MixedStyledText('esp_rst_unknown', style='monospaced')   programmers-guide.md:454   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_unknown')
                  ListItem()   programmers-guide.md:455   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_poweron')   programmers-guide.md:455   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_poweron')
                            MixedStyledText('esp_rst_poweron')
                              MixedStyledText('esp_rst_poweron', style='monospaced')   programmers-guide.md:455   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_poweron')
                  ListItem()   programmers-guide.md:456   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_ext')   programmers-guide.md:456   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_ext')
                            MixedStyledText('esp_rst_ext')
                              MixedStyledText('esp_rst_ext', style='monospaced')   programmers-guide.md:456   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_ext')
                  ListItem()   programmers-guide.md:457   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_sw')   programmers-guide.md:457   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_sw')
                            MixedStyledText('esp_rst_sw')
                              MixedStyledText('esp_rst_sw', style='monospaced')   programmers-guide.md:457   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_sw')
                  ListItem()   programmers-guide.md:458   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_panic')   programmers-guide.md:458   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_panic')
                            MixedStyledText('esp_rst_panic')
                              MixedStyledText('esp_rst_panic', style='monospaced')   programmers-guide.md:458   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_panic')
                  ListItem()   programmers-guide.md:459   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_int_wdt')   programmers-guide.md:459   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_int_wdt')
                            MixedStyledText('esp_rst_int_wdt')
                              MixedStyledText('esp_rst_int_wdt', style='monospaced')   programmers-guide.md:459   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_int_wdt')
                  ListItem()   programmers-guide.md:460   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_task_wdt')   programmers-guide.md:460   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_task_wdt')
                            MixedStyledText('esp_rst_task_wdt')
                              MixedStyledText('esp_rst_task_wdt', style='monospaced')   programmers-guide.md:460   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_task_wdt')
                  ListItem()   programmers-guide.md:461   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_wdt')   programmers-guide.md:461   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_wdt')
                            MixedStyledText('esp_rst_wdt')
                              MixedStyledText('esp_rst_wdt', style='monospaced')   programmers-guide.md:461   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_wdt')
                  ListItem()   programmers-guide.md:462   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_deepsleep')   programmers-guide.md:462   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_deepsleep')
                            MixedStyledText('esp_rst_deepsleep')
                              MixedStyledText('esp_rst_deepsleep', style='monospaced')   programmers-guide.md:462   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_deepsleep')
                  ListItem()   programmers-guide.md:463   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_brownout')   programmers-guide.md:463   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_brownout')
                            MixedStyledText('esp_rst_brownout')
                              MixedStyledText('esp_rst_brownout', style='monospaced')   programmers-guide.md:463   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_brownout')
                  ListItem()   programmers-guide.md:464   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp_rst_sdio')   programmers-guide.md:464   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp_rst_sdio')
                            MixedStyledText('esp_rst_sdio')
                              MixedStyledText('esp_rst_sdio', style='monospaced')   programmers-guide.md:464   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp_rst_sdio')
                Paragraph('Use the esp:deep_sleep/1 functio...')   programmers-guide.md:466   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Use the esp:deep_sleep/1 functio...')
                      MixedStyledText('Use the esp:deep_sleep/1 functio...')
                        SingleStyledText('Use the ')
                        MixedStyledText('esp:deep_sleep/1', style='monospaced')   programmers-guide.md:466   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp:deep_sleep/1')
                        SingleStyledText(' function to put the ESP device ...')
                CodeBlock('%% erlang\nesp:deep_sleep(60*1000...')   programmers-guide.md:468   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nesp:deep_sleep(60*1000...')
                      MixedStyledText('%% erlang\nesp:deep_sleep(60*1000...')
                        Token('%% erlang\nesp:deep_sleep(60*1000...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('22		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('22		Chapter 3.  Programmers Guid...')
          MixedStyledText('22		Chapter 3.  Programmers Guid...')
            Field('22')
              SingleStyledText('22')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 23 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#esp32-specific-apis')   programmers-guide.md:387   <section>
              (continued) Section(id='%programmers-guide#restart-and-deep-sleep')   programmers-guide.md:445   <section>
                Paragraph('Use the esp:sleep_get_wakeup_cau...')   programmers-guide.md:471   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                CodeBlock('%% erlang\ncase esp:sleep_get_wak...')   programmers-guide.md:473   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\ncase esp:sleep_get_wak...')
                      MixedStyledText('%% erlang\ncase esp:sleep_get_wak...')
                        Token('%% erlang\ncase esp:sleep_get_wak...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%programmers-guide#id1')   programmers-guide.md:481   <section>
                Heading('3.5.4 Miscellaneous')   programmers-guide.md:481   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.5.4 ')
                      SingleStyledText('3.5.4')
                      SingleStyledText(' ')
                    MixedStyledText('Miscellaneous')
                      MixedStyledText('Miscellaneous')
                        SingleStyledText('Miscellaneous')
                Paragraph('The freq_hz function can be used...')   programmers-guide.md:483   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The freq_hz function can be used...')
                      MixedStyledText('The freq_hz function can be used...')
                        SingleStyledText('The ')
                        MixedStyledText('freq_hz', style='monospaced')   programmers-guide.md:483   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('freq_hz')
                        SingleStyledText(' function can be used to retriev...')
                List(style='bulleted')   programmers-guide.md:485   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:485   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('esp:freq_hz/0')   programmers-guide.md:485   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('esp:freq_hz/0')
                            MixedStyledText('esp:freq_hz/0')
                              MixedStyledText('esp:freq_hz/0', style='monospaced')   programmers-guide.md:485   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('esp:freq_hz/0')
            Section(id='%programmers-guide#peripherals')   programmers-guide.md:487   <section>
              Heading('3.6 Peripherals')   programmers-guide.md:487   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.6 ')
                    SingleStyledText('3.6')
                    SingleStyledText(' ')
                  MixedStyledText('Peripherals')
                    MixedStyledText('Peripherals')
                      SingleStyledText('Peripherals')
              Paragraph('The AtomVM virtual machine and l...')   programmers-guide.md:489   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM virtual machine and l...')
                    MixedStyledText('The AtomVM virtual machine and l...')
                      SingleStyledText('The AtomVM virtual machine and l...')
              Section(id='%programmers-guide#gpio')   programmers-guide.md:491   <section>
                Heading('3.6.1 GPIO')   programmers-guide.md:491   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.6.1 ')
                      SingleStyledText('3.6.1')
                      SingleStyledText(' ')
                    MixedStyledText('GPIO')
                      MixedStyledText('GPIO')
                        SingleStyledText('GPIO')
                Paragraph('You can read and write digital v...')   programmers-guide.md:493   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can read and write digital v...')
                      MixedStyledText('You can read and write digital v...')
                        SingleStyledText('You can read and write digital v...')
                        MixedStyledText('gpio', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gpio')
                        SingleStyledText(' module, using the ')
                        MixedStyledText('digital_read/1', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('digital_read/1')
                        SingleStyledText(' and ')
                        MixedStyledText('digital_write/2', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('digital_write/2')
                        SingleStyledText(' functions.  You must first set ...')
                        MixedStyledText('gpio:set_direction/2', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gpio:set_direction/2')
                        SingleStyledText(' function, using ')
                        MixedStyledText('input', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('input')
                        SingleStyledText(' or ')
                        MixedStyledText('output', style='monospaced')   programmers-guide.md:493   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('output')
                        SingleStyledText(' as the direction parameter.')
                Paragraph('To read the value of a GPIO pin ...')   programmers-guide.md:495   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To read the value of a GPIO pin ...')
                      MixedStyledText('To read the value of a GPIO pin ...')
                        SingleStyledText('To read the value of a GPIO pin ...')
                        MixedStyledText('high', style='monospaced')   programmers-guide.md:495   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('high')
                        SingleStyledText(' or ')
                        MixedStyledText('low', style='monospaced')   programmers-guide.md:495   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('low')
                        SingleStyledText('), use ')
                        MixedStyledText('gpio:digital_read/1', style='monospaced')   programmers-guide.md:495   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gpio:digital_read/1')
                        SingleStyledText(':')
                CodeBlock('%% erlang\nPin = 2,\ngpio:set_dire...')   programmers-guide.md:497   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                      MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                        Token('%% erlang\nPin = 2,\ngpio:set_dire...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To set the value of a GPIO pin (...')   programmers-guide.md:507   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To set the value of a GPIO pin (...')
                      MixedStyledText('To set the value of a GPIO pin (...')
                        SingleStyledText('To set the value of a GPIO pin (')
                        MixedStyledText('high', style='monospaced')   programmers-guide.md:507   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('high')
                        SingleStyledText(' or ')
                        MixedStyledText('low', style='monospaced')   programmers-guide.md:507   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('low')
                        SingleStyledText('), use ')
                        MixedStyledText('gpio:digital_write/2', style='monospaced')   programmers-guide.md:507   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gpio:digital_write/2')
                        SingleStyledText(':')
                CodeBlock('%% erlang\nPin = 2,\ngpio:set_dire...')   programmers-guide.md:509   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                      MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                        Token('%% erlang\nPin = 2,\ngpio:set_dire...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Section(id='%programmers-guide#interrupt-handling')   programmers-guide.md:514   <section>
                  Heading('Interrupt Handling')   programmers-guide.md:514   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Interrupt Handling')
                        MixedStyledText('Interrupt Handling')
                          SingleStyledText('Interrupt Handling')
                  Paragraph('You can get notified of changes ...')   programmers-guide.md:516   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You can get notified of changes ...')
                        MixedStyledText('You can get notified of changes ...')
                          SingleStyledText('You can get notified of changes ...')
                          MixedStyledText('gpio:set_int/2', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gpio:set_int/2')
                          SingleStyledText(' function.  This function takes ...')
                          MixedStyledText('rising', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('rising')
                          SingleStyledText(', ')
                          MixedStyledText('falling', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('falling')
                          SingleStyledText(', ')
                          MixedStyledText('both', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('both')
                          SingleStyledText(', ')
                          MixedStyledText('low', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('low')
                          SingleStyledText(', ')
                          MixedStyledText('high', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('high')
                          SingleStyledText(', and ')
                          MixedStyledText('none', style='monospaced')   programmers-guide.md:516   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('none')
                          SingleStyledText(' (to disable an interrupt).')
                  Paragraph('When a trigger event occurs, suc...')   programmers-guide.md:518   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('When a trigger event occurs, suc...')
                        MixedStyledText('When a trigger event occurs, suc...')
                          SingleStyledText('When a trigger event occurs, suc...')
                          MixedStyledText('gpio_interrupt', style='monospaced')   programmers-guide.md:518   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gpio_interrupt')
                          SingleStyledText(' and the pin.')
                  CodeBlock('%% erlang\nPin = 2,\ngpio:set_dire...')   programmers-guide.md:520   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                        MixedStyledText('%% erlang\nPin = 2,\ngpio:set_dire...')
                          Token('%% erlang\nPin = 2,\ngpio:set_dire...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.6.  Peripherals		23')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.6.  Peripherals		23')
          MixedStyledText('3.6.  Peripherals		23')
            Field('3.6')
              SingleStyledText('3.6')
            SingleStyledText('.  ')
            Field('Peripherals')
              MixedStyledText('Peripherals')
                MixedStyledText('Peripherals')
                  SingleStyledText('Peripherals')
            Tab('	')
            Tab('	')
            Field('23')
              SingleStyledText('23')
---------------------------------- page 24 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#peripherals')   programmers-guide.md:487   <section>
              (continued) Section(id='%programmers-guide#gpio')   programmers-guide.md:491   <section>
                (continued) Section(id='%programmers-guide#interrupt-handling')   programmers-guide.md:514   <section>
                  (continued) CodeBlock('%% erlang\nPin = 2,\ngpio:set_dire...')   programmers-guide.md:520   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  Paragraph('Interrupts can be removed by usi...')   programmers-guide.md:530   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Interrupts can be removed by usi...')
                        MixedStyledText('Interrupts can be removed by usi...')
                          SingleStyledText('Interrupts can be removed by usi...')
                          MixedStyledText('gpio:remove_int/2', style='monospaced')   programmers-guide.md:530   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gpio:remove_int/2')
                          SingleStyledText(' function.')
              Section(id='%programmers-guide#i2c')   programmers-guide.md:533   <section>
                Heading('3.6.2 I2C')   programmers-guide.md:533   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.6.2 ')
                      SingleStyledText('3.6.2')
                      SingleStyledText(' ')
                    MixedStyledText('I2C')
                      MixedStyledText('I2C')
                        SingleStyledText('I2C')
                Paragraph('The i2c module encapsulates func...')   programmers-guide.md:535   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The i2c module encapsulates func...')
                      MixedStyledText('The i2c module encapsulates func...')
                        SingleStyledText('The ')
                        MixedStyledText('i2c', style='monospaced')   programmers-guide.md:535   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('i2c')
                        SingleStyledText(' module encapsulates functionali...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:537   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Information about the ESP...')   programmers-guide.md:537   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Information about the ESP...')
                        MixedStyledText('Note.  Information about the ESP...')
                          SingleStyledText('Note.  Information about the ESP...')
                          MixedStyledText('I2C Documentation', style='external link')   programmers-guide.md:537   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('I2C Documentation')
                          SingleStyledText('.')
                Paragraph('The AtomVM I2C implementation us...')   programmers-guide.md:539   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM I2C implementation us...')
                      MixedStyledText('The AtomVM I2C implementation us...')
                        SingleStyledText('The AtomVM I2C implementation us...')
                        MixedStyledText('i2c:open/1', style='monospaced')   programmers-guide.md:539   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('i2c:open/1')
                        SingleStyledText(' function.  The single parameter...')
                Table()   programmers-guide.md:541   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Key')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Key')
                              MixedStyledText('Key')
                                SingleStyledText('Key')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Value Type')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Value Type')
                              MixedStyledText('Value Type')
                                SingleStyledText('Value Type')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Required')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Required')
                              MixedStyledText('Required')
                                SingleStyledText('Required')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('scl_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('scl_io_num')
                              MixedStyledText('scl_io_num')
                                MixedStyledText('scl_io_num', style='monospaced')   programmers-guide.md:543   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('scl_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:543   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('I2C clock pin (SCL)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('I2C clock pin (SCL)')
                              MixedStyledText('I2C clock pin (SCL)')
                                SingleStyledText('I2C clock pin (SCL)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('sda_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('sda_io_num')
                              MixedStyledText('sda_io_num')
                                MixedStyledText('sda_io_num', style='monospaced')   programmers-guide.md:544   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('sda_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:544   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('I2C data pin (SDA)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('I2C data pin (SDA)')
                              MixedStyledText('I2C data pin (SDA)')
                                SingleStyledText('I2C data pin (SDA)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('i2c_clock_hz')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('i2c_clock_hz')
                              MixedStyledText('i2c_clock_hz')
                                MixedStyledText('i2c_clock_hz', style='monospaced')   programmers-guide.md:545   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('i2c_clock_hz')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:545   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('I2C clock frequency (in hertz)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('I2C clock frequency (in hertz)')
                              MixedStyledText('I2C clock frequency (in hertz)')
                                SingleStyledText('I2C clock frequency (in hertz)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                Paragraph('For example,')   programmers-guide.md:547   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example,')
                      MixedStyledText('For example,')
                        SingleStyledText('For example,')
                CodeBlock('%% erlang\nI2C = i2c:open([\n    {...')   programmers-guide.md:549   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nI2C = i2c:open([\n    {...')
                      MixedStyledText('%% erlang\nI2C = i2c:open([\n    {...')
                        Token('%% erlang\nI2C = i2c:open([\n    {...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Once the port is opened, you can...')   programmers-guide.md:554   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Once the port is opened, you can...')
                      MixedStyledText('Once the port is opened, you can...')
                        SingleStyledText('Once the port is opened, you can...')
                        MixedStyledText('I2C', style='monospaced')   programmers-guide.md:554   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('I2C')
                        SingleStyledText(' instance to read and write byte...')
                Paragraph('Both read and write operations r...')   programmers-guide.md:556   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Both read and write operations r...')
                      MixedStyledText('Both read and write operations r...')
                        SingleStyledText('Both read and write operations r...')
                Paragraph('In addition, you may optionally ...')   programmers-guide.md:558   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In addition, you may optionally ...')
                      MixedStyledText('In addition, you may optionally ...')
                        SingleStyledText('In addition, you may optionally ...')
                Paragraph('There are two patterns for writi...')   programmers-guide.md:560   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('There are two patterns for writi...')
                      MixedStyledText('There are two patterns for writi...')
                        SingleStyledText('There are two patterns for writi...')
                List(style='enumerated')   programmers-guide.md:562   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   programmers-guide.md:562   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Queuing i2c:qwrite_bytes/2,3 wri...')   programmers-guide.md:562   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Queuing i2c:qwrite_bytes/2,3 wri...')
                            MixedStyledText('Queuing i2c:qwrite_bytes/2,3 wri...')
                              SingleStyledText('Queuing ')
                              MixedStyledText('i2c:qwrite_bytes/2,3', style='monospaced')   programmers-guide.md:562   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('i2c:qwrite_bytes/2,3')
                              SingleStyledText(' write operations between calls ...')
                              MixedStyledText('i2c:begin_transmission/1', style='monospaced')   programmers-guide.md:562   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('i2c:begin_transmission/1')
                              SingleStyledText(' and ')
                              MixedStyledText('i2c:end_transmission/1', style='monospaced')   programmers-guide.md:562   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('i2c:end_transmission/1')
                              SingleStyledText('.  In this case, write operation...')
                              MixedStyledText('i2c:end_transmission/1', style='monospaced')   programmers-guide.md:562   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('i2c:end_transmission/1')
                              SingleStyledText(' operation is called;')
                  ListItem()   programmers-guide.md:563   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Writing a byte or sequence of by...')   programmers-guide.md:563   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Writing a byte or sequence of by...')
                            MixedStyledText('Writing a byte or sequence of by...')
                              SingleStyledText('Writing a byte or sequence of by...')
                              MixedStyledText('i2c:write_bytes/2,3', style='monospaced')   programmers-guide.md:563   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('i2c:write_bytes/2,3')
                              SingleStyledText(' operation.')
                Paragraph('The choice of which pattern to u...')   programmers-guide.md:565   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The choice of which pattern to u...')
                      MixedStyledText('The choice of which pattern to u...')
                        SingleStyledText('The choice of which pattern to u...')
                CodeBlock('%% erlang\nok = i2c:begin_transmi...')   programmers-guide.md:567   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nok = i2c:begin_transmi...')
                      MixedStyledText('%% erlang\nok = i2c:begin_transmi...')
                        Token('%% erlang\nok = i2c:begin_transmi...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('24		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('24		Chapter 3.  Programmers Guid...')
          MixedStyledText('24		Chapter 3.  Programmers Guid...')
            Field('24')
              SingleStyledText('24')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 25 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#peripherals')   programmers-guide.md:487   <section>
              (continued) Section(id='%programmers-guide#i2c')   programmers-guide.md:533   <section>
                Paragraph('In other cases, you may just nee...')   programmers-guide.md:573   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                CodeBlock('%% erlang\nok = i2c:write_bytes(I...')   programmers-guide.md:575   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nok = i2c:write_bytes(I...')
                      MixedStyledText('%% erlang\nok = i2c:write_bytes(I...')
                        Token('%% erlang\nok = i2c:write_bytes(I...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Reading bytes is more straightfo...')   programmers-guide.md:578   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Reading bytes is more straightfo...')
                      MixedStyledText('Reading bytes is more straightfo...')
                        SingleStyledText('Reading bytes is more straightfo...')
                        MixedStyledText('i2c:read_bytes/3,4', style='monospaced')   programmers-guide.md:578   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('i2c:read_bytes/3,4')
                        SingleStyledText(', specifying the port instance, ...')
                CodeBlock('%% erlang\nBinaryData = i2c:read_...')   programmers-guide.md:580   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nBinaryData = i2c:read_...')
                      MixedStyledText('%% erlang\nBinaryData = i2c:read_...')
                        Token('%% erlang\nBinaryData = i2c:read_...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%programmers-guide#spi')   programmers-guide.md:584   <section>
                Heading('3.6.3 SPI')   programmers-guide.md:584   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.6.3 ')
                      SingleStyledText('3.6.3')
                      SingleStyledText(' ')
                    MixedStyledText('SPI')
                      MixedStyledText('SPI')
                        SingleStyledText('SPI')
                Paragraph('The spi module encapsulates func...')   programmers-guide.md:586   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The spi module encapsulates func...')
                      MixedStyledText('The spi module encapsulates func...')
                        SingleStyledText('The ')
                        MixedStyledText('spi', style='monospaced')   programmers-guide.md:586   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('spi')
                        SingleStyledText(' module encapsulates functionali...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:588   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Information about the ESP...')   programmers-guide.md:588   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Information about the ESP...')
                        MixedStyledText('Note.  Information about the ESP...')
                          SingleStyledText('Note.  Information about the ESP...')
                          MixedStyledText('SPI Documentation', style='external link')   programmers-guide.md:588   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('SPI Documentation')
                          SingleStyledText('.')
                Paragraph('The AtomVM SPI implementation us...')   programmers-guide.md:590   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM SPI implementation us...')
                      MixedStyledText('The AtomVM SPI implementation us...')
                        SingleStyledText('The AtomVM SPI implementation us...')
                        MixedStyledText('spi:open/1', style='monospaced')   programmers-guide.md:590   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('spi:open/1')
                        SingleStyledText(' function.  The single parameter...')
                List(style='bulleted')   programmers-guide.md:592   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:592   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('bus_config – a properties list c...')   programmers-guide.md:592   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('bus_config – a properties list c...')
                            MixedStyledText('bus_config – a properties list c...')
                              MixedStyledText('bus_config', style='monospaced')   programmers-guide.md:592   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('bus_config')
                              SingleStyledText(' – a properties list containing ...')
                  ListItem()   programmers-guide.md:593   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('device_config – a properties lis...')   programmers-guide.md:593   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('device_config – a properties lis...')
                            MixedStyledText('device_config – a properties lis...')
                              MixedStyledText('device_config', style='monospaced')   programmers-guide.md:593   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('device_config')
                              SingleStyledText(' – a properties list containing ...')
                Paragraph('The bus_config properties list c...')   programmers-guide.md:595   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The bus_config properties list c...')
                      MixedStyledText('The bus_config properties list c...')
                        SingleStyledText('The ')
                        MixedStyledText('bus_config', style='monospaced')   programmers-guide.md:595   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('bus_config')
                        SingleStyledText(' properties list contains the fo...')
                Table()   programmers-guide.md:597   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Key')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Key')
                              MixedStyledText('Key')
                                SingleStyledText('Key')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Value Type')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Value Type')
                              MixedStyledText('Value Type')
                                SingleStyledText('Value Type')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Required')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Required')
                              MixedStyledText('Required')
                                SingleStyledText('Required')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('miso_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('miso_io_num')
                              MixedStyledText('miso_io_num')
                                MixedStyledText('miso_io_num', style='monospaced')   programmers-guide.md:599   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('miso_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:599   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI leader-in, follower-out pin ...')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI leader-in, follower-out pin ...')
                              MixedStyledText('SPI leader-in, follower-out pin ...')
                                SingleStyledText('SPI leader-in, follower-out pin ...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('mosi_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('mosi_io_num')
                              MixedStyledText('mosi_io_num')
                                MixedStyledText('mosi_io_num', style='monospaced')   programmers-guide.md:600   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('mosi_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:600   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI leader-out, follower-in pin ...')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI leader-out, follower-in pin ...')
                              MixedStyledText('SPI leader-out, follower-in pin ...')
                                SingleStyledText('SPI leader-out, follower-in pin ...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('sclk_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('sclk_io_num')
                              MixedStyledText('sclk_io_num')
                                MixedStyledText('sclk_io_num', style='monospaced')   programmers-guide.md:601   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('sclk_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:601   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI clock pin (SCLK)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI clock pin (SCLK)')
                              MixedStyledText('SPI clock pin (SCLK)')
                                SingleStyledText('SPI clock pin (SCLK)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                Paragraph('The device_config – a properties...')   programmers-guide.md:603   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The device_config – a properties...')
                      MixedStyledText('The device_config – a properties...')
                        SingleStyledText('The ')
                        MixedStyledText('device_config', style='monospaced')   programmers-guide.md:603   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('device_config')
                        SingleStyledText(' – a properties list containing ...')
                        SingleStyledText(' ')
                        SingleStyledText('properties list contains the fol...')
                Table()   programmers-guide.md:606   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Key')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Key')
                              MixedStyledText('Key')
                                SingleStyledText('Key')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Value Type')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Value Type')
                              MixedStyledText('Value Type')
                                SingleStyledText('Value Type')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Required')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Required')
                              MixedStyledText('Required')
                                SingleStyledText('Required')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('spi_clock_hz')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('spi_clock_hz')
                              MixedStyledText('spi_clock_hz')
                                MixedStyledText('spi_clock_hz', style='monospaced')   programmers-guide.md:608   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('spi_clock_hz')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:608   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI clock frequency (in hertz)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI clock frequency (in hertz)')
                              MixedStyledText('SPI clock frequency (in hertz)')
                                SingleStyledText('SPI clock frequency (in hertz)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('spi_mode')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('spi_mode')
                              MixedStyledText('spi_mode')
                                MixedStyledText('spi_mode', style='monospaced')   programmers-guide.md:609   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('spi_mode')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:609   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI mode')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI mode')
                              MixedStyledText('SPI mode')
                                SingleStyledText('SPI mode')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('spi_cs_io_num')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('spi_cs_io_num')
                              MixedStyledText('spi_cs_io_num')
                                MixedStyledText('spi_cs_io_num', style='monospaced')   programmers-guide.md:610   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('spi_cs_io_num')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:610   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('SPI chip select pin (CS)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('SPI chip select pin (CS)')
                              MixedStyledText('SPI chip select pin (CS)')
                                SingleStyledText('SPI chip select pin (CS)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('address_len_bits')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('address_len_bits')
                              MixedStyledText('address_len_bits')
                                MixedStyledText('address_len_bits', style='monospaced')   programmers-guide.md:611   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('address_len_bits')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:611   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('yes')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('yes')
                              MixedStyledText('yes')
                                SingleStyledText('yes')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('number of bits in a read/write o...')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('number of bits in a read/write o...')
                              MixedStyledText('number of bits in a read/write o...')
                                SingleStyledText('number of bits in a read/write o...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                Paragraph('For example,')   programmers-guide.md:613   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example,')
                      MixedStyledText('For example,')
                        SingleStyledText('For example,')
                CodeBlock('%% erlang\nSPIConfig = [\n    {bus...')   programmers-guide.md:615   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nSPIConfig = [\n    {bus...')
                      MixedStyledText('%% erlang\nSPIConfig = [\n    {bus...')
                        Token('%% erlang\nSPIConfig = [\n    {bus...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.6.  Peripherals		25')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.6.  Peripherals		25')
          MixedStyledText('3.6.  Peripherals		25')
            Field('3.6')
              SingleStyledText('3.6')
            SingleStyledText('.  ')
            Field('Peripherals')
              MixedStyledText('Peripherals')
                MixedStyledText('Peripherals')
                  SingleStyledText('Peripherals')
            Tab('	')
            Tab('	')
            Field('25')
              SingleStyledText('25')
---------------------------------- page 26 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#peripherals')   programmers-guide.md:487   <section>
              (continued) Section(id='%programmers-guide#spi')   programmers-guide.md:584   <section>
                (continued) CodeBlock('%% erlang\nSPIConfig = [\n    {bus...')   programmers-guide.md:615   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('Once the port is opened, you can...')   programmers-guide.md:632   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Once the port is opened, you can...')
                      MixedStyledText('Once the port is opened, you can...')
                        SingleStyledText('Once the port is opened, you can...')
                        MixedStyledText('SPI', style='monospaced')   programmers-guide.md:632   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('SPI')
                        SingleStyledText(' instance to read and write byte...')
                Paragraph('To read a byte at a given addres...')   programmers-guide.md:634   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To read a byte at a given addres...')
                      MixedStyledText('To read a byte at a given addres...')
                        SingleStyledText('To read a byte at a given addres...')
                        MixedStyledText('spi:read_at/3', style='monospaced')   programmers-guide.md:634   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('spi:read_at/3')
                        SingleStyledText(' function:')
                CodeBlock('%% erlang\n{ok, Byte} = spi:read_...')   programmers-guide.md:636   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\n{ok, Byte} = spi:read_...')
                      MixedStyledText('%% erlang\n{ok, Byte} = spi:read_...')
                        Token('%% erlang\n{ok, Byte} = spi:read_...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To write a byte at a given addre...')   programmers-guide.md:639   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To write a byte at a given addre...')
                      MixedStyledText('To write a byte at a given addre...')
                        SingleStyledText('To write a byte at a given addre...')
                        MixedStyledText('spi_write_at/4', style='monospaced')   programmers-guide.md:639   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('spi_write_at/4')
                        SingleStyledText(' function:')
                CodeBlock('%% erlang\nwrite_at(SPI, Address,...')   programmers-guide.md:641   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nwrite_at(SPI, Address,...')
                      MixedStyledText('%% erlang\nwrite_at(SPI, Address,...')
                        Token('%% erlang\nwrite_at(SPI, Address,...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:644   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  The spi:write_at/4 takes ...')   programmers-guide.md:644   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  The spi:write_at/4 takes ...')
                        MixedStyledText('Note.  The spi:write_at/4 takes ...')
                          SingleStyledText('Note.  The ')
                          MixedStyledText('spi:write_at/4', style='monospaced')   programmers-guide.md:644   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('spi:write_at/4')
                          SingleStyledText(' takes integer values as inputs ...')
                          MixedStyledText('spi:read_at/3', style='monospaced')   programmers-guide.md:644   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('spi:read_at/3')
                          SingleStyledText(' returns integer values. You may...')
                Paragraph('Consult your local device data s...')   programmers-guide.md:646   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Consult your local device data s...')
                      MixedStyledText('Consult your local device data s...')
                        SingleStyledText('Consult your local device data s...')
              Section(id='%programmers-guide#uart')   programmers-guide.md:649   <section>
                Heading('3.6.4 UART')   programmers-guide.md:649   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.6.4 ')
                      SingleStyledText('3.6.4')
                      SingleStyledText(' ')
                    MixedStyledText('UART')
                      MixedStyledText('UART')
                        SingleStyledText('UART')
                Paragraph('The uart module encapsulates fun...')   programmers-guide.md:651   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The uart module encapsulates fun...')
                      MixedStyledText('The uart module encapsulates fun...')
                        SingleStyledText('The ')
                        MixedStyledText('uart', style='monospaced')   programmers-guide.md:651   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('uart')
                        SingleStyledText(' module encapsulates functionali...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:653   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Information about the ESP...')   programmers-guide.md:653   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Information about the ESP...')
                        MixedStyledText('Note.  Information about the ESP...')
                          SingleStyledText('Note.  Information about the ESP...')
                          MixedStyledText('UART Documentation', style='external link')   programmers-guide.md:653   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('UART Documentation')
                          SingleStyledText('.')
                Paragraph('The AtomVM UART implementation u...')   programmers-guide.md:655   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM UART implementation u...')
                      MixedStyledText('The AtomVM UART implementation u...')
                        SingleStyledText('The AtomVM UART implementation u...')
                        MixedStyledText('uart:open/2', style='monospaced')   programmers-guide.md:655   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('uart:open/2')
                        SingleStyledText(' function.')
                Paragraph('The first parameter indicates th...')   programmers-guide.md:657   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The first parameter indicates th...')
                      MixedStyledText('The first parameter indicates th...')
                        SingleStyledText('The first parameter indicates th...')
                CodeBlock('"UART0" | "UART1" | "UART2"\n')   programmers-guide.md:659   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('"UART0" | "UART1" | "UART2"\n')
                      MixedStyledText('"UART0" | "UART1" | "UART2"\n')
                        Token('"UART0" | "UART1" | "UART2"\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The selection of the hardware in...')   programmers-guide.md:661   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The selection of the hardware in...')
                      MixedStyledText('The selection of the hardware in...')
                        SingleStyledText('The selection of the hardware in...')
                Table()   programmers-guide.md:663   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Port')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Port')
                              MixedStyledText('Port')
                                SingleStyledText('Port')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('RX pin')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('RX pin')
                              MixedStyledText('RX pin')
                                SingleStyledText('RX pin')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('TX pin')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('TX pin')
                              MixedStyledText('TX pin')
                                SingleStyledText('TX pin')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART0')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART0')
                              MixedStyledText('UART0')
                                MixedStyledText('UART0', style='monospaced')   programmers-guide.md:665   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('UART0')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_3')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_3')
                              MixedStyledText('GPIO_3')
                                SingleStyledText('GPIO_3')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_1')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_1')
                              MixedStyledText('GPIO_1')
                                SingleStyledText('GPIO_1')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART1')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART1')
                              MixedStyledText('UART1')
                                MixedStyledText('UART1', style='monospaced')   programmers-guide.md:666   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('UART1')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_9')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_9')
                              MixedStyledText('GPIO_9')
                                SingleStyledText('GPIO_9')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_10')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_10')
                              MixedStyledText('GPIO_10')
                                SingleStyledText('GPIO_10')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART2')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART2')
                              MixedStyledText('UART2')
                                MixedStyledText('UART2', style='monospaced')   programmers-guide.md:667   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('UART2')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_16')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_16')
                              MixedStyledText('GPIO_16')
                                SingleStyledText('GPIO_16')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO_17')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO_17')
                              MixedStyledText('GPIO_17')
                                SingleStyledText('GPIO_17')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                Paragraph('The second parameter is a proper...')   programmers-guide.md:669   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The second parameter is a proper...')
                      MixedStyledText('The second parameter is a proper...')
                        SingleStyledText('The second parameter is a proper...')
                Table()   programmers-guide.md:671   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Key')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Key')
                              MixedStyledText('Key')
                                SingleStyledText('Key')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Value Type')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Value Type')
                              MixedStyledText('Value Type')
                                SingleStyledText('Value Type')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Required')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Required')
                              MixedStyledText('Required')
                                SingleStyledText('Required')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Default Value')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Default Value')
                              MixedStyledText('Default Value')
                                SingleStyledText('Default Value')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   programmers-guide.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('speed')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('speed')
                              MixedStyledText('speed')
                                MixedStyledText('speed', style='monospaced')   programmers-guide.md:673   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('speed')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('integer()')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('integer()')
                              MixedStyledText('integer()')
                                MixedStyledText('integer()', style='monospaced')   programmers-guide.md:673   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('integer()')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('no')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('no')
                              MixedStyledText('no')
                                SingleStyledText('no')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('115200')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('115200')
                              MixedStyledText('115200')
                                SingleStyledText('115200')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART baud rate (bits/sec)')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART baud rate (bits/sec)')
                              MixedStyledText('UART baud rate (bits/sec)')
                                SingleStyledText('UART baud rate (bits/sec)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('data_bits')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('data_bits')
                              MixedStyledText('data_bits')
                                MixedStyledText('data_bits', style='monospaced')   programmers-guide.md:674   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('data_bits')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('5 | 6 | 7 | 8')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('5 | 6 | 7 | 8')
                              MixedStyledText('5 | 6 | 7 | 8')
                                MixedStyledText('5 | 6 | 7 | 8', style='monospaced')   programmers-guide.md:674   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('5 | 6 | 7 | 8')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('no')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('no')
                              MixedStyledText('no')
                                SingleStyledText('no')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('8')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('8')
                              MixedStyledText('8')
                                SingleStyledText('8')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART data bits')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART data bits')
                              MixedStyledText('UART data bits')
                                SingleStyledText('UART data bits')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('stop_bits')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('stop_bits')
                              MixedStyledText('stop_bits')
                                MixedStyledText('stop_bits', style='monospaced')   programmers-guide.md:675   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('stop_bits')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('1 | 2')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('1 | 2')
                              MixedStyledText('1 | 2')
                                MixedStyledText('1 | 2', style='monospaced')   programmers-guide.md:675   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('1 | 2')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('no')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('no')
                              MixedStyledText('no')
                                SingleStyledText('no')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('1')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('1')
                              MixedStyledText('1')
                                SingleStyledText('1')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART stop bits')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART stop bits')
                              MixedStyledText('UART stop bits')
                                SingleStyledText('UART stop bits')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('flow_control')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('flow_control')
                              MixedStyledText('flow_control')
                                MixedStyledText('flow_control', style='monospaced')   programmers-guide.md:676   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('flow_control')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('hardware | software | none')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('hardware | software | none')
                              MixedStyledText('hardware | software | none')
                                MixedStyledText('hardware | software | none', style='monospaced')   programmers-guide.md:676   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('hardware | software | none')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('no')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('no')
                              MixedStyledText('no')
                                SingleStyledText('no')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('none')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('none')
                              MixedStyledText('none')
                                MixedStyledText('none', style='monospaced')   programmers-guide.md:676   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('none')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Flow control')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Flow control')
                              MixedStyledText('Flow control')
                                SingleStyledText('Flow control')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('parity')   programmers-guide.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('parity')
                              MixedStyledText('parity')
                                MixedStyledText('parity', style='monospaced')   programmers-guide.md:677   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('parity')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('even | odd | none')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('even | odd | none')
                              MixedStyledText('even | odd | none')
                                MixedStyledText('even | odd | none', style='monospaced')   programmers-guide.md:677   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('even | odd | none')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('no')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('no')
                              MixedStyledText('no')
                                SingleStyledText('no')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('none')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('none')
                              MixedStyledText('none')
                                MixedStyledText('none', style='monospaced')   programmers-guide.md:677   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('none')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   programmers-guide.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('UART parity check')   programmers-guide.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('UART parity check')
                              MixedStyledText('UART parity check')
                                SingleStyledText('UART parity check')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                Paragraph('For example,')   programmers-guide.md:679   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example,')
                      MixedStyledText('For example,')
                        SingleStyledText('For example,')
                CodeBlock('%% erlang\nUART = uart:open("UART...')   programmers-guide.md:681   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nUART = uart:open("UART...')
                      MixedStyledText('%% erlang\nUART = uart:open("UART...')
                        Token('%% erlang\nUART = uart:open("UART...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Once the port is opened, you can...')   programmers-guide.md:684   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Once the port is opened, you can...')
                      MixedStyledText('Once the port is opened, you can...')
                        SingleStyledText('Once the port is opened, you can...')
                        MixedStyledText('UART', style='monospaced')   programmers-guide.md:684   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('UART')
                        SingleStyledText(' instance to read and write byte...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('26		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('26		Chapter 3.  Programmers Guid...')
          MixedStyledText('26		Chapter 3.  Programmers Guid...')
            Field('26')
              SingleStyledText('26')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 27 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#peripherals')   programmers-guide.md:487   <section>
              (continued) Section(id='%programmers-guide#uart')   programmers-guide.md:649   <section>
                (continued) Paragraph('Once the port is opened, you can...')   programmers-guide.md:684   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('To read data from the UART chann...')   programmers-guide.md:686   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To read data from the UART chann...')
                      MixedStyledText('To read data from the UART chann...')
                        SingleStyledText('To read data from the UART chann...')
                        MixedStyledText('uart:read/1', style='monospaced')   programmers-guide.md:686   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('uart:read/1')
                        SingleStyledText(' function.  The return value fro...')
                CodeBlock('%% erlang\nBin = uart:read(UART)\n')   programmers-guide.md:688   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nBin = uart:read(UART)\n')
                      MixedStyledText('%% erlang\nBin = uart:read(UART)\n')
                        Token('%% erlang\nBin = uart:read(UART)\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('To write data to the UART channe...')   programmers-guide.md:691   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To write data to the UART channe...')
                      MixedStyledText('To write data to the UART channe...')
                        SingleStyledText('To write data to the UART channe...')
                        MixedStyledText('uart_write/2', style='monospaced')   programmers-guide.md:691   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('uart_write/2')
                        SingleStyledText(' function.  The input data is an...')
                CodeBlock('%% erlang\nuart:write(UART, [<<"a...')   programmers-guide.md:693   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nuart:write(UART, [<<"a...')
                      MixedStyledText('%% erlang\nuart:write(UART, [<<"a...')
                        Token('%% erlang\nuart:write(UART, [<<"a...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Consult your local device data s...')   programmers-guide.md:696   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Consult your local device data s...')
                      MixedStyledText('Consult your local device data s...')
                        SingleStyledText('Consult your local device data s...')
              Section(id='%programmers-guide#led-control')   programmers-guide.md:698   <section>
                Heading('3.6.5 LED Control')   programmers-guide.md:698   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.6.5 ')
                      SingleStyledText('3.6.5')
                      SingleStyledText(' ')
                    MixedStyledText('LED Control')
                      MixedStyledText('LED Control')
                        SingleStyledText('LED Control')
                Paragraph('The LED Control API can be used ...')   programmers-guide.md:700   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The LED Control API can be used ...')
                      MixedStyledText('The LED Control API can be used ...')
                        SingleStyledText('The LED Control API can be used ...')
                Paragraph('The LEDC API is encapsulated in ...')   programmers-guide.md:702   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The LEDC API is encapsulated in ...')
                      MixedStyledText('The LEDC API is encapsulated in ...')
                        SingleStyledText('The LEDC API is encapsulated in ...')
                        MixedStyledText('ledc', style='monospaced')   programmers-guide.md:702   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('ledc')
                        SingleStyledText(' module and is a direct translat...')
                        SingleStyledText('LEDC API')
                        SingleStyledText(', with a natural mapping into Er...')
                Paragraph('The ledc.hrl module should be us...')   programmers-guide.md:704   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The ledc.hrl module should be us...')
                      MixedStyledText('The ledc.hrl module should be us...')
                        SingleStyledText('The ')
                        MixedStyledText('ledc.hrl', style='monospaced')   programmers-guide.md:704   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('ledc.hrl')
                        SingleStyledText(' module should be used for commo...')
                CodeBlock('%% erlang\n-include("ledc.hrl").\n...')   programmers-guide.md:706   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\n-include("ledc.hrl").\n...')
                      MixedStyledText('%% erlang\n-include("ledc.hrl").\n...')
                        Token('%% erlang\n-include("ledc.hrl").\n...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.6.  Peripherals		27')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.6.  Peripherals		27')
          MixedStyledText('3.6.  Peripherals		27')
            Field('3.6')
              SingleStyledText('3.7')
            SingleStyledText('.  ')
            Field('Peripherals')
              MixedStyledText('Protocols')
                MixedStyledText('Protocols')
                  SingleStyledText('Protocols')
            Tab('	')
            Tab('	')
            Field('27')
              SingleStyledText('27')
---------------------------------- page 28 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              Heading('3.7 Protocols')   programmers-guide.md:738   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.7 ')
                    SingleStyledText('3.7')
                    SingleStyledText(' ')
                  MixedStyledText('Protocols')
                    MixedStyledText('Protocols')
                      SingleStyledText('Protocols')
              Paragraph('AtomVM supports network programm...')   programmers-guide.md:740   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM supports network programm...')
                    MixedStyledText('AtomVM supports network programm...')
                      SingleStyledText('AtomVM supports network programm...')
              Paragraph('This section describes the netwo...')   programmers-guide.md:742   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This section describes the netwo...')
                    MixedStyledText('This section describes the netwo...')
                      SingleStyledText('This section describes the netwo...')
              Section(id='%programmers-guide#network-esp32-only')   programmers-guide.md:744   <section>
                Heading('3.7.1 Network (ESP32 only)')   programmers-guide.md:744   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.7.1 ')
                      SingleStyledText('3.7.1')
                      SingleStyledText(' ')
                    MixedStyledText('Network (ESP32 only)')
                      MixedStyledText('Network (ESP32 only)')
                        SingleStyledText('Network (ESP32 only)')
                Paragraph('The ESP32 supports WiFi connecti...')   programmers-guide.md:746   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The ESP32 supports WiFi connecti...')
                      MixedStyledText('The ESP32 supports WiFi connecti...')
                        SingleStyledText('The ESP32 supports WiFi connecti...')
                List(style='bulleted')   programmers-guide.md:748   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   programmers-guide.md:748   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('STA (Station) mode, whereby it a...')   programmers-guide.md:748   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('STA (Station) mode, whereby it a...')
                            MixedStyledText('STA (Station) mode, whereby it a...')
                              SingleStyledText('STA (Station) mode, whereby it a...')
                  ListItem()   programmers-guide.md:749   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('AP (Access Point) mode, whereby ...')   programmers-guide.md:749   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AP (Access Point) mode, whereby ...')
                            MixedStyledText('AP (Access Point) mode, whereby ...')
                              SingleStyledText('AP (Access Point) mode, whereby ...')
                  ListItem()   programmers-guide.md:750   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('AP+STA mode, whereby the ESP32 b...')   programmers-guide.md:750   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AP+STA mode, whereby the ESP32 b...')
                            MixedStyledText('AP+STA mode, whereby the ESP32 b...')
                              SingleStyledText('AP+STA mode, whereby the ESP32 b...')
                Paragraph('AtomVM supports these modes of o...')   programmers-guide.md:752   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM supports these modes of o...')
                      MixedStyledText('AtomVM supports these modes of o...')
                        SingleStyledText('AtomVM supports these modes of o...')
                        MixedStyledText('network', style='monospaced')   programmers-guide.md:752   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('network')
                        SingleStyledText(' module, which is used to initia...')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:754   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. Establishment and maintena...')   programmers-guide.md:754   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. Establishment and maintena...')
                        MixedStyledText('Note. Establishment and maintena...')
                          SingleStyledText('Note. Establishment and maintena...')
                          MixedStyledText('network', style='monospaced')   programmers-guide.md:754   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('network')
                          SingleStyledText(' module is designed to accommoda...')
                          MixedStyledText('network', style='monospaced')   programmers-guide.md:754   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('network')
                          SingleStyledText(' module and its many use-cases, ...')
                          Reference('AtomVM Network Programming Guide')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('AtomVM Network Programming Guide')
                              MixedStyledText('AtomVM Network Programming Guide')   <inline>
                                SingleStyledText('AtomVM Network Programming Guide')
                          SingleStyledText('.')
                Section(id='%programmers-guide#sta-mode')   programmers-guide.md:756   <section>
                  Heading('STA mode')   programmers-guide.md:756   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('STA mode')
                        MixedStyledText('STA mode')
                          SingleStyledText('STA mode')
                  Paragraph('To connect your ESP32 to an exis...')   programmers-guide.md:758   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('To connect your ESP32 to an exis...')
                        MixedStyledText('To connect your ESP32 to an exis...')
                          SingleStyledText('To connect your ESP32 to an exis...')
                          MixedStyledText('network:wait_for_sta/1,2', style='monospaced')   programmers-guide.md:758   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('network:wait_for_sta/1,2')
                          SingleStyledText(' convenience function, which abs...')
                  Paragraph('This function takes a station mo...')   programmers-guide.md:760   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('This function takes a station mo...')
                        MixedStyledText('This function takes a station mo...')
                          SingleStyledText('This function takes a station mo...')
                  Paragraph('The station mode configuration s...')   programmers-guide.md:762   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The station mode configuration s...')
                        MixedStyledText('The station mode configuration s...')
                          SingleStyledText('The station mode configuration s...')
                  Table()   programmers-guide.md:764   <table>
                       > (0,0,0,0,2) table [Sphinx] > DEFAULT
                    TableHead()
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Key')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Key')
                                MixedStyledText('Key')
                                  SingleStyledText('Key')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Value Type')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Value Type')
                                MixedStyledText('Value Type')
                                  SingleStyledText('Value Type')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Required')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Required')
                                MixedStyledText('Required')
                                  SingleStyledText('Required')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Default Value')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Default Value')
                                MixedStyledText('Default Value')
                                  SingleStyledText('Default Value')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Description')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Description')
                                MixedStyledText('Description')
                                  SingleStyledText('Description')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                    TableBody()
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('ssid')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('ssid')
                                MixedStyledText('ssid')
                                  MixedStyledText('ssid', style='monospaced')   programmers-guide.md:766   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('ssid')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('string() | binary()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('string() | binary()')
                                MixedStyledText('string() | binary()')
                                  MixedStyledText('string() | binary()', style='monospaced')   programmers-guide.md:766   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('string() | binary()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('yes')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('yes')
                                MixedStyledText('yes')
                                  SingleStyledText('yes')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('-')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('-')
                                MixedStyledText('-')
                                  SingleStyledText('-')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('WiFi AP SSID')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('WiFi AP SSID')
                                MixedStyledText('WiFi AP SSID')
                                  SingleStyledText('WiFi AP SSID')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('psk')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('psk')
                                MixedStyledText('psk')
                                  MixedStyledText('psk', style='monospaced')   programmers-guide.md:767   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('psk')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('string() | binary()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('string() | binary()')
                                MixedStyledText('string() | binary()')
                                  MixedStyledText('string() | binary()', style='monospaced')   programmers-guide.md:767   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('string() | binary()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('yes, if network is encrypted')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('yes, if network is encrypted')
                                MixedStyledText('yes, if network is encrypted')
                                  SingleStyledText('yes, if network is encrypted')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('-')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('-')
                                MixedStyledText('-')
                                  SingleStyledText('-')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('WiFi AP password')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('WiFi AP password')
                                MixedStyledText('WiFi AP password')
                                  SingleStyledText('WiFi AP password')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('dhcp_hostname')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('dhcp_hostname')
                                MixedStyledText('dhcp_hostname')
                                  MixedStyledText('dhcp_hostname', style='monospaced')   programmers-guide.md:768   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('dhcp_hostname')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('string() | binary()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('string() | binary()')
                                MixedStyledText('string() | binary()')
                                  MixedStyledText('string() | binary()', style='monospaced')   programmers-guide.md:768   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('string() | binary()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('no')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('no')
                                MixedStyledText('no')
                                  SingleStyledText('no')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('atomvm-<MAC> where <MAC> is the ...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('atomvm-<MAC> where <MAC> is the ...')
                                MixedStyledText('atomvm-<MAC> where <MAC> is the ...')
                                  MixedStyledText('atomvm-<MAC>', style='monospaced')   programmers-guide.md:768   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('atomvm-<MAC>')
                                  SingleStyledText(' where ')
                                  MixedStyledText('<MAC>', style='monospaced')   programmers-guide.md:768   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('<MAC>')
                                  SingleStyledText(' is the factory-assigned MAC-add...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('DHCP hostname for the connecting...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('DHCP hostname for the connecting...')
                                MixedStyledText('DHCP hostname for the connecting...')
                                  SingleStyledText('DHCP hostname for the connecting...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                  StaticGroupedFlowables(style='block quote')   programmers-guide.md:770   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  The WiFi network to which...')   programmers-guide.md:770   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  The WiFi network to which...')
                          MixedStyledText('Note.  The WiFi network to which...')
                            SingleStyledText('Note.  The WiFi network to which...')
                  Paragraph('If the ESP32 device connects to ...')   programmers-guide.md:772   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('If the ESP32 device connects to ...')
                        MixedStyledText('If the ESP32 device connects to ...')
                          SingleStyledText('If the ESP32 device connects to ...')
                          MixedStyledText('{ok, ...}', style='monospaced')   programmers-guide.md:772   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('{ok, ...}')
                          SingleStyledText(' tuple; otherwise, an error is r...')
                  Paragraph('For example:')   programmers-guide.md:774   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For example:')
                        MixedStyledText('For example:')
                          SingleStyledText('For example:')
                  CodeBlock('%% erlang\nConfig = [\n    {ssid, ...')   programmers-guide.md:776   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\nConfig = [\n    {ssid, ...')
                        MixedStyledText('%% erlang\nConfig = [\n    {ssid, ...')
                          Token('%% erlang\nConfig = [\n    {ssid, ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('28		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('28		Chapter 3.  Programmers Guid...')
          MixedStyledText('28		Chapter 3.  Programmers Guid...')
            Field('28')
              SingleStyledText('28')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 29 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              (continued) Section(id='%programmers-guide#network-esp32-only')   programmers-guide.md:744   <section>
                (continued) Section(id='%programmers-guide#sta-mode')   programmers-guide.md:756   <section>
                  (continued) CodeBlock('%% erlang\nConfig = [\n    {ssid, ...')   programmers-guide.md:776   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  Paragraph('Once connected to a WiFi network...')   programmers-guide.md:789   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once connected to a WiFi network...')
                        MixedStyledText('Once connected to a WiFi network...')
                          SingleStyledText('Once connected to a WiFi network...')
                  Paragraph('For information about how to han...')   programmers-guide.md:791   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For information about how to han...')
                        MixedStyledText('For information about how to han...')
                          SingleStyledText('For information about how to han...')
                          Reference('AtomVM Network Programming Guide')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('AtomVM Network Programming Guide')
                              MixedStyledText('AtomVM Network Programming Guide')   <inline>
                                SingleStyledText('AtomVM Network Programming Guide')
                          SingleStyledText('.')
                Section(id='%programmers-guide#ap-mode')   programmers-guide.md:793   <section>
                  Heading('AP mode')   programmers-guide.md:793   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('AP mode')
                        MixedStyledText('AP mode')
                          SingleStyledText('AP mode')
                  Paragraph('To turn your ESP32 into an acces...')   programmers-guide.md:795   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('To turn your ESP32 into an acces...')
                        MixedStyledText('To turn your ESP32 into an acces...')
                          SingleStyledText('To turn your ESP32 into an acces...')
                          MixedStyledText('network:wait_for_ap/1,2', style='monospaced')   programmers-guide.md:795   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('network:wait_for_ap/1,2')
                          SingleStyledText(' convenience function, which abs...')
                          MixedStyledText('192.168.4.1', style='monospaced')   programmers-guide.md:795   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('192.168.4.1')
                          SingleStyledText(' address.  Any devices that conn...')
                          MixedStyledText('192.168.4/24', style='monospaced')   programmers-guide.md:795   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('192.168.4/24')
                          SingleStyledText(' network.')
                  Paragraph('This function takes an access po...')   programmers-guide.md:797   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('This function takes an access po...')
                        MixedStyledText('This function takes an access po...')
                          SingleStyledText('This function takes an access po...')
                  Paragraph('The access point mode configurat...')   programmers-guide.md:799   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The access point mode configurat...')
                        MixedStyledText('The access point mode configurat...')
                          SingleStyledText('The access point mode configurat...')
                  Table()   programmers-guide.md:801   <table>
                       > (0,0,0,0,2) table [Sphinx] > DEFAULT
                    TableHead()
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Key')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Key')
                                MixedStyledText('Key')
                                  SingleStyledText('Key')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Value Type')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Value Type')
                                MixedStyledText('Value Type')
                                  SingleStyledText('Value Type')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Required')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Required')
                                MixedStyledText('Required')
                                  SingleStyledText('Required')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Default Value')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Default Value')
                                MixedStyledText('Default Value')
                                  SingleStyledText('Default Value')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                        TableCell()   programmers-guide.md   <entry>
                             x (0,0,0,0,8) table head cell
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Description')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Description')
                                MixedStyledText('Description')
                                  SingleStyledText('Description')
                          TableCellBackground()
                               x (0,0,0,0,10) table head cell background
                    TableBody()
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('ssid')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('ssid')
                                MixedStyledText('ssid')
                                  MixedStyledText('ssid', style='monospaced')   programmers-guide.md:803   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('ssid')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('string() | binary()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('string() | binary()')
                                MixedStyledText('string() | binary()')
                                  MixedStyledText('string() | binary()', style='monospaced')   programmers-guide.md:803   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('string() | binary()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('no')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('no')
                                MixedStyledText('no')
                                  SingleStyledText('no')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('atomvm-<MAC> where <MAC> is the ...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('atomvm-<MAC> where <MAC> is the ...')
                                MixedStyledText('atomvm-<MAC> where <MAC> is the ...')
                                  MixedStyledText('atomvm-<MAC>', style='monospaced')   programmers-guide.md:803   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('atomvm-<MAC>')
                                  SingleStyledText(' where ')
                                  MixedStyledText('<MAC>', style='monospaced')   programmers-guide.md:803   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('<MAC>')
                                  SingleStyledText(' is the factory-assigned MAC-add...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('WiFi AP SSID')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('WiFi AP SSID')
                                MixedStyledText('WiFi AP SSID')
                                  SingleStyledText('WiFi AP SSID')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('ssid_hidden')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('ssid_hidden')
                                MixedStyledText('ssid_hidden')
                                  MixedStyledText('ssid_hidden', style='monospaced')   programmers-guide.md:804   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('ssid_hidden')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('boolean()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('boolean()')
                                MixedStyledText('boolean()')
                                  MixedStyledText('boolean()', style='monospaced')   programmers-guide.md:804   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('boolean()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('no')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('no')
                                MixedStyledText('no')
                                  SingleStyledText('no')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('false')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('false')
                                MixedStyledText('false')
                                  MixedStyledText('false', style='monospaced')   programmers-guide.md:804   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('false')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Whether the AP SSID should be hi...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Whether the AP SSID should be hi...')
                                MixedStyledText('Whether the AP SSID should be hi...')
                                  SingleStyledText('Whether the AP SSID should be hi...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('psk')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('psk')
                                MixedStyledText('psk')
                                  MixedStyledText('psk', style='monospaced')   programmers-guide.md:805   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('psk')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('string() | binary()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('string() | binary()')
                                MixedStyledText('string() | binary()')
                                  MixedStyledText('string() | binary()', style='monospaced')   programmers-guide.md:805   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('string() | binary()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('yes, if network is encrypted')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('yes, if network is encrypted')
                                MixedStyledText('yes, if network is encrypted')
                                  SingleStyledText('yes, if network is encrypted')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('-')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('-')
                                MixedStyledText('-')
                                  SingleStyledText('-')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('WiFi AP password.  Warning: If t...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('WiFi AP password.  Warning: If t...')
                                MixedStyledText('WiFi AP password.  Warning: If t...')
                                  SingleStyledText('WiFi AP password.  Warning: If t...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on odd row
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.7.  Protocols		29')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.7.  Protocols		29')
          MixedStyledText('3.7.  Protocols		29')
            Field('3.7')
              SingleStyledText('3.7')
            SingleStyledText('.  ')
            Field('Protocols')
              MixedStyledText('Protocols')
                MixedStyledText('Protocols')
                  SingleStyledText('Protocols')
            Tab('	')
            Tab('	')
            Field('29')
              SingleStyledText('29')
---------------------------------- page 30 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              (continued) Section(id='%programmers-guide#network-esp32-only')   programmers-guide.md:744   <section>
                (continued) Section(id='%programmers-guide#ap-mode')   programmers-guide.md:793   <section>
                  (continued) Table()   programmers-guide.md:801   <table>
                       > (0,0,0,0,2) table [Sphinx] > DEFAULT
                      TableRow()
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('ap_max_connections')   programmers-guide.md   <paragraph>
                               > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                                 (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('ap_max_connections')
                                MixedStyledText('ap_max_connections')
                                  MixedStyledText('ap_max_connections', style='monospaced')   programmers-guide.md:806   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('ap_max_connections')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('non_neg_integer()')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('non_neg_integer()')
                                MixedStyledText('non_neg_integer()')
                                  MixedStyledText('non_neg_integer()', style='monospaced')   programmers-guide.md:806   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('non_neg_integer()')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('no')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('no')
                                MixedStyledText('no')
                                  SingleStyledText('no')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('4')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('4')
                                MixedStyledText('4')
                                  MixedStyledText('4', style='monospaced')   programmers-guide.md:806   <literal>
                                       > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                    SingleStyledText('4')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                        TableCell()   programmers-guide.md   <entry>
                             > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                          Paragraph('Maximum number of devices that c...')   programmers-guide.md   <paragraph>
                               > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                                 (0,0,0,0,2) body [Sphinx] > default
                              MixedStyledText('Maximum number of devices that c...')
                                MixedStyledText('Maximum number of devices that c...')
                                  SingleStyledText('Maximum number of devices that c...')
                          TableCellBackground()
                               x (0,0,0,2,8) table body cell background on even row
                  Paragraph('If the ESP32 device starts the A...')   programmers-guide.md:808   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('If the ESP32 device starts the A...')
                        MixedStyledText('If the ESP32 device starts the A...')
                          SingleStyledText('If the ESP32 device starts the A...')
                          MixedStyledText('ok', style='monospaced')   programmers-guide.md:808   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('ok')
                          SingleStyledText(' atom is returned; otherwise, an...')
                  Paragraph('For example:')   programmers-guide.md:810   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For example:')
                        MixedStyledText('For example:')
                          SingleStyledText('For example:')
                  CodeBlock('%% erlang\nConfig = [\n    {psk,  ...')   programmers-guide.md:812   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\nConfig = [\n    {psk,  ...')
                        MixedStyledText('%% erlang\nConfig = [\n    {psk,  ...')
                          Token('%% erlang\nConfig = [\n    {psk,  ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Once the WiFi network is started...')   programmers-guide.md:823   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once the WiFi network is started...')
                        MixedStyledText('Once the WiFi network is started...')
                          SingleStyledText('Once the WiFi network is started...')
                  Paragraph('For information about how to han...')   programmers-guide.md:825   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For information about how to han...')
                        MixedStyledText('For information about how to han...')
                          SingleStyledText('For information about how to han...')
                          Reference('AtomVM Network Programming Guide')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('AtomVM Network Programming Guide')
                              MixedStyledText('AtomVM Network Programming Guide')   <inline>
                                SingleStyledText('AtomVM Network Programming Guide')
                          SingleStyledText('.')
                Section(id='%programmers-guide#sta-ap-mode')   programmers-guide.md:827   <section>
                  Heading('STA+AP mode')   programmers-guide.md:827   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('STA+AP mode')
                        MixedStyledText('STA+AP mode')
                          SingleStyledText('STA+AP mode')
                  Paragraph('For information about how to run...')   programmers-guide.md:829   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For information about how to run...')
                        MixedStyledText('For information about how to run...')
                          SingleStyledText('For information about how to run...')
                          Reference('AtomVM Network Programming Guide')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('AtomVM Network Programming Guide')
                              MixedStyledText('AtomVM Network Programming Guide')   <inline>
                                SingleStyledText('AtomVM Network Programming Guide')
                          SingleStyledText('.')
              Section(id='%programmers-guide#udp')   programmers-guide.md:831   <section>
                Heading('3.7.2 UDP')   programmers-guide.md:831   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.7.2 ')
                      SingleStyledText('3.7.2')
                      SingleStyledText(' ')
                    MixedStyledText('UDP')
                      MixedStyledText('UDP')
                        SingleStyledText('UDP')
                Paragraph('AtomVM supports network programm...')   programmers-guide.md:833   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM supports network programm...')
                      MixedStyledText('AtomVM supports network programm...')
                        SingleStyledText('AtomVM supports network programm...')
                        MixedStyledText('gen_udp', style='monospaced')   programmers-guide.md:833   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gen_udp')
                        SingleStyledText(' module.  This modules obeys the...')
                        MixedStyledText('gen_udp', style='external link')   programmers-guide.md:833   <reference>
                             > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                          MixedStyledText('gen_udp', style='monospaced')   programmers-guide.md:833   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_udp')
                        SingleStyledText(' interface.')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:835   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Not all of the Erlang/OTP...')   programmers-guide.md:835   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Not all of the Erlang/OTP...')
                        MixedStyledText('Note.  Not all of the Erlang/OTP...')
                          SingleStyledText('Note.  Not all of the Erlang/OTP...')
                          MixedStyledText('gen_udp', style='monospaced')   programmers-guide.md:835   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_udp')
                          SingleStyledText(' functionality is implemented in...')
                Paragraph('To open a UDP port, use the gen_...')   programmers-guide.md:837   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To open a UDP port, use the gen_...')
                      MixedStyledText('To open a UDP port, use the gen_...')
                        SingleStyledText('To open a UDP port, use the ')
                        MixedStyledText('gen_udp:open/1,2', style='monospaced')   programmers-guide.md:837   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gen_udp:open/1,2')
                        SingleStyledText(' function.  Supply a port number...')
                        MixedStyledText('{active, true}', style='monospaced')   programmers-guide.md:837   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{active, true}')
                        SingleStyledText(' property in the optional proper...')
                Paragraph('For example:')   programmers-guide.md:839   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example:')
                      MixedStyledText('For example:')
                        SingleStyledText('For example:')
                CodeBlock('%% erlang\nPort = 44404,\ncase gen...')   programmers-guide.md:841   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nPort = 44404,\ncase gen...')
                      MixedStyledText('%% erlang\nPort = 44404,\ncase gen...')
                        Token('%% erlang\nPort = 44404,\ncase gen...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('If the port is active, you can r...')   programmers-guide.md:851   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('If the port is active, you can r...')
                      MixedStyledText('If the port is active, you can r...')
                        SingleStyledText('If the port is active, you can r...')
                        MixedStyledText('udp', style='monospaced')   programmers-guide.md:851   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp')
                        SingleStyledText(' atom, and containing the socket...')
                CodeBlock('%% erlang\nreceive\n    {udp, _Soc...')   programmers-guide.md:853   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nreceive\n    {udp, _Soc...')
                      MixedStyledText('%% erlang\nreceive\n    {udp, _Soc...')
                        Token('%% erlang\nreceive\n    {udp, _Soc...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('30		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('30		Chapter 3.  Programmers Guid...')
          MixedStyledText('30		Chapter 3.  Programmers Guid...')
            Field('30')
              SingleStyledText('30')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 31 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              (continued) Section(id='%programmers-guide#udp')   programmers-guide.md:831   <section>
                (continued) CodeBlock('%% erlang\nreceive\n    {udp, _Soc...')   programmers-guide.md:853   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('With a reference to a UDP Socket...')   programmers-guide.md:859   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('With a reference to a UDP Socket...')
                      MixedStyledText('With a reference to a UDP Socket...')
                        SingleStyledText('With a reference to a UDP ')
                        MixedStyledText('Socket', style='monospaced')   programmers-guide.md:859   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('Socket')
                        SingleStyledText(', you can send messages to a tar...')
                        MixedStyledText('gen_udp:send/4', style='monospaced')   programmers-guide.md:859   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gen_udp:send/4')
                        SingleStyledText(' function.  Specify the UDP sock...')
                        MixedStyledText('gen_udp:open/1,2', style='monospaced')   programmers-guide.md:859   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gen_udp:open/1,2')
                        SingleStyledText(', the address (as a 4-tuple of o...')
                CodeBlock('Packet = <<":アトムＶＭ">>,\nAddress =...')   programmers-guide.md:861   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('Packet = <<":アトムＶＭ">>,\nAddress =...')
                      MixedStyledText('Packet = <<":アトムＶＭ">>,\nAddress =...')
                        Token('Packet = <<":アトムＶＭ">>,\nAddress =...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:871   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  IPv6 networking is not cu...')   programmers-guide.md:871   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  IPv6 networking is not cu...')
                        MixedStyledText('Note.  IPv6 networking is not cu...')
                          SingleStyledText('Note.  IPv6 networking is not cu...')
              Section(id='%programmers-guide#tcp')   programmers-guide.md:873   <section>
                Heading('3.7.3 TCP')   programmers-guide.md:873   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.7.3 ')
                      SingleStyledText('3.7.3')
                      SingleStyledText(' ')
                    MixedStyledText('TCP')
                      MixedStyledText('TCP')
                        SingleStyledText('TCP')
                Paragraph('AtomVM supports network programm...')   programmers-guide.md:875   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM supports network programm...')
                      MixedStyledText('AtomVM supports network programm...')
                        SingleStyledText('AtomVM supports network programm...')
                        MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:875   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('gen_tcp')
                        SingleStyledText(' module.  This modules obeys the...')
                        MixedStyledText('gen_tcp', style='external link')   programmers-guide.md:875   <reference>
                             > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                          MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:875   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp')
                        SingleStyledText(' interface.')
                StaticGroupedFlowables(style='block quote')   programmers-guide.md:877   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Not all of the Erlang/OTP...')   programmers-guide.md:877   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Not all of the Erlang/OTP...')
                        MixedStyledText('Note.  Not all of the Erlang/OTP...')
                          SingleStyledText('Note.  Not all of the Erlang/OTP...')
                          MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:877   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp')
                          SingleStyledText(' functionality is implemented in...')
                Section(id='%programmers-guide#server-side-tcp')   programmers-guide.md:880   <section>
                  Heading('Server-side TCP')   programmers-guide.md:880   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Server-side TCP')
                        MixedStyledText('Server-side TCP')
                          SingleStyledText('Server-side TCP')
                  Paragraph('Server side TCP requires opening...')   programmers-guide.md:882   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Server side TCP requires opening...')
                        MixedStyledText('Server side TCP requires opening...')
                          SingleStyledText('Server side TCP requires opening...')
                  StaticGroupedFlowables(style='block quote')   programmers-guide.md:884   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Programming TCP on the se...')   programmers-guide.md:884   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Programming TCP on the se...')
                          MixedStyledText('Note.  Programming TCP on the se...')
                            SingleStyledText('Note.  Programming TCP on the se...')
                            MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:884   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('gen_tcp')
                            SingleStyledText(' interface is a subtle art, and ...')
                  Paragraph('Start by opening a listening soc...')   programmers-guide.md:886   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Start by opening a listening soc...')
                        MixedStyledText('Start by opening a listening soc...')
                          SingleStyledText('Start by opening a listening soc...')
                          MixedStyledText('gen_tcp:listen/2', style='monospaced')   programmers-guide.md:886   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp:listen/2')
                          SingleStyledText(' function.  Specify the port num...')
                  CodeBlock('%% erlang\ncase gen_tcp:listen(44...')   programmers-guide.md:888   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\ncase gen_tcp:listen(44...')
                        MixedStyledText('%% erlang\ncase gen_tcp:listen(44...')
                          Token('%% erlang\ncase gen_tcp:listen(44...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('In this particular example, the ...')   programmers-guide.md:898   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In this particular example, the ...')
                        MixedStyledText('In this particular example, the ...')
                          SingleStyledText('In this particular example, the ...')
                          MixedStyledText('gen_tcp:accept/1', style='monospaced')   programmers-guide.md:898   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp:accept/1')
                          SingleStyledText(' function, passing in a referenc...')
                  Paragraph('When a client connects, the func...')   programmers-guide.md:900   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('When a client connects, the func...')
                        MixedStyledText('When a client connects, the func...')
                          SingleStyledText('When a client connects, the func...')
                          MixedStyledText('{ok, Socket}', style='monospaced')   programmers-guide.md:900   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('{ok, Socket}')
                          SingleStyledText(', where ')
                          MixedStyledText('Socket', style='monospaced')   programmers-guide.md:900   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Socket')
                          SingleStyledText(' is a reference to the connectio...')
                  CodeBlock('%% erlang\naccept(ListenSocket) -...')   programmers-guide.md:902   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\naccept(ListenSocket) -...')
                        MixedStyledText('%% erlang\naccept(ListenSocket) -...')
                          Token('%% erlang\naccept(ListenSocket) -...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.7.  Protocols		31')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.7.  Protocols		31')
          MixedStyledText('3.7.  Protocols		31')
            Field('3.7')
              SingleStyledText('3.7')
            SingleStyledText('.  ')
            Field('Protocols')
              MixedStyledText('Protocols')
                MixedStyledText('Protocols')
                  SingleStyledText('Protocols')
            Tab('	')
            Tab('	')
            Field('31')
              SingleStyledText('31')
---------------------------------- page 32 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              (continued) Section(id='%programmers-guide#tcp')   programmers-guide.md:873   <section>
                (continued) Section(id='%programmers-guide#server-side-tcp')   programmers-guide.md:880   <section>
                  (continued) CodeBlock('%% erlang\naccept(ListenSocket) -...')   programmers-guide.md:902   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  StaticGroupedFlowables(style='block quote')   programmers-guide.md:916   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note that immediately after acce...')   programmers-guide.md:916   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note that immediately after acce...')
                          MixedStyledText('Note that immediately after acce...')
                            SingleStyledText('Note that immediately after acce...')
                  Paragraph('The socket returned from gen_tcp...')   programmers-guide.md:918   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The socket returned from gen_tcp...')
                        MixedStyledText('The socket returned from gen_tcp...')
                          SingleStyledText('The socket returned from ')
                          MixedStyledText('gen_tcp:accept/1', style='monospaced')   programmers-guide.md:918   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp:accept/1')
                          SingleStyledText(' can then be used to send and re...')
                  CodeBlock('%% erlang\necho() ->\n    io:forma...')   programmers-guide.md:920   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\necho() ->\n    io:forma...')
                        MixedStyledText('%% erlang\necho() ->\n    io:forma...')
                          Token('%% erlang\necho() ->\n    io:forma...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('In this case, the server program...')   programmers-guide.md:934   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In this case, the server program...')
                        MixedStyledText('In this case, the server program...')
                          SingleStyledText('In this case, the server program...')
                  Paragraph('For more information about the g...')   programmers-guide.md:936   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For more information about the g...')
                        MixedStyledText('For more information about the g...')
                          SingleStyledText('For more information about the ')
                          MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:936   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp')
                          SingleStyledText(' server interface, consult the A...')
                          Reference('API Reference Documentation')   <reference>
                               > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
                            MixedStyledText('API Reference Documentation')
                              MixedStyledText('API Reference Documentation')   <inline>
                                SingleStyledText('API Reference Documentation')
                          SingleStyledText('.')
                Section(id='%programmers-guide#client-side-tcp')   programmers-guide.md:938   <section>
                  Heading('Client-side TCP')   programmers-guide.md:938   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Client-side TCP')
                        MixedStyledText('Client-side TCP')
                          SingleStyledText('Client-side TCP')
                  Paragraph('Client side TCP requires establi...')   programmers-guide.md:940   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Client side TCP requires establi...')
                        MixedStyledText('Client side TCP requires establi...')
                          SingleStyledText('Client side TCP requires establi...')
                  Paragraph('Start by opening a connection to...')   programmers-guide.md:942   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Start by opening a connection to...')
                        MixedStyledText('Start by opening a connection to...')
                          SingleStyledText('Start by opening a connection to...')
                          MixedStyledText('gen_tcp:connect/3', style='monospaced')   programmers-guide.md:942   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp:connect/3')
                          SingleStyledText(' function.  Supply the address a...')
                  Paragraph('For example:')   programmers-guide.md:944   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For example:')
                        MixedStyledText('For example:')
                          SingleStyledText('For example:')
                  CodeBlock('%% erlang\nAddress = {192, 168, 1...')   programmers-guide.md:946   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\nAddress = {192, 168, 1...')
                        MixedStyledText('%% erlang\nAddress = {192, 168, 1...')
                          Token('%% erlang\nAddress = {192, 168, 1...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Once a connection is established...')   programmers-guide.md:958   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once a connection is established...')
                        MixedStyledText('Once a connection is established...')
                          SingleStyledText('Once a connection is established...')
                  CodeBlock('%% erlang\nSendPacket = <<":アトムＶＭ...')   programmers-guide.md:960   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('%% erlang\nSendPacket = <<":アトムＶＭ...')
                        MixedStyledText('%% erlang\nSendPacket = <<":アトムＶＭ...')
                          Token('%% erlang\nSendPacket = <<":アトムＶＭ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('32		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('32		Chapter 3.  Programmers Guid...')
          MixedStyledText('32		Chapter 3.  Programmers Guid...')
            Field('32')
              SingleStyledText('32')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 33 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%programmers-guide')   <start_of_file>
          (continued) Section(id='%programmers-guide#programmers-guide')   programmers-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%programmers-guide#protocols')   programmers-guide.md:738   <section>
              (continued) Section(id='%programmers-guide#tcp')   programmers-guide.md:873   <section>
                (continued) Section(id='%programmers-guide#client-side-tcp')   programmers-guide.md:938   <section>
                  (continued) CodeBlock('%% erlang\nSendPacket = <<":アトムＶＭ...')   programmers-guide.md:960   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  Paragraph('For more information about the g...')   programmers-guide.md:976   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For more information about the g...')
                        MixedStyledText('For more information about the g...')
                          SingleStyledText('For more information about the ')
                          MixedStyledText('gen_tcp', style='monospaced')   programmers-guide.md:976   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('gen_tcp')
                          SingleStyledText(' client interface, consults the ...')
        StaticGroupedFlowables(id='%example-programs')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('3.7.  Protocols		33')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('3.7.  Protocols		33')
          MixedStyledText('3.7.  Protocols		33')
            Field('3.7')
              SingleStyledText('3.7')
            SingleStyledText('.  ')
            Field('Protocols')
              MixedStyledText('Protocols')
                MixedStyledText('Protocols')
                  SingleStyledText('Protocols')
            Tab('	')
            Tab('	')
            Field('33')
              SingleStyledText('33')
---------------------------------- page 34 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('34		Chapter 3.  Programmers Guid...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('34		Chapter 3.  Programmers Guid...')
          MixedStyledText('34		Chapter 3.  Programmers Guid...')
            Field('34')
              SingleStyledText('34')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('Programmers Guide')
              MixedStyledText('Programmers Guide')
                MixedStyledText('Programmers Guide')
                  SingleStyledText('Programmers Guide')
---------------------------------- page 35 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 4', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 4')
        MixedStyledText('Chapter 4')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('4', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('4')
  Paragraph('Example Programs', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Example Programs')
        MixedStyledText('Example Programs')
          MixedStyledText('Example Programs')
            SingleStyledText('Example Programs')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('AtomVM includes a collection of ...')   example-programs.md:8   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('AtomVM includes a collection of ...')
                  MixedStyledText('AtomVM includes a collection of ...')
                    SingleStyledText('AtomVM includes a collection of ...')
            Section(id='%example-programs#erlang-examples')   example-programs.md:10   <section>
              Heading('4.1 Erlang Examples')   example-programs.md:10   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.1 ')
                    SingleStyledText('4.1')
                    SingleStyledText(' ')
                  MixedStyledText('Erlang Examples')
                    MixedStyledText('Erlang Examples')
                      SingleStyledText('Erlang Examples')
              Paragraph('Erlang examples may be run in th...')   example-programs.md:12   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Erlang examples may be run in th...')
                    MixedStyledText('Erlang examples may be run in th...')
                      SingleStyledText('Erlang examples may be run in th...')
              Section(id='%example-programs#hello-world')   example-programs.md:14   <section>
                Heading('4.1.1 hello_world')   example-programs.md:14   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.1.1 ')
                      SingleStyledText('4.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('hello_world')
                      MixedStyledText('hello_world')
                        MixedStyledText('hello_world', style='monospaced')   example-programs.md:14   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('hello_world')
                Paragraph('This example program prints the ...')   example-programs.md:16   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This example program prints the ...')
                      MixedStyledText('This example program prints the ...')
                        SingleStyledText('This example program prints the ...')
                Section(id='%example-programs#command-line')   example-programs.md:18   <section>
                  Heading('Command line')   example-programs.md:18   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Command line')
                        MixedStyledText('Command line')
                          SingleStyledText('Command line')
                  Paragraph('The hello_world.avm file will ge...')   example-programs.md:20   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The hello_world.avm file will ge...')
                        MixedStyledText('The hello_world.avm file will ge...')
                          SingleStyledText('The ')
                          MixedStyledText('hello_world.avm', style='monospaced')   example-programs.md:20   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('hello_world.avm')
                          SingleStyledText(' file will get created as part o...')
                          MixedStyledText('AtomVM', style='monospaced')   example-programs.md:20   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' command:')
                  CodeBlock('shell$ ./src/AtomVM ./examples/e...')   example-programs.md:22   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                        MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                          Token('shell$ ./src/AtomVM ./examples/e...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%example-programs#udp-server')   example-programs.md:26   <section>
                Heading('4.1.2 udp_server')   example-programs.md:26   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.1.2 ')
                      SingleStyledText('4.1.2')
                      SingleStyledText(' ')
                    MixedStyledText('udp_server')
                      MixedStyledText('udp_server')
                        MixedStyledText('udp_server', style='monospaced')   example-programs.md:26   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp_server')
                Paragraph('This example program listens on ...')   example-programs.md:28   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This example program listens on ...')
                      MixedStyledText('This example program listens on ...')
                        SingleStyledText('This example program listens on ...')
                Section(id='%example-programs#id1')   example-programs.md:30   <section>
                  Heading('Command line')   example-programs.md:30   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Command line')
                        MixedStyledText('Command line')
                          SingleStyledText('Command line')
                  Paragraph('The udp_server.avm file will get...')   example-programs.md:32   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The udp_server.avm file will get...')
                        MixedStyledText('The udp_server.avm file will get...')
                          SingleStyledText('The ')
                          MixedStyledText('udp_server.avm', style='monospaced')   example-programs.md:32   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('udp_server.avm')
                          SingleStyledText(' file will get created as part o...')
                          MixedStyledText('AtomVM', style='monospaced')   example-programs.md:32   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' command:')
                  CodeBlock('shell$ ./src/AtomVM ./examples/e...')   example-programs.md:34   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                        MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                          Token('shell$ ./src/AtomVM ./examples/e...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('You can send UDP packets to the ...')   example-programs.md:38   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You can send UDP packets to the ...')
                        MixedStyledText('You can send UDP packets to the ...')
                          SingleStyledText('You can send UDP packets to the ...')
                          MixedStyledText('netcat', style='monospaced')   example-programs.md:38   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('netcat')
                          SingleStyledText(' (or ')
                          MixedStyledText('nc', style='monospaced')   example-programs.md:38   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('nc')
                          SingleStyledText(' on some platforms), in a separa...')
                  CodeBlock('shell$ nc -u localhost 44404\n')   example-programs.md:40   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ nc -u localhost 44404\n')
                        MixedStyledText('shell$ nc -u localhost 44404\n')
                          Token('shell$ nc -u localhost 44404\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('This command will wait for you t...')   example-programs.md:42   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('This command will wait for you t...')
                        MixedStyledText('This command will wait for you t...')
                          SingleStyledText('This command will wait for you t...')
                  CodeBlock('testing 1 2 3\n')   example-programs.md:44   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('testing 1 2 3\n')
                        MixedStyledText('testing 1 2 3\n')
                          Token('testing 1 2 3\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('In the AtomVM termianl window, y...')   example-programs.md:46   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In the AtomVM termianl window, y...')
                        MixedStyledText('In the AtomVM termianl window, y...')
                          SingleStyledText('In the AtomVM termianl window, y...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		35')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		35')
          MixedStyledText('		35')
            Tab('	')
            Tab('	')
            Field('35')
              SingleStyledText('35')
---------------------------------- page 36 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#erlang-examples')   example-programs.md:10   <section>
              (continued) Section(id='%example-programs#udp-server')   example-programs.md:26   <section>
                (continued) Section(id='%example-programs#id1')   example-programs.md:30   <section>
                  CodeBlock('Received UDP packet <<116,101,11...')   example-programs.md:48   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  StaticGroupedFlowables(style='block quote')   example-programs.md:51   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Netcat appends a newline ...')   example-programs.md:51   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Netcat appends a newline ...')
                          MixedStyledText('Note.  Netcat appends a newline ...')
                            SingleStyledText('Note.  Netcat appends a newline ...')
              Section(id='%example-programs#udp-client')   example-programs.md:53   <section>
                Heading('4.1.3 udp_client')   example-programs.md:53   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.1.3 ')
                      SingleStyledText('4.1.3')
                      SingleStyledText(' ')
                    MixedStyledText('udp_client')
                      MixedStyledText('udp_client')
                        MixedStyledText('udp_client', style='monospaced')   example-programs.md:53   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp_client')
                Paragraph('This example program send the pa...')   example-programs.md:55   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This example program send the pa...')
                      MixedStyledText('This example program send the pa...')
                        SingleStyledText('This example program send the pa...')
                        MixedStyledText('.', style='monospaced')   example-programs.md:55   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('.')
                        SingleStyledText(') to the console, every time it ...')
                Paragraph('This command may be used in tand...')   example-programs.md:57   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This command may be used in tand...')
                      MixedStyledText('This command may be used in tand...')
                        SingleStyledText('This command may be used in tand...')
                        MixedStyledText('udp_server', style='monospaced')   example-programs.md:57   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp_server')
                        SingleStyledText(' program to illustrate sending m...')
                Section(id='%example-programs#id2')   example-programs.md:59   <section>
                  Heading('Command line')   example-programs.md:59   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Command line')
                        MixedStyledText('Command line')
                          SingleStyledText('Command line')
                  Paragraph('The udp_client.avm file will get...')   example-programs.md:61   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The udp_client.avm file will get...')
                        MixedStyledText('The udp_client.avm file will get...')
                          SingleStyledText('The ')
                          MixedStyledText('udp_client.avm', style='monospaced')   example-programs.md:61   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('udp_client.avm')
                          SingleStyledText(' file will get created as part o...')
                          MixedStyledText('AtomVM', style='monospaced')   example-programs.md:61   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' command:')
                  CodeBlock('shell$ ./src/AtomVM ./examples/e...')   example-programs.md:63   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                        MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                          Token('shell$ ./src/AtomVM ./examples/e...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('If you are running the udp_serve...')   example-programs.md:70   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('If you are running the udp_serve...')
                        MixedStyledText('If you are running the udp_serve...')
                          SingleStyledText('If you are running the ')
                          MixedStyledText('udp_server', style='monospaced')   example-programs.md:70   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('udp_server')
                          SingleStyledText(' program, you should see message...')
                  CodeBlock('Received UDP packet <<58,-94,-56...')   example-programs.md:72   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('Received UDP packet <<58,-94,-56...')
                        MixedStyledText('Received UDP packet <<58,-94,-56...')
                          Token('Received UDP packet <<58,-94,-56...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   example-programs.md:80   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. AtomVM does not currently ...')   example-programs.md:80   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. AtomVM does not currently ...')
                          MixedStyledText('Note. AtomVM does not currently ...')
                            SingleStyledText('Note. AtomVM does not currently ...')
              Section(id='%example-programs#tcp-server')   example-programs.md:82   <section>
                Heading('4.1.4 tcp_server')   example-programs.md:82   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.1.4 ')
                      SingleStyledText('4.1.4')
                      SingleStyledText(' ')
                    MixedStyledText('tcp_server')
                      MixedStyledText('tcp_server')
                        MixedStyledText('tcp_server', style='monospaced')   example-programs.md:82   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tcp_server')
                Paragraph('This example program listens on ...')   example-programs.md:84   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This example program listens on ...')
                      MixedStyledText('This example program listens on ...')
                        SingleStyledText('This example program listens on ...')
                Section(id='%example-programs#id3')   example-programs.md:86   <section>
                  Heading('Command line')   example-programs.md:86   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Command line')
                        MixedStyledText('Command line')
                          SingleStyledText('Command line')
                  Paragraph('The tcp_server.avm file will get...')   example-programs.md:88   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The tcp_server.avm file will get...')
                        MixedStyledText('The tcp_server.avm file will get...')
                          SingleStyledText('The ')
                          MixedStyledText('tcp_server.avm', style='monospaced')   example-programs.md:88   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_server.avm')
                          SingleStyledText(' file will get created as part o...')
                          MixedStyledText('AtomVM', style='monospaced')   example-programs.md:88   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' command:')
                  CodeBlock('shell$ ./src/AtomVM ./examples/e...')   example-programs.md:90   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                        MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                          Token('shell$ ./src/AtomVM ./examples/e...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('You can send TCP packets to the ...')   example-programs.md:94   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You can send TCP packets to the ...')
                        MixedStyledText('You can send TCP packets to the ...')
                          SingleStyledText('You can send TCP packets to the ...')
                          MixedStyledText('netcat', style='monospaced')   example-programs.md:94   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('netcat')
                          SingleStyledText(' (or ')
                          MixedStyledText('nc', style='monospaced')   example-programs.md:94   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('nc')
                          SingleStyledText(' on some platforms), in a separa...')
                  CodeBlock('shell$ nc localhost 44404\n')   example-programs.md:96   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ nc localhost 44404\n')
                        MixedStyledText('shell$ nc localhost 44404\n')
                          Token('shell$ nc localhost 44404\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('This will open a TCP connection ...')   example-programs.md:98   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('This will open a TCP connection ...')
                        MixedStyledText('This will open a TCP connection ...')
                          SingleStyledText('This will open a TCP connection ...')
                          MixedStyledText('tcp_server', style='monospaced')   example-programs.md:98   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_server')
                          SingleStyledText(', and you should see the followi...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('36		Chapter 4.  Example Programs')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('36		Chapter 4.  Example Programs')
          MixedStyledText('36		Chapter 4.  Example Programs')
            Field('36')
              SingleStyledText('36')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('Example Programs')
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
---------------------------------- page 37 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#erlang-examples')   example-programs.md:10   <section>
              (continued) Section(id='%example-programs#tcp-server')   example-programs.md:82   <section>
                (continued) Section(id='%example-programs#id3')   example-programs.md:86   <section>
                  (continued) Paragraph('This will open a TCP connection ...')   example-programs.md:98   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                  CodeBlock('Accepted connection.  local: "12...')   example-programs.md:100   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('Accepted connection.  local: "12...')
                        MixedStyledText('Accepted connection.  local: "12...')
                          Token('Accepted connection.  local: "12...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('The netcat command will wait for...')   example-programs.md:104   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The netcat command will wait for...')
                        MixedStyledText('The netcat command will wait for...')
                          SingleStyledText('The netcat command will wait for...')
                  CodeBlock('testing 1 2 3\n')   example-programs.md:106   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('testing 1 2 3\n')
                        MixedStyledText('testing 1 2 3\n')
                          Token('testing 1 2 3\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('In the AtomVM terminal window, y...')   example-programs.md:108   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In the AtomVM terminal window, y...')
                        MixedStyledText('In the AtomVM terminal window, y...')
                          SingleStyledText('In the AtomVM terminal window, y...')
                  CodeBlock('Received packet [116,101,115,116...')   example-programs.md:110   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('Received packet [116,101,115,116...')
                        MixedStyledText('Received packet [116,101,115,116...')
                          Token('Received packet [116,101,115,116...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   example-programs.md:113   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Netcat appends a newline ...')   example-programs.md:113   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Netcat appends a newline ...')
                          MixedStyledText('Note.  Netcat appends a newline ...')
                            SingleStyledText('Note.  Netcat appends a newline ...')
                  Paragraph('You may enter as much data as yo...')   example-programs.md:115   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You may enter as much data as yo...')
                        MixedStyledText('You may enter as much data as yo...')
                          SingleStyledText('You may enter as much data as yo...')
                  Paragraph('If you stop the netcat command (...')   example-programs.md:117   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('If you stop the netcat command (...')
                        MixedStyledText('If you stop the netcat command (...')
                          SingleStyledText('If you stop the ')
                          MixedStyledText('netcat', style='monospaced')   example-programs.md:117   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('netcat')
                          SingleStyledText(' command (via ^C), you should')
                  CodeBlock('Connection closed.\n')   example-programs.md:119   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('Connection closed.\n')
                        MixedStyledText('Connection closed.\n')
                          Token('Connection closed.\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('printed to the AtomVM console.')   example-programs.md:121   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('printed to the AtomVM console.')
                        MixedStyledText('printed to the AtomVM console.')
                          SingleStyledText('printed to the AtomVM console.')
                  Paragraph('Note that you can have multiple,...')   example-programs.md:123   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note that you can have multiple,...')
                        MixedStyledText('Note that you can have multiple,...')
                          SingleStyledText('Note that you can have multiple,...')
              Section(id='%example-programs#tcp-client')   example-programs.md:125   <section>
                Heading('4.1.5 tcp_client')   example-programs.md:125   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.1.5 ')
                      SingleStyledText('4.1.5')
                      SingleStyledText(' ')
                    MixedStyledText('tcp_client')
                      MixedStyledText('tcp_client')
                        MixedStyledText('tcp_client', style='monospaced')   example-programs.md:125   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tcp_client')
                Paragraph('This example program send the pa...')   example-programs.md:127   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This example program send the pa...')
                      MixedStyledText('This example program send the pa...')
                        SingleStyledText('This example program send the pa...')
                Paragraph('This command may be used in tand...')   example-programs.md:129   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This command may be used in tand...')
                      MixedStyledText('This command may be used in tand...')
                        SingleStyledText('This command may be used in tand...')
                        MixedStyledText('tcp_server', style='monospaced')   example-programs.md:129   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tcp_server')
                        SingleStyledText(' program to illustrate sending m...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:131   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  You will need to change t...')   example-programs.md:131   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  You will need to change t...')
                        MixedStyledText('Note.  You will need to change t...')
                          SingleStyledText('Note.  You will need to change t...')
                          MixedStyledText('Address', style='monospaced')   example-programs.md:131   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Address')
                          SingleStyledText(' variable in the ')
                          MixedStyledText('tcp_client.erl', style='monospaced')   example-programs.md:131   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_client.erl')
                          SingleStyledText(' program in order to test agains...')
                Section(id='%example-programs#id4')   example-programs.md:133   <section>
                  Heading('Command line')   example-programs.md:133   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Command line')
                        MixedStyledText('Command line')
                          SingleStyledText('Command line')
                  Paragraph('The tcp_client.avm file will get...')   example-programs.md:135   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The tcp_client.avm file will get...')
                        MixedStyledText('The tcp_client.avm file will get...')
                          SingleStyledText('The ')
                          MixedStyledText('tcp_client.avm', style='monospaced')   example-programs.md:135   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_client.avm')
                          SingleStyledText(' file will get created as part o...')
                          MixedStyledText('AtomVM', style='monospaced')   example-programs.md:135   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('AtomVM')
                          SingleStyledText(' command:')
                  CodeBlock('shell$ ./src/AtomVM ./examples/e...')   example-programs.md:137   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                        MixedStyledText('shell$ ./src/AtomVM ./examples/e...')
                          Token('shell$ ./src/AtomVM ./examples/e...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('If you are running the tcp _serv...')   example-programs.md:147   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('If you are running the tcp _serv...')
                        MixedStyledText('If you are running the tcp _serv...')
                          SingleStyledText('If you are running the ')
                          MixedStyledText('tcp _server', style='monospaced')   example-programs.md:147   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp _server')
                          SingleStyledText(' program, you should see message...')
                  CodeBlock('Accepted connection.  local: "12...')   example-programs.md:150   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('Accepted connection.  local: "12...')
                        MixedStyledText('Accepted connection.  local: "12...')
                          Token('Accepted connection.  local: "12...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4.1.  Erlang Examples		37')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4.1.  Erlang Examples		37')
          MixedStyledText('4.1.  Erlang Examples		37')
            Field('4.1')
              SingleStyledText('4.1')
            SingleStyledText('.  ')
            Field('Erlang Examples')
              MixedStyledText('Erlang Examples')
                MixedStyledText('Erlang Examples')
                  SingleStyledText('Erlang Examples')
            Tab('	')
            Tab('	')
            Field('37')
              SingleStyledText('37')
---------------------------------- page 38 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#erlang-examples')   example-programs.md:10   <section>
              (continued) Section(id='%example-programs#tcp-client')   example-programs.md:125   <section>
                (continued) Section(id='%example-programs#id4')   example-programs.md:133   <section>
                  (continued) CodeBlock('Accepted connection.  local: "12...')   example-programs.md:150   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  StaticGroupedFlowables(style='block quote')   example-programs.md:161   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. AtomVM does not currently ...')   example-programs.md:161   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. AtomVM does not currently ...')
                          MixedStyledText('Note. AtomVM does not currently ...')
                            SingleStyledText('Note. AtomVM does not currently ...')
                  Paragraph('You may run multiple concurrent ...')   example-programs.md:163   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You may run multiple concurrent ...')
                        MixedStyledText('You may run multiple concurrent ...')
                          SingleStyledText('You may run multiple concurrent ...')
                          MixedStyledText('tcp_client', style='monospaced')   example-programs.md:163   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_client')
                          SingleStyledText(' against a single ')
                          MixedStyledText('tcp_server', style='monospaced')   example-programs.md:163   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('tcp_server')
                          SingleStyledText(' instance.')
            Section(id='%example-programs#esp32-examples')   example-programs.md:165   <section>
              Heading('4.2 ESP32 Examples')   example-programs.md:165   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.2 ')
                    SingleStyledText('4.2')
                    SingleStyledText(' ')
                  MixedStyledText('ESP32 Examples')
                    MixedStyledText('ESP32 Examples')
                      SingleStyledText('ESP32 Examples')
              Paragraph('AtomVM includes examples that ar...')   example-programs.md:167   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM includes examples that ar...')
                    MixedStyledText('AtomVM includes examples that ar...')
                      SingleStyledText('AtomVM includes examples that ar...')
            Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              Heading('4.3 Flashing AtomVM Examples for...')   example-programs.md:169   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.3 ')
                    SingleStyledText('4.3')
                    SingleStyledText(' ')
                  MixedStyledText('Flashing AtomVM Examples for ESP...')
                    MixedStyledText('Flashing AtomVM Examples for ESP...')
                      SingleStyledText('Flashing AtomVM Examples for ESP...')
              Paragraph('In order to run the ESP32 exampl...')   example-programs.md:171   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In order to run the ESP32 exampl...')
                    MixedStyledText('In order to run the ESP32 exampl...')
                      SingleStyledText('In order to run the ESP32 exampl...')
              Paragraph('In the remainder of this documen...')   example-programs.md:173   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In the remainder of this documen...')
                    MixedStyledText('In the remainder of this documen...')
                      SingleStyledText('In the remainder of this documen...')
                      MixedStyledText('flash.sh', style='monospaced')   example-programs.md:173   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('flash.sh')
                      SingleStyledText(' script, located in the ')
                      MixedStyledText('tools/dev', style='monospaced')   example-programs.md:173   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('tools/dev')
                      SingleStyledText(' directory of the AtomVM source ...')
              StaticGroupedFlowables(style='block quote')   example-programs.md:175   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note. You must set the ESP_IDF e...')   example-programs.md:175   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note. You must set the ESP_IDF e...')
                      MixedStyledText('Note. You must set the ESP_IDF e...')
                        SingleStyledText('Note. You must set the ')
                        MixedStyledText('ESP_IDF', style='monospaced')   example-programs.md:175   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('ESP_IDF')
                        SingleStyledText(' environment variable to the roo...')
              Paragraph('You can control the serial port ...')   example-programs.md:177   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You can control the serial port ...')
                    MixedStyledText('You can control the serial port ...')
                      SingleStyledText('You can control the serial port ...')
                      MixedStyledText('FLASH_SERIAL_PORT', style='monospaced')   example-programs.md:177   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('FLASH_SERIAL_PORT')
                      SingleStyledText(' and ')
                      MixedStyledText('FLASH_BAUD_RATE', style='monospaced')   example-programs.md:177   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('FLASH_BAUD_RATE')
                      SingleStyledText(' environment variables, e.g.,')
              CodeBlock('shell$ export FLASH_SERIAL_PORT=...')   example-programs.md:179   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('shell$ export FLASH_SERIAL_PORT=...')
                    MixedStyledText('shell$ export FLASH_SERIAL_PORT=...')
                      Token('shell$ export FLASH_SERIAL_PORT=...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The default values for these var...')   example-programs.md:182   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The default values for these var...')
                    MixedStyledText('The default values for these var...')
                      SingleStyledText('The default values for these var...')
                      MixedStyledText('/dev/ttyUSB0', style='monospaced')   example-programs.md:182   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('/dev/ttyUSB0')
                      SingleStyledText(' and ')
                      MixedStyledText('115200', style='monospaced')   example-programs.md:182   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('115200')
                      SingleStyledText(', respectively.')
              StaticGroupedFlowables(style='block quote')   example-programs.md:184   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note. Experiment with baud rates...')   example-programs.md:184   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note. Experiment with baud rates...')
                      MixedStyledText('Note. Experiment with baud rates...')
                        SingleStyledText('Note. Experiment with baud rates...')
              Paragraph('You can montor the console outpu...')   example-programs.md:186   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You can montor the console outpu...')
                    MixedStyledText('You can montor the console outpu...')
                      SingleStyledText('You can montor the console outpu...')
                      MixedStyledText('monitor', style='monospaced')   example-programs.md:186   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('monitor')
                      SingleStyledText(' target to ')
                      MixedStyledText('make', style='monospaced')   example-programs.md:186   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('make')
                      SingleStyledText(', in the ')
                      MixedStyledText('src/platforms/esp32', style='monospaced')   example-programs.md:186   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('src/platforms/esp32')
                      SingleStyledText(' directory of the AtomVM source ...')
              CodeBlock('shell$ make monitor\nMONITOR\n--- ...')   example-programs.md:188   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('shell$ make monitor\nMONITOR\n--- ...')
                    MixedStyledText('shell$ make monitor\nMONITOR\n--- ...')
                      Token('shell$ make monitor\nMONITOR\n--- ...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%example-programs#blink')   example-programs.md:197   <section>
                Heading('4.3.1 blink')   example-programs.md:197   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.1 ')
                      SingleStyledText('4.3.1')
                      SingleStyledText(' ')
                    MixedStyledText('blink')
                      MixedStyledText('blink')
                        MixedStyledText('blink', style='monospaced')   example-programs.md:197   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('blink')
                Paragraph('The blink example will turn the ...')   example-programs.md:199   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The blink example will turn the ...')
                      MixedStyledText('The blink example will turn the ...')
                        SingleStyledText('The ')
                        MixedStyledText('blink', style='monospaced')   example-programs.md:199   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('blink')
                        SingleStyledText(' example will turn the blue LED ...')
                Paragraph('Flash the example program to you...')   example-programs.md:201   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:203   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the blue LED turn...')   example-programs.md:207   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the blue LED turn...')
                      MixedStyledText('You should see the blue LED turn...')
                        SingleStyledText('You should see the blue LED turn...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('38		Chapter 4.  Example Programs')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('38		Chapter 4.  Example Programs')
          MixedStyledText('38		Chapter 4.  Example Programs')
            Field('38')
              SingleStyledText('38')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('Example Programs')
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
---------------------------------- page 39 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              Section(id='%example-programs#esp-random')   example-programs.md:209   <section>
                Heading('4.3.2 esp_random')   example-programs.md:209   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                Paragraph('This demo program illustrates us...')   example-programs.md:211   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This demo program illustrates us...')
                      MixedStyledText('This demo program illustrates us...')
                        SingleStyledText('This demo program illustrates us...')
                        MixedStyledText('random', style='monospaced')   example-programs.md:211   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('random')
                        SingleStyledText(', ')
                        MixedStyledText('restart', style='monospaced')   example-programs.md:211   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('restart')
                        SingleStyledText(', and ')
                        MixedStyledText('reset_reason', style='monospaced')   example-programs.md:211   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('reset_reason')
                        SingleStyledText(' functions.')
                Paragraph('The program will generate a rand...')   example-programs.md:213   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The program will generate a rand...')
                      MixedStyledText('The program will generate a rand...')
                        SingleStyledText('The program will generate a rand...')
                Paragraph('Flash the example program to you...')   example-programs.md:215   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:217   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see something like th...')   example-programs.md:221   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see something like th...')
                      MixedStyledText('You should see something like th...')
                        SingleStyledText('You should see something like th...')
                CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:223   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nFound AV...')
                      MixedStyledText('shell$ make monitor\n...\nFound AV...')
                        Token('shell$ make monitor\n...\nFound AV...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%example-programs#esp-nvs')   example-programs.md:246   <section>
                Heading('4.3.3 esp_nvs')   example-programs.md:246   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.3 ')
                      SingleStyledText('4.3.3')
                      SingleStyledText(' ')
                    MixedStyledText('esp_nvs')
                      MixedStyledText('esp_nvs')
                        MixedStyledText('esp_nvs', style='monospaced')   example-programs.md:246   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esp_nvs')
                Paragraph('This demo program illustrates th...')   example-programs.md:248   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This demo program illustrates th...')
                      MixedStyledText('This demo program illustrates th...')
                        SingleStyledText('This demo program illustrates th...')
                Paragraph('The program will store the numbe...')   example-programs.md:250   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The program will store the numbe...')
                      MixedStyledText('The program will store the numbe...')
                        SingleStyledText('The program will store the numbe...')
                Paragraph('Flash the example program to you...')   example-programs.md:252   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:254   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:258   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:260   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nFound AV...')
                      MixedStyledText('shell$ make monitor\n...\nFound AV...')
                        Token('shell$ make monitor\n...\nFound AV...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4.3.  Flashing AtomVM Examples f...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4.3.  Flashing AtomVM Examples f...')
          MixedStyledText('4.3.  Flashing AtomVM Examples f...')
            Field('4.3')
              SingleStyledText('4.3')
            SingleStyledText('.  ')
            Field('Flashing AtomVM Examples for ESP...')
              MixedStyledText('Flashing AtomVM Examples for ESP...')
                MixedStyledText('Flashing AtomVM Examples for ESP...')
                  SingleStyledText('Flashing AtomVM Examples for ESP...')
            Tab('	')
            Tab('	')
            Field('39')
              SingleStyledText('39')
---------------------------------- page 40 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              (continued) Section(id='%example-programs#esp-nvs')   example-programs.md:246   <section>
                (continued) CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:260   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('Hit the reset button on your dev...')   example-programs.md:271   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Hit the reset button on your dev...')
                      MixedStyledText('Hit the reset button on your dev...')
                        SingleStyledText('Hit the reset button on your dev...')
                CodeBlock('Found AVM partition: size: 10485...')   example-programs.md:273   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('Found AVM partition: size: 10485...')
                      MixedStyledText('Found AVM partition: size: 10485...')
                        Token('Found AVM partition: size: 10485...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%example-programs#reformat-nvs')   example-programs.md:282   <section>
                Heading('4.3.4 reformat_nvs')   example-programs.md:282   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.4 ')
                      SingleStyledText('4.3.4')
                      SingleStyledText(' ')
                    MixedStyledText('reformat_nvs')
                      MixedStyledText('reformat_nvs')
                        MixedStyledText('reformat_nvs', style='monospaced')   example-programs.md:282   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('reformat_nvs')
                Paragraph('This demo program will reformat ...')   example-programs.md:284   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This demo program will reformat ...')
                      MixedStyledText('This demo program will reformat ...')
                        SingleStyledText('This demo program will reformat ...')
                Paragraph('Flash the example program to you...')   example-programs.md:286   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:288   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:292   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:294   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nFound AV...')
                      MixedStyledText('shell$ make monitor\n...\nFound AV...')
                        Token('shell$ make monitor\n...\nFound AV...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The NVS partition on your ESP de...')   example-programs.md:304   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The NVS partition on your ESP de...')
                      MixedStyledText('The NVS partition on your ESP de...')
                        SingleStyledText('The NVS partition on your ESP de...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:306   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  This program will irrevoc...')   example-programs.md:306   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  This program will irrevoc...')
                        MixedStyledText('Note.  This program will irrevoc...')
                          SingleStyledText('Note.  This program will irrevoc...')
              Section(id='%example-programs#set-network-config')   example-programs.md:308   <section>
                Heading('4.3.5 set_network_config')   example-programs.md:308   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.5 ')
                      SingleStyledText('4.3.5')
                      SingleStyledText(' ')
                    MixedStyledText('set_network_config')
                      MixedStyledText('set_network_config')
                        MixedStyledText('set_network_config', style='monospaced')   example-programs.md:308   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('set_network_config')
                Paragraph('This demo program can be used to...')   example-programs.md:310   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This demo program can be used to...')
                      MixedStyledText('This demo program can be used to...')
                        SingleStyledText('This demo program can be used to...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:312   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Credentials are stored un...')   example-programs.md:312   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Credentials are stored un...')
                        MixedStyledText('Note.  Credentials are stored un...')
                          SingleStyledText('Note.  Credentials are stored un...')
                Paragraph('Edit the sta_network_config.erl ...')   example-programs.md:314   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Edit the sta_network_config.erl ...')
                      MixedStyledText('Edit the sta_network_config.erl ...')
                        SingleStyledText('Edit the ')
                        MixedStyledText('sta_network_config.erl', style='monospaced')   example-programs.md:314   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('sta_network_config.erl')
                        SingleStyledText(' program and set the ')
                        MixedStyledText('Ssid', style='monospaced')   example-programs.md:314   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('Ssid')
                        SingleStyledText(' binary with your WIFI AP SSID, ...')
                        MixedStyledText('Psk', style='monospaced')   example-programs.md:314   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('Psk')
                        SingleStyledText(' binary with the password used t...')
                CodeBlock('shell$ make\n...\nshell$ ./tools/d...')   example-programs.md:316   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make\n...\nshell$ ./tools/d...')
                      MixedStyledText('shell$ make\n...\nshell$ ./tools/d...')
                        Token('shell$ make\n...\nshell$ ./tools/d...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:322   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:324   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nFound AV...')
                      MixedStyledText('shell$ make monitor\n...\nFound AV...')
                        Token('shell$ make monitor\n...\nFound AV...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('40		Chapter 4.  Example Programs')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('40		Chapter 4.  Example Programs')
          MixedStyledText('40		Chapter 4.  Example Programs')
            Field('40')
              SingleStyledText('40')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('Example Programs')
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
---------------------------------- page 41 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              (continued) Section(id='%example-programs#set-network-config')   example-programs.md:308   <section>
                (continued) CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:324   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('You may now run programs that us...')   example-programs.md:335   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You may now run programs that us...')
                      MixedStyledText('You may now run programs that us...')
                        SingleStyledText('You may now run programs that us...')
              Section(id='%example-programs#sta-network')   example-programs.md:337   <section>
                Heading('4.3.6 sta_network')   example-programs.md:337   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.6 ')
                      SingleStyledText('4.3.6')
                      SingleStyledText(' ')
                    MixedStyledText('sta_network')
                      MixedStyledText('sta_network')
                        MixedStyledText('sta_network', style='monospaced')   example-programs.md:337   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('sta_network')
                Paragraph('The sta_network example will con...')   example-programs.md:339   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The sta_network example will con...')
                      MixedStyledText('The sta_network example will con...')
                        SingleStyledText('The ')
                        MixedStyledText('sta_network', style='monospaced')   example-programs.md:339   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('sta_network')
                        SingleStyledText(' example will connect to your lo...')
                        MixedStyledText('connected', style='monospaced')   example-programs.md:339   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('connected')
                        SingleStyledText(' message will be displayed.  Onc...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:341   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:341   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:343   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:343   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:345   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  If you have not set WIFI ...')   example-programs.md:345   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  If you have not set WIFI ...')
                        MixedStyledText('Note.  If you have not set WIFI ...')
                          SingleStyledText('Note.  If you have not set WIFI ...')
                          MixedStyledText('examples/erlang/esp32/sta_networ...', style='monospaced')   example-programs.md:345   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('examples/erlang/esp32/sta_networ...')
                          SingleStyledText(' source file and set the ')
                          MixedStyledText('ssid', style='monospaced')   example-programs.md:345   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('ssid')
                          SingleStyledText(' and ')
                          MixedStyledText('psk', style='monospaced')   example-programs.md:345   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('psk')
                          SingleStyledText(' parameters to match your local ...')
                Paragraph('Flash the example program to you...')   example-programs.md:347   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:349   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:353   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\n...\nStarting...')   example-programs.md:355   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nStarting...')
                      MixedStyledText('shell$ make monitor\n...\nStarting...')
                        Token('shell$ make monitor\n...\nStarting...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4.3.  Flashing AtomVM Examples f...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4.3.  Flashing AtomVM Examples f...')
          MixedStyledText('4.3.  Flashing AtomVM Examples f...')
            Field('4.3')
              SingleStyledText('4.3')
            SingleStyledText('.  ')
            Field('Flashing AtomVM Examples for ESP...')
              MixedStyledText('Flashing AtomVM Examples for ESP...')
                MixedStyledText('Flashing AtomVM Examples for ESP...')
                  SingleStyledText('Flashing AtomVM Examples for ESP...')
            Tab('	')
            Tab('	')
            Field('41')
              SingleStyledText('41')
---------------------------------- page 42 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              (continued) Section(id='%example-programs#sta-network')   example-programs.md:337   <section>
                (continued) CodeBlock('shell$ make monitor\n...\nStarting...')   example-programs.md:355   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
              Section(id='%example-programs#udp-server-blink')   example-programs.md:387   <section>
                Heading('4.3.7 udp_server_blink')   example-programs.md:387   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.7 ')
                      SingleStyledText('4.3.7')
                      SingleStyledText(' ')
                    MixedStyledText('udp_server_blink')
                      MixedStyledText('udp_server_blink')
                        MixedStyledText('udp_server_blink', style='monospaced')   example-programs.md:387   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp_server_blink')
                Paragraph('The udp_server_blink example wil...')   example-programs.md:389   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The udp_server_blink example wil...')
                      MixedStyledText('The udp_server_blink example wil...')
                        SingleStyledText('The ')
                        MixedStyledText('udp_server_blink', style='monospaced')   example-programs.md:389   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('udp_server_blink')
                        SingleStyledText(' example will connect to your lo...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:391   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:391   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:393   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:393   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:395   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  You will need to edit the...')   example-programs.md:395   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  You will need to edit the...')
                        MixedStyledText('Note.  You will need to edit the...')
                          SingleStyledText('Note.  You will need to edit the...')
                          MixedStyledText('examples/erlang/esp32/udp_server...', style='monospaced')   example-programs.md:395   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('examples/erlang/esp32/udp_server...')
                          SingleStyledText(' source file and set the ')
                          MixedStyledText('ssid', style='monospaced')   example-programs.md:395   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('ssid')
                          SingleStyledText(' and ')
                          MixedStyledText('psk', style='monospaced')   example-programs.md:395   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('psk')
                          SingleStyledText(' parameters to match your local ...')
                Paragraph('Flash the example program to you...')   example-programs.md:397   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:399   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:403   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\n...\nFound AV...')   example-programs.md:405   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\n...\nFound AV...')
                      MixedStyledText('shell$ make monitor\n...\nFound AV...')
                        Token('shell$ make monitor\n...\nFound AV...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('42		Chapter 4.  Example Programs')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('42		Chapter 4.  Example Programs')
          MixedStyledText('42		Chapter 4.  Example Programs')
            Field('42')
              SingleStyledText('42')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('Example Programs')
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
---------------------------------- page 43 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              (continued) Section(id='%example-programs#udp-server-blink')   example-programs.md:387   <section>
                Paragraph('You can send UDP packets to the ...')   example-programs.md:440   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                CodeBlock('shell$ nc -u 192.168.1.236 44404...')   example-programs.md:442   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ nc -u 192.168.1.236 44404...')
                      MixedStyledText('shell$ nc -u 192.168.1.236 44404...')
                        Token('shell$ nc -u 192.168.1.236 44404...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Every time you enter a line of t...')   example-programs.md:444   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Every time you enter a line of t...')
                      MixedStyledText('Every time you enter a line of t...')
                        SingleStyledText('Every time you enter a line of t...')
                CodeBlock('Received UDP packet <<100,115,10...')   example-programs.md:446   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('Received UDP packet <<100,115,10...')
                      MixedStyledText('Received UDP packet <<100,115,10...')
                        Token('Received UDP packet <<100,115,10...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%example-programs#tcp-server-blink')   example-programs.md:449   <section>
                Heading('4.3.8 tcp_server_blink')   example-programs.md:449   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('4.3.8 ')
                      SingleStyledText('4.3.8')
                      SingleStyledText(' ')
                    MixedStyledText('tcp_server_blink')
                      MixedStyledText('tcp_server_blink')
                        MixedStyledText('tcp_server_blink', style='monospaced')   example-programs.md:449   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tcp_server_blink')
                Paragraph('The tcp_server_blink example wil...')   example-programs.md:451   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The tcp_server_blink example wil...')
                      MixedStyledText('The tcp_server_blink example wil...')
                        SingleStyledText('The ')
                        MixedStyledText('tcp_server_blink', style='monospaced')   example-programs.md:451   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tcp_server_blink')
                        SingleStyledText(' example will connect to your lo...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:453   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:453   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:455   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  AtomVM currently only sup...')   example-programs.md:455   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  AtomVM currently only sup...')
                        MixedStyledText('Note.  AtomVM currently only sup...')
                          SingleStyledText('Note.  AtomVM currently only sup...')
                StaticGroupedFlowables(style='block quote')   example-programs.md:457   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  You will need to edit the...')   example-programs.md:457   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  You will need to edit the...')
                        MixedStyledText('Note.  You will need to edit the...')
                          SingleStyledText('Note.  You will need to edit the...')
                          MixedStyledText('examples/erlang/esp32/tcp_server...', style='monospaced')   example-programs.md:457   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('examples/erlang/esp32/tcp_server...')
                          SingleStyledText(' source file and set the ')
                          MixedStyledText('ssid', style='monospaced')   example-programs.md:457   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('ssid')
                          SingleStyledText(' and ')
                          MixedStyledText('psk', style='monospaced')   example-programs.md:457   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('psk')
                          SingleStyledText(' parameters to match your local ...')
                Paragraph('Flash the example program to you...')   example-programs.md:459   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Flash the example program to you...')
                      MixedStyledText('Flash the example program to you...')
                        SingleStyledText('Flash the example program to you...')
                CodeBlock('shell$ ./tools/dev/flash.sh buil...')   example-programs.md:461   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh buil...')
                        Token('shell$ ./tools/dev/flash.sh buil...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You should see the following out...')   example-programs.md:465   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You should see the following out...')
                      MixedStyledText('You should see the following out...')
                        SingleStyledText('You should see the following out...')
                CodeBlock('shell$ make monitor\nFound AVM pa...')   example-programs.md:467   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make monitor\nFound AVM pa...')
                      MixedStyledText('shell$ make monitor\nFound AVM pa...')
                        Token('shell$ make monitor\nFound AVM pa...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4.3.  Flashing AtomVM Examples f...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4.3.  Flashing AtomVM Examples f...')
          MixedStyledText('4.3.  Flashing AtomVM Examples f...')
            Field('4.3')
              SingleStyledText('4.3')
            SingleStyledText('.  ')
            Field('Flashing AtomVM Examples for ESP...')
              MixedStyledText('Flashing AtomVM Examples for ESP...')
                MixedStyledText('Flashing AtomVM Examples for ESP...')
                  SingleStyledText('Flashing AtomVM Examples for ESP...')
            Tab('	')
            Tab('	')
            Field('43')
              SingleStyledText('43')
---------------------------------- page 44 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%example-programs')   <start_of_file>
          (continued) Section(id='%example-programs#example-programs')   example-programs.md:6   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%example-programs#flashing-atomvm-examples-for-esp32')   example-programs.md:169   <section>
              (continued) Section(id='%example-programs#tcp-server-blink')   example-programs.md:449   <section>
                (continued) CodeBlock('shell$ make monitor\nFound AVM pa...')   example-programs.md:467   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('You can send TCP packets to the ...')   example-programs.md:502   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can send TCP packets to the ...')
                      MixedStyledText('You can send TCP packets to the ...')
                        SingleStyledText('You can send TCP packets to the ...')
                        MixedStyledText('netcat', style='monospaced')   example-programs.md:502   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('netcat')
                        SingleStyledText(' (or ')
                        MixedStyledText('nc', style='monospaced')   example-programs.md:502   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('nc')
                        SingleStyledText(' on some platforms), in a separa...')
                CodeBlock('shell$ nc 192.168.1.236 44404\n')   example-programs.md:504   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ nc 192.168.1.236 44404\n')
                      MixedStyledText('shell$ nc 192.168.1.236 44404\n')
                        Token('shell$ nc 192.168.1.236 44404\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('On the ESP32 console, you should...')   example-programs.md:506   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('On the ESP32 console, you should...')
                      MixedStyledText('On the ESP32 console, you should...')
                        SingleStyledText('On the ESP32 console, you should...')
                CodeBlock('Accepted connection.  local: "19...')   example-programs.md:508   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('Accepted connection.  local: "19...')
                      MixedStyledText('Accepted connection.  local: "19...')
                        Token('Accepted connection.  local: "19...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Every time you enter a line of t...')   example-programs.md:512   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Every time you enter a line of t...')
                      MixedStyledText('Every time you enter a line of t...')
                        SingleStyledText('Every time you enter a line of t...')
                        MixedStyledText('netcat', style='monospaced')   example-programs.md:512   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('netcat')
                        SingleStyledText(' console.')
                Paragraph('On the ESP32 console, you should...')   example-programs.md:514   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('On the ESP32 console, you should...')
                      MixedStyledText('On the ESP32 console, you should...')
                        SingleStyledText('On the ESP32 console, you should...')
                CodeBlock('Received packet [115,100,102,115...')   example-programs.md:516   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('Received packet [115,100,102,115...')
                      MixedStyledText('Received packet [115,100,102,115...')
                        Token('Received packet [115,100,102,115...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('every time a packet is sent to t...')   example-programs.md:519   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('every time a packet is sent to t...')
                      MixedStyledText('every time a packet is sent to t...')
                        SingleStyledText('every time a packet is sent to t...')
        StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('44		Chapter 4.  Example Programs')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('44		Chapter 4.  Example Programs')
          MixedStyledText('44		Chapter 4.  Example Programs')
            Field('44')
              SingleStyledText('44')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('Example Programs')
              MixedStyledText('Example Programs')
                MixedStyledText('Example Programs')
                  SingleStyledText('Example Programs')
---------------------------------- page 45 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 5', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 5')
        MixedStyledText('Chapter 5')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('5', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('5')
  Paragraph('Network Programming Guide', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Network Programming Guide')
        MixedStyledText('Network Programming Guide')
          MixedStyledText('Network Programming Guide')
            SingleStyledText('Network Programming Guide')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('One of the exciting features of ...')   network-programming-guide.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('One of the exciting features of ...')
                  MixedStyledText('One of the exciting features of ...')
                    SingleStyledText('One of the exciting features of ...')
            Paragraph('AtomVM provides an Erlang API in...')   network-programming-guide.md:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('AtomVM provides an Erlang API in...')
                  MixedStyledText('AtomVM provides an Erlang API in...')
                    SingleStyledText('AtomVM provides an Erlang API in...')
                    MixedStyledText('network', style='monospaced')   network-programming-guide.md:11   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('network')
                    SingleStyledText(' module, which implements a simp...')
            Paragraph('Once the network has been set up...')   network-programming-guide.md:13   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('Once the network has been set up...')
                  MixedStyledText('Once the network has been set up...')
                    SingleStyledText('Once the network has been set up...')
                    MixedStyledText('gen_udp', style='monospaced')   network-programming-guide.md:13   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('gen_udp')
                    SingleStyledText(' and ')
                    MixedStyledText('gen_tcp', style='monospaced')   network-programming-guide.md:13   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('gen_tcp')
                    SingleStyledText(' APIs, while AtomVM extensions m...')
            Paragraph('The AtomVM networking API levera...')   network-programming-guide.md:15   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The AtomVM networking API levera...')
                  MixedStyledText('The AtomVM networking API levera...')
                    SingleStyledText('The AtomVM networking API levera...')
            Paragraph('This document describes the basi...')   network-programming-guide.md:17   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This document describes the basi...')
                  MixedStyledText('This document describes the basi...')
                    SingleStyledText('This document describes the basi...')
            Section(id='%network-programming-guide#station-sta-mode')   network-programming-guide.md:19   <section>
              Heading('5.1 Station (STA) mode')   network-programming-guide.md:19   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.1 ')
                    SingleStyledText('5.1')
                    SingleStyledText(' ')
                  MixedStyledText('Station (STA) mode')
                    MixedStyledText('Station (STA) mode')
                      SingleStyledText('Station (STA) mode')
              Paragraph('In STA mode, the ESP32 connects ...')   network-programming-guide.md:21   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In STA mode, the ESP32 connects ...')
                    MixedStyledText('In STA mode, the ESP32 connects ...')
                      SingleStyledText('In STA mode, the ESP32 connects ...')
              Paragraph('In this case, the input configur...')   network-programming-guide.md:23   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In this case, the input configur...')
                    MixedStyledText('In this case, the input configur...')
                      SingleStyledText('In this case, the input configur...')
                      MixedStyledText('{sta, <sta-properties>}', style='monospaced')   network-programming-guide.md:23   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('{sta, <sta-properties>}')
                      SingleStyledText(', where ')
                      MixedStyledText('<sta-properties>', style='monospaced')   network-programming-guide.md:23   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('<sta-properties>')
                      SingleStyledText(' is a property list containing c...')
              Paragraph('The <sta-properties> property li...')   network-programming-guide.md:25   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The <sta-properties> property li...')
                    MixedStyledText('The <sta-properties> property li...')
                      SingleStyledText('The ')
                      MixedStyledText('<sta-properties>', style='monospaced')   network-programming-guide.md:25   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('<sta-properties>')
                      SingleStyledText(' property list should contain th...')
              List(style='bulleted')   network-programming-guide.md:27   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:27   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{ssid, string() | binary()}  The...')   network-programming-guide.md:27   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{ssid, string() | binary()}  The...')
                          MixedStyledText('{ssid, string() | binary()}  The...')
                            MixedStyledText('{ssid, string() | binary()}', style='monospaced')   network-programming-guide.md:27   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{ssid, string() | binary()}')
                            SingleStyledText('  The SSID to which the device s...')
                ListItem()   network-programming-guide.md:28   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{psk, string() | binary()} The p...')   network-programming-guide.md:28   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{psk, string() | binary()} The p...')
                          MixedStyledText('{psk, string() | binary()} The p...')
                            MixedStyledText('{psk, string() | binary()}', style='monospaced')   network-programming-guide.md:28   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{psk, string() | binary()}')
                            SingleStyledText(' The password required to authen...')
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:30   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note that the station mode SSID ...')   network-programming-guide.md:30   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note that the station mode SSID ...')
                      MixedStyledText('Note that the station mode SSID ...')
                        SingleStyledText('Note that the station mode SSID ...')
                        MixedStyledText('may', style='emphasis')   network-programming-guide.md:30   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('may')
                        SingleStyledText(' be stored in non-volatile stora...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		45')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		45')
          MixedStyledText('		45')
            Tab('	')
            Tab('	')
            Field('45')
              SingleStyledText('45')
---------------------------------- page 46 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          (continued) Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%network-programming-guide#station-sta-mode')   network-programming-guide.md:19   <section>
              (continued) StaticGroupedFlowables(style='block quote')   network-programming-guide.md:30   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                (continued) Paragraph('Note that the station mode SSID ...')   network-programming-guide.md:30   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
              Paragraph('The network:start/1 will immedia...')   network-programming-guide.md:32   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The network:start/1 will immedia...')
                    MixedStyledText('The network:start/1 will immedia...')
                      SingleStyledText('The ')
                      MixedStyledText('network:start/1', style='monospaced')   network-programming-guide.md:32   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('network:start/1')
                      SingleStyledText(' will immediately return ')
                      MixedStyledText('ok', style='monospaced')   network-programming-guide.md:32   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('ok')
                      SingleStyledText(', if the network was properly in...')
                      MixedStyledText('{error, Reason}', style='monospaced')   network-programming-guide.md:32   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('{error, Reason}')
                      SingleStyledText(', if there was an error in confi...')
              Paragraph('Applications can specify callbac...')   network-programming-guide.md:34   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Applications can specify callbac...')
                    MixedStyledText('Applications can specify callbac...')
                      SingleStyledText('Applications can specify callbac...')
              Paragraph('Callback functions can be specif...')   network-programming-guide.md:36   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Callback functions can be specif...')
                    MixedStyledText('Callback functions can be specif...')
                      SingleStyledText('Callback functions can be specif...')
              List(style='bulleted')   network-programming-guide.md:38   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:38   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{connected, fun(() -> term())} A...')   network-programming-guide.md:38   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{connected, fun(() -> term())} A...')
                          MixedStyledText('{connected, fun(() -> term())} A...')
                            MixedStyledText('{connected, fun(() -> term())}', style='monospaced')   network-programming-guide.md:38   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{connected, fun(() -> term())}')
                            SingleStyledText(' A callback function which will ...')
                ListItem()   network-programming-guide.md:39   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{disconnected, fun(() -> term())...')   network-programming-guide.md:39   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{disconnected, fun(() -> term())...')
                          MixedStyledText('{disconnected, fun(() -> term())...')
                            MixedStyledText('{disconnected, fun(() -> term())...', style='monospaced')   network-programming-guide.md:39   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{disconnected, fun(() -> term())...')
                            SingleStyledText(' A callback function which will ...')
                ListItem()   network-programming-guide.md:40   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{got_ip, fun((ip_info()) -> term...')   network-programming-guide.md:40   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{got_ip, fun((ip_info()) -> term...')
                          MixedStyledText('{got_ip, fun((ip_info()) -> term...')
                            MixedStyledText('{got_ip, fun((ip_info()) -> term...', style='monospaced')   network-programming-guide.md:40   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{got_ip, fun((ip_info()) -> term...')
                            SingleStyledText(' A callback function which will ...')
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:42   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  IPv6 addresses are not ye...')   network-programming-guide.md:42   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  IPv6 addresses are not ye...')
                      MixedStyledText('Note.  IPv6 addresses are not ye...')
                        SingleStyledText('Note.  IPv6 addresses are not ye...')
              Paragraph('Callback functions are optional,...')   network-programming-guide.md:44   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Callback functions are optional,...')
                    MixedStyledText('Callback functions are optional,...')
                      SingleStyledText('Callback functions are optional,...')
              Paragraph('In addition, the following optio...')   network-programming-guide.md:46   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In addition, the following optio...')
                    MixedStyledText('In addition, the following optio...')
                      SingleStyledText('In addition, the following optio...')
              List(style='bulleted')   network-programming-guide.md:48   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:48   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{dhcp_hostname, string()|binary(...')   network-programming-guide.md:48   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{dhcp_hostname, string()|binary(...')
                          MixedStyledText('{dhcp_hostname, string()|binary(...')
                            MixedStyledText('{dhcp_hostname, string()|binary(...', style='monospaced')   network-programming-guide.md:48   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{dhcp_hostname, string()|binary(...')
                            SingleStyledText(' The DHCP hostname as which the ...')
                            MixedStyledText('<<"atomvm-<hexmac>">>', style='monospaced')   network-programming-guide.md:48   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('<<"atomvm-<hexmac>">>')
                            SingleStyledText(', where ')
                            MixedStyledText('<hexmac>', style='monospaced')   network-programming-guide.md:48   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('<hexmac>')
                            SingleStyledText(' is the hexadecimal representati...')
              Paragraph('The following example illustrate...')   network-programming-guide.md:50   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following example illustrate...')
                    MixedStyledText('The following example illustrate...')
                      SingleStyledText('The following example illustrate...')
              CodeBlock('%% erlang\nConfig = [\n    {sta, [...')   network-programming-guide.md:52   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\nConfig = [\n    {sta, [...')
                    MixedStyledText('%% erlang\nConfig = [\n    {sta, [...')
                      Token('%% erlang\nConfig = [\n    {sta, [...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The following callback functions...')   network-programming-guide.md:66   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following callback functions...')
                    MixedStyledText('The following callback functions...')
                      SingleStyledText('The following callback functions...')
              CodeBlock('%% erlang\nconnected()) ->\n    io...')   network-programming-guide.md:68   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\nconnected()) ->\n    io...')
                    MixedStyledText('%% erlang\nconnected()) ->\n    io...')
                      Token('%% erlang\nconnected()) ->\n    io...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('46		Chapter 5.  Network Programm...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('46		Chapter 5.  Network Programm...')
          MixedStyledText('46		Chapter 5.  Network Programm...')
            Field('46')
              SingleStyledText('46')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('5')
              SingleStyledText('5')
            SingleStyledText('.  ')
            Field('Network Programming Guide')
              MixedStyledText('Network Programming Guide')
                MixedStyledText('Network Programming Guide')
                  SingleStyledText('Network Programming Guide')
---------------------------------- page 47 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          (continued) Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%network-programming-guide#station-sta-mode')   network-programming-guide.md:19   <section>
              Paragraph('In a typical application, the ne...')   network-programming-guide.md:78   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              Section(id='%network-programming-guide#convenience-functions')   network-programming-guide.md:80   <section>
                Heading('5.1.1 Convenience Functions')   network-programming-guide.md:80   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('5.1.1 ')
                      SingleStyledText('5.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('Convenience Functions')
                      MixedStyledText('Convenience Functions')
                        SingleStyledText('Convenience Functions')
                Paragraph('The network module supports the ...')   network-programming-guide.md:82   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The network module supports the ...')
                      MixedStyledText('The network module supports the ...')
                        SingleStyledText('The ')
                        MixedStyledText('network', style='monospaced')   network-programming-guide.md:82   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('network')
                        SingleStyledText(' module supports the ')
                        MixedStyledText('network:wait_for_sta/1,2', style='monospaced')   network-programming-guide.md:82   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('network:wait_for_sta/1,2')
                        SingleStyledText(' convenience functions for appli...')
                        MixedStyledText('{sta, [...]}', style='monospaced')   network-programming-guide.md:82   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{sta, [...]}')
                        SingleStyledText(' component of the above configur...')
                Paragraph('For example:')   network-programming-guide.md:84   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example:')
                      MixedStyledText('For example:')
                        SingleStyledText('For example:')
                CodeBlock('%% erlang\nConfig = [\n    {ssid, ...')   network-programming-guide.md:86   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nConfig = [\n    {ssid, ...')
                      MixedStyledText('%% erlang\nConfig = [\n    {ssid, ...')
                        Token('%% erlang\nConfig = [\n    {ssid, ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%network-programming-guide#ap-mode')   network-programming-guide.md:99   <section>
              Heading('5.2 AP mode')   network-programming-guide.md:99   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.2 ')
                    SingleStyledText('5.2')
                    SingleStyledText(' ')
                  MixedStyledText('AP mode')
                    MixedStyledText('AP mode')
                      SingleStyledText('AP mode')
              Paragraph('In AP mode, the ESP32 starts a W...')   network-programming-guide.md:101   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In AP mode, the ESP32 starts a W...')
                    MixedStyledText('In AP mode, the ESP32 starts a W...')
                      SingleStyledText('In AP mode, the ESP32 starts a W...')
                      MixedStyledText('192.168.4.1', style='monospaced')   network-programming-guide.md:101   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('192.168.4.1')
                      SingleStyledText('.  Devices that attach to the ES...')
                      MixedStyledText('192.168.4.0/24', style='monospaced')   network-programming-guide.md:101   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('192.168.4.0/24')
                      SingleStyledText(' range, e.g., ')
                      MixedStyledText('192.168.4.2', style='monospaced')   network-programming-guide.md:101   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('192.168.4.2')
                      SingleStyledText(', ')
                      MixedStyledText('192.168.4.3', style='monospaced')   network-programming-guide.md:101   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('192.168.4.3')
                      SingleStyledText(', etc.')
              Paragraph('To initialize the ESP32 device i...')   network-programming-guide.md:103   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('To initialize the ESP32 device i...')
                    MixedStyledText('To initialize the ESP32 device i...')
                      SingleStyledText('To initialize the ESP32 device i...')
                      MixedStyledText('{ap, <ap-properties>}', style='monospaced')   network-programming-guide.md:103   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('{ap, <ap-properties>}')
                      SingleStyledText(', where ')
                      MixedStyledText('<ap-properties>', style='monospaced')   network-programming-guide.md:103   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('<ap-properties>')
                      SingleStyledText(' is a property list containing c...')
              Paragraph('The <ap-properties> property lis...')   network-programming-guide.md:105   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The <ap-properties> property lis...')
                    MixedStyledText('The <ap-properties> property lis...')
                      SingleStyledText('The ')
                      MixedStyledText('<ap-properties>', style='monospaced')   network-programming-guide.md:105   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('<ap-properties>')
                      SingleStyledText(' property list may contain the f...')
              List(style='bulleted')   network-programming-guide.md:107   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:107   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{ssid, string() | binary()}  The...')   network-programming-guide.md:107   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{ssid, string() | binary()}  The...')
                          MixedStyledText('{ssid, string() | binary()}  The...')
                            MixedStyledText('{ssid, string() | binary()}', style='monospaced')   network-programming-guide.md:107   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{ssid, string() | binary()}')
                            SingleStyledText('  The SSID to which the device s...')
                ListItem()   network-programming-guide.md:108   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{psk, string() | binary()} The p...')   network-programming-guide.md:108   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{psk, string() | binary()} The p...')
                          MixedStyledText('{psk, string() | binary()} The p...')
                            MixedStyledText('{psk, string() | binary()}', style='monospaced')   network-programming-guide.md:108   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{psk, string() | binary()}')
                            SingleStyledText(' The password required to authen...')
              Paragraph('If the SSID is omitted in config...')   network-programming-guide.md:110   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('If the SSID is omitted in config...')
                    MixedStyledText('If the SSID is omitted in config...')
                      SingleStyledText('If the SSID is omitted in config...')
                      MixedStyledText('atomvm-<hexmac>', style='monospaced')   network-programming-guide.md:110   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('atomvm-<hexmac>')
                      SingleStyledText(' will be created, where ')
                      MixedStyledText('<hexmac>', style='monospaced')   network-programming-guide.md:110   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('<hexmac>')
                      SingleStyledText(' is the hexadecimal representati...')
              Paragraph('If the password is omitted, then...')   network-programming-guide.md:112   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('If the password is omitted, then...')
                    MixedStyledText('If the password is omitted, then...')
                      SingleStyledText('If the password is omitted, then...')
                      MixedStyledText('open network', style='emphasis')   network-programming-guide.md:112   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('open network')
                      SingleStyledText(' will be created, and a warning ...')
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:114   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note that the station mode SSID ...')   network-programming-guide.md:114   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note that the station mode SSID ...')
                      MixedStyledText('Note that the station mode SSID ...')
                        SingleStyledText('Note that the station mode SSID ...')
                        MixedStyledText('may', style='emphasis')   network-programming-guide.md:114   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('may')
                        SingleStyledText(' be stored in non-volatile stora...')
              Paragraph('The network:start/1 will immedia...')   network-programming-guide.md:116   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The network:start/1 will immedia...')
                    MixedStyledText('The network:start/1 will immedia...')
                      SingleStyledText('The ')
                      MixedStyledText('network:start/1', style='monospaced')   network-programming-guide.md:116   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('network:start/1')
                      SingleStyledText(' will immediately return ')
                      MixedStyledText('ok', style='monospaced')   network-programming-guide.md:116   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('ok')
                      SingleStyledText(', if the network was properly in...')
                      MixedStyledText('{error, Reason}', style='monospaced')   network-programming-guide.md:116   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('{error, Reason}')
                      SingleStyledText(', if there was an error in confi...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('5.2.  AP mode		47')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('5.2.  AP mode		47')
          MixedStyledText('5.2.  AP mode		47')
            Field('5.2')
              SingleStyledText('5.2')
            SingleStyledText('.  ')
            Field('AP mode')
              MixedStyledText('AP mode')
                MixedStyledText('AP mode')
                  SingleStyledText('AP mode')
            Tab('	')
            Tab('	')
            Field('47')
              SingleStyledText('47')
---------------------------------- page 48 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          (continued) Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%network-programming-guide#ap-mode')   network-programming-guide.md:99   <section>
              Paragraph('Applications can specify callbac...')   network-programming-guide.md:118   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              Paragraph('Callback functions can be specif...')   network-programming-guide.md:120   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Callback functions can be specif...')
                    MixedStyledText('Callback functions can be specif...')
                      SingleStyledText('Callback functions can be specif...')
              List(style='bulleted')   network-programming-guide.md:122   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:122   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{ap_started, fun(() -> term())} ...')   network-programming-guide.md:122   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{ap_started, fun(() -> term())} ...')
                          MixedStyledText('{ap_started, fun(() -> term())} ...')
                            MixedStyledText('{ap_started, fun(() -> term())}', style='monospaced')   network-programming-guide.md:122   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{ap_started, fun(() -> term())}')
                            SingleStyledText(' A callback function which will ...')
                ListItem()   network-programming-guide.md:123   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{sta_connected, fun((Mac::binary...')   network-programming-guide.md:123   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{sta_connected, fun((Mac::binary...')
                          MixedStyledText('{sta_connected, fun((Mac::binary...')
                            MixedStyledText('{sta_connected, fun((Mac::binary...', style='monospaced')   network-programming-guide.md:123   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{sta_connected, fun((Mac::binary...')
                            SingleStyledText(' A callback function which will ...')
                ListItem()   network-programming-guide.md:124   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{sta_disconnected, fun((Mac::bin...')   network-programming-guide.md:124   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{sta_disconnected, fun((Mac::bin...')
                          MixedStyledText('{sta_disconnected, fun((Mac::bin...')
                            MixedStyledText('{sta_disconnected, fun((Mac::bin...', style='monospaced')   network-programming-guide.md:124   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{sta_disconnected, fun((Mac::bin...')
                            SingleStyledText(' A callback function which will ...')
                ListItem()   network-programming-guide.md:125   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{sta_ip_assigned, fun((ipv4_addr...')   network-programming-guide.md:125   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{sta_ip_assigned, fun((ipv4_addr...')
                          MixedStyledText('{sta_ip_assigned, fun((ipv4_addr...')
                            MixedStyledText('{sta_ip_assigned, fun((ipv4_addr...', style='monospaced')   network-programming-guide.md:125   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{sta_ip_assigned, fun((ipv4_addr...')
                            SingleStyledText(' A callback function which will ...')
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:127   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  IPv6 addresses are not ye...')   network-programming-guide.md:127   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  IPv6 addresses are not ye...')
                      MixedStyledText('Note.  IPv6 addresses are not ye...')
                        SingleStyledText('Note.  IPv6 addresses are not ye...')
              Paragraph('Callback functions are completel...')   network-programming-guide.md:129   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Callback functions are completel...')
                    MixedStyledText('Callback functions are completel...')
                      SingleStyledText('Callback functions are completel...')
              Paragraph('In addition, the following optio...')   network-programming-guide.md:131   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In addition, the following optio...')
                    MixedStyledText('In addition, the following optio...')
                      SingleStyledText('In addition, the following optio...')
              List(style='bulleted')   network-programming-guide.md:133   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   network-programming-guide.md:133   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{ssid_hidden, boolean()} Whether...')   network-programming-guide.md:133   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{ssid_hidden, boolean()} Whether...')
                          MixedStyledText('{ssid_hidden, boolean()} Whether...')
                            MixedStyledText('{ssid_hidden, boolean()}', style='monospaced')   network-programming-guide.md:133   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{ssid_hidden, boolean()}')
                            SingleStyledText(' Whether the AP network should b...')
                ListItem()   network-programming-guide.md:134   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('{max_connections, non_neg_intege...')   network-programming-guide.md:134   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('{max_connections, non_neg_intege...')
                          MixedStyledText('{max_connections, non_neg_intege...')
                            MixedStyledText('{max_connections, non_neg_intege...', style='monospaced')   network-programming-guide.md:134   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('{max_connections, non_neg_intege...')
                            SingleStyledText(' The maximum number of devices t...')
              Paragraph('The following example illustrate...')   network-programming-guide.md:136   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following example illustrate...')
                    MixedStyledText('The following example illustrate...')
                      SingleStyledText('The following example illustrate...')
                      MixedStyledText('myssid', style='monospaced')   network-programming-guide.md:136   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('myssid')
                      SingleStyledText(' and password ')
                      MixedStyledText('mypsk', style='monospaced')   network-programming-guide.md:136   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('mypsk')
                      SingleStyledText('.  Events that occur during the ...')
              CodeBlock('%% erlang\nConfig = [\n    {ap, [\n...')   network-programming-guide.md:138   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\nConfig = [\n    {ap, [\n...')
                    MixedStyledText('%% erlang\nConfig = [\n    {ap, [\n...')
                      Token('%% erlang\nConfig = [\n    {ap, [\n...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The following callback functions...')   network-programming-guide.md:152   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following callback functions...')
                    MixedStyledText('The following callback functions...')
                      SingleStyledText('The following callback functions...')
              CodeBlock('%% erlang\nap_started() ->\n    io...')   network-programming-guide.md:154   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('%% erlang\nap_started() ->\n    io...')
                    MixedStyledText('%% erlang\nap_started() ->\n    io...')
                      Token('%% erlang\nap_started() ->\n    io...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('48		Chapter 5.  Network Programm...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('48		Chapter 5.  Network Programm...')
          MixedStyledText('48		Chapter 5.  Network Programm...')
            Field('48')
              SingleStyledText('48')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('5')
              SingleStyledText('5')
            SingleStyledText('.  ')
            Field('Network Programming Guide')
              MixedStyledText('Network Programming Guide')
                MixedStyledText('Network Programming Guide')
                  SingleStyledText('Network Programming Guide')
---------------------------------- page 49 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          (continued) Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%network-programming-guide#ap-mode')   network-programming-guide.md:99   <section>
              (continued) CodeBlock('%% erlang\nap_started() ->\n    io...')   network-programming-guide.md:154   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
              Paragraph('In a typical application, the ne...')   network-programming-guide.md:167   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In a typical application, the ne...')
                    MixedStyledText('In a typical application, the ne...')
                      SingleStyledText('In a typical application, the ne...')
              Section(id='%network-programming-guide#id1')   network-programming-guide.md:169   <section>
                Heading('5.2.1 Convenience Functions')   network-programming-guide.md:169   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('5.2.1 ')
                      SingleStyledText('5.2.1')
                      SingleStyledText(' ')
                    MixedStyledText('Convenience Functions')
                      MixedStyledText('Convenience Functions')
                        SingleStyledText('Convenience Functions')
                Paragraph('The network module supports the ...')   network-programming-guide.md:171   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The network module supports the ...')
                      MixedStyledText('The network module supports the ...')
                        SingleStyledText('The ')
                        MixedStyledText('network', style='monospaced')   network-programming-guide.md:171   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('network')
                        SingleStyledText(' module supports the ')
                        MixedStyledText('network:wait_for_ap/1,2', style='monospaced')   network-programming-guide.md:171   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('network:wait_for_ap/1,2')
                        SingleStyledText(' convenience functions for appli...')
                        MixedStyledText('{ap, [...]}', style='monospaced')   network-programming-guide.md:171   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{ap, [...]}')
                        SingleStyledText(' component of the above configur...')
                Paragraph('For example:')   network-programming-guide.md:173   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example:')
                      MixedStyledText('For example:')
                        SingleStyledText('For example:')
                CodeBlock('%% erlang\nConfig = [\n    {psk,  ...')   network-programming-guide.md:175   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('%% erlang\nConfig = [\n    {psk,  ...')
                      MixedStyledText('%% erlang\nConfig = [\n    {psk,  ...')
                        Token('%% erlang\nConfig = [\n    {psk,  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%network-programming-guide#sta-ap-mode')   network-programming-guide.md:187   <section>
              Heading('5.3 STA+AP mode')   network-programming-guide.md:187   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.3 ')
                    SingleStyledText('5.3')
                    SingleStyledText(' ')
                  MixedStyledText('STA+AP mode')
                    MixedStyledText('STA+AP mode')
                      SingleStyledText('STA+AP mode')
              Paragraph('The network module can be starte...')   network-programming-guide.md:189   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The network module can be starte...')
                    MixedStyledText('The network module can be starte...')
                      SingleStyledText('The ')
                      MixedStyledText('network', style='monospaced')   network-programming-guide.md:189   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('network')
                      SingleStyledText(' module can be started in both S...')
              Paragraph('In order to enable both STA and ...')   network-programming-guide.md:191   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In order to enable both STA and ...')
                    MixedStyledText('In order to enable both STA and ...')
                      SingleStyledText('In order to enable both STA and ...')
                      MixedStyledText('network:start/1', style='monospaced')   network-programming-guide.md:191   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('network:start/1')
                      SingleStyledText(' function.')
            Section(id='%network-programming-guide#sntp-support')   network-programming-guide.md:193   <section>
              Heading('5.4 SNTP Support')   network-programming-guide.md:193   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.4 ')
                    SingleStyledText('5.4')
                    SingleStyledText(' ')
                  MixedStyledText('SNTP Support')
                    MixedStyledText('SNTP Support')
                      SingleStyledText('SNTP Support')
              Paragraph('You may configure the networking...')   network-programming-guide.md:195   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You may configure the networking...')
                    MixedStyledText('You may configure the networking...')
                      SingleStyledText('You may configure the networking...')
              Paragraph('To synchronize time with an NTP ...')   network-programming-guide.md:197   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('To synchronize time with an NTP ...')
                    MixedStyledText('To synchronize time with an NTP ...')
                      SingleStyledText('To synchronize time with an NTP ...')
                      MixedStyledText('sntp', style='monospaced')   network-programming-guide.md:197   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('sntp')
                      SingleStyledText(' at the top level configuration ...')
                      MixedStyledText('network:start/1', style='monospaced')   network-programming-guide.md:197   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('network:start/1')
                      SingleStyledText(' function.  Specify the NTP host...')
                      MixedStyledText('endpoint', style='monospaced')   network-programming-guide.md:197   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('endpoint')
                      SingleStyledText(' property tag, e.g.,')
              CodeBlock('{sntp, [{endpoint, <<"pool.ntp.o...')   network-programming-guide.md:199   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('{sntp, [{endpoint, <<"pool.ntp.o...')
                    MixedStyledText('{sntp, [{endpoint, <<"pool.ntp.o...')
                      Token('{sntp, [{endpoint, <<"pool.ntp.o...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The endpoint value can be a stri...')   network-programming-guide.md:201   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The endpoint value can be a stri...')
                    MixedStyledText('The endpoint value can be a stri...')
                      SingleStyledText('The endpoint value can be a stri...')
            Section(id='%network-programming-guide#nvs-credentials')   network-programming-guide.md:203   <section>
              Heading('5.5 NVS Credentials')   network-programming-guide.md:203   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.5 ')
                    SingleStyledText('5.5')
                    SingleStyledText(' ')
                  MixedStyledText('NVS Credentials')
                    MixedStyledText('NVS Credentials')
                      SingleStyledText('NVS Credentials')
              Paragraph('It can become tiresome to enter ...')   network-programming-guide.md:205   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('It can become tiresome to enter ...')
                    MixedStyledText('It can become tiresome to enter ...')
                      SingleStyledText('It can become tiresome to enter ...')
              Paragraph('You may instead store an STA or ...')   network-programming-guide.md:207   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You may instead store an STA or ...')
                    MixedStyledText('You may instead store an STA or ...')
                      SingleStyledText('You may instead store an STA or ...')
                      MixedStyledText('atomvm', style='monospaced')   network-programming-guide.md:207   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('atomvm')
                      SingleStyledText(' namespace.  The following entri...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('5.3.  STA+AP mode		49')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('5.3.  STA+AP mode		49')
          MixedStyledText('5.3.  STA+AP mode		49')
            Field('5.3')
              SingleStyledText('5.3')
            SingleStyledText('.  ')
            Field('STA+AP mode')
              MixedStyledText('STA+AP mode')
                MixedStyledText('STA+AP mode')
                  SingleStyledText('STA+AP mode')
            Tab('	')
            Tab('	')
            Field('49')
              SingleStyledText('49')
---------------------------------- page 50 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%network-programming-guide')   <start_of_file>
          (continued) Section(id='%network-programming-guide#network-programming-guide')   network-programming-guide.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%network-programming-guide#nvs-credentials')   network-programming-guide.md:203   <section>
              (continued) Paragraph('You may instead store an STA or ...')   network-programming-guide.md:207   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
              Table()   network-programming-guide.md:209   <table>
                   > (0,0,0,0,2) table [Sphinx] > DEFAULT
                TableHead()
                  TableRow()
                    TableCell()   network-programming-guide.md   <entry>
                         x (0,0,0,0,8) table head cell
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('namespace')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('namespace')
                            MixedStyledText('namespace')
                              SingleStyledText('namespace')
                      TableCellBackground()
                           x (0,0,0,0,10) table head cell background
                    TableCell()   network-programming-guide.md   <entry>
                         x (0,0,0,0,8) table head cell
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('mode')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('mode')
                            MixedStyledText('mode')
                              SingleStyledText('mode')
                      TableCellBackground()
                           x (0,0,0,0,10) table head cell background
                    TableCell()   network-programming-guide.md   <entry>
                         x (0,0,0,0,8) table head cell
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('key')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('key')
                            MixedStyledText('key')
                              SingleStyledText('key')
                      TableCellBackground()
                           x (0,0,0,0,10) table head cell background
                    TableCell()   network-programming-guide.md   <entry>
                         x (0,0,0,0,8) table head cell
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('type')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('type')
                            MixedStyledText('type')
                              SingleStyledText('type')
                      TableCellBackground()
                           x (0,0,0,0,10) table head cell background
                    TableCell()   network-programming-guide.md   <entry>
                         x (0,0,0,0,8) table head cell
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('value')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('value')
                            MixedStyledText('value')
                              SingleStyledText('value')
                      TableCellBackground()
                           x (0,0,0,0,10) table head cell background
                TableBody()
                  TableRow()
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('atomvm')   network-programming-guide.md   <paragraph>
                           > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atomvm')
                            MixedStyledText('atomvm')
                              MixedStyledText('atomvm', style='monospaced')   network-programming-guide.md:211   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('atomvm')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('STA')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('STA')
                            MixedStyledText('STA')
                              SingleStyledText('STA')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('sta_ssid')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sta_ssid')
                            MixedStyledText('sta_ssid')
                              MixedStyledText('sta_ssid', style='monospaced')   network-programming-guide.md:211   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('sta_ssid')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('binary()')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('binary()')
                            MixedStyledText('binary()')
                              MixedStyledText('binary()', style='monospaced')   network-programming-guide.md:211   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('binary()')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('Station ID')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Station ID')
                            MixedStyledText('Station ID')
                              SingleStyledText('Station ID')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                  TableRow()
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('atomvm')   network-programming-guide.md   <paragraph>
                           > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atomvm')
                            MixedStyledText('atomvm')
                              MixedStyledText('atomvm', style='monospaced')   network-programming-guide.md:212   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('atomvm')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('STA')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('STA')
                            MixedStyledText('STA')
                              SingleStyledText('STA')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('sta_psk')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('sta_psk')
                            MixedStyledText('sta_psk')
                              MixedStyledText('sta_psk', style='monospaced')   network-programming-guide.md:212   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('sta_psk')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('binary()')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('binary()')
                            MixedStyledText('binary()')
                              MixedStyledText('binary()', style='monospaced')   network-programming-guide.md:212   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('binary()')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('Station password (if applicable)')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Station password (if applicable)')
                            MixedStyledText('Station password (if applicable)')
                              SingleStyledText('Station password (if applicable)')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                  TableRow()
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('atomvm')   network-programming-guide.md   <paragraph>
                           > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atomvm')
                            MixedStyledText('atomvm')
                              MixedStyledText('atomvm', style='monospaced')   network-programming-guide.md:213   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('atomvm')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('AP')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AP')
                            MixedStyledText('AP')
                              SingleStyledText('AP')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('ap_ssid')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ap_ssid')
                            MixedStyledText('ap_ssid')
                              MixedStyledText('ap_ssid', style='monospaced')   network-programming-guide.md:213   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('ap_ssid')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('binary()')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('binary()')
                            MixedStyledText('binary()')
                              MixedStyledText('binary()', style='monospaced')   network-programming-guide.md:213   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('binary()')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('Access Point ID')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Access Point ID')
                            MixedStyledText('Access Point ID')
                              SingleStyledText('Access Point ID')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on odd row
                  TableRow()
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('atomvm')   network-programming-guide.md   <paragraph>
                           > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                             (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('atomvm')
                            MixedStyledText('atomvm')
                              MixedStyledText('atomvm', style='monospaced')   network-programming-guide.md:214   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('atomvm')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('AP')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AP')
                            MixedStyledText('AP')
                              SingleStyledText('AP')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('ap_psk')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ap_psk')
                            MixedStyledText('ap_psk')
                              MixedStyledText('ap_psk', style='monospaced')   network-programming-guide.md:214   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('ap_psk')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('binary()')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('binary()')
                            MixedStyledText('binary()')
                              MixedStyledText('binary()', style='monospaced')   network-programming-guide.md:214   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('binary()')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
                    TableCell()   network-programming-guide.md   <entry>
                         > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                      Paragraph('Access Point password (if applic...')   network-programming-guide.md   <paragraph>
                           > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Access Point password (if applic...')
                            MixedStyledText('Access Point password (if applic...')
                              SingleStyledText('Access Point password (if applic...')
                      TableCellBackground()
                           x (0,0,0,2,8) table body cell background on even row
              Paragraph('If set in NVS storage, you may r...')   network-programming-guide.md:216   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('If set in NVS storage, you may r...')
                    MixedStyledText('If set in NVS storage, you may r...')
                      SingleStyledText('If set in NVS storage, you may r...')
                      MixedStyledText('ssid', style='monospaced')   network-programming-guide.md:216   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('ssid')
                      SingleStyledText(' and ')
                      MixedStyledText('psk', style='monospaced')   network-programming-guide.md:216   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('psk')
                      SingleStyledText(' parameters from the configurati...')
              Paragraph('You can set these credentials on...')   network-programming-guide.md:218   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('You can set these credentials on...')
                    MixedStyledText('You can set these credentials on...')
                      SingleStyledText('You can set these credentials on...')
              CodeBlock('esp:nvs_set_binary(atomvm, sta_s...')   network-programming-guide.md:220   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('esp:nvs_set_binary(atomvm, sta_s...')
                    MixedStyledText('esp:nvs_set_binary(atomvm, sta_s...')
                      Token('esp:nvs_set_binary(atomvm, sta_s...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('or')   network-programming-guide.md:223   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('or')
                    MixedStyledText('or')
                      SingleStyledText('or')
              CodeBlock('esp:nvs_set_binary(atomvm, ap_ss...')   network-programming-guide.md:225   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('esp:nvs_set_binary(atomvm, ap_ss...')
                    MixedStyledText('esp:nvs_set_binary(atomvm, ap_ss...')
                      Token('esp:nvs_set_binary(atomvm, ap_ss...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('With these settings, you can run...')   network-programming-guide.md:228   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('With these settings, you can run...')
                    MixedStyledText('With these settings, you can run...')
                      SingleStyledText('With these settings, you can run...')
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:230   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  Credentials are stored un...')   network-programming-guide.md:230   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  Credentials are stored un...')
                      MixedStyledText('Note.  Credentials are stored un...')
                        SingleStyledText('Note.  Credentials are stored un...')
            Section(id='%network-programming-guide#stopping-the-network')   network-programming-guide.md:232   <section>
              Heading('5.6 Stopping the Network')   network-programming-guide.md:232   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.6 ')
                    SingleStyledText('5.6')
                    SingleStyledText(' ')
                  MixedStyledText('Stopping the Network')
                    MixedStyledText('Stopping the Network')
                      SingleStyledText('Stopping the Network')
              Paragraph('To stop the network and free any...')   network-programming-guide.md:234   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('To stop the network and free any...')
                    MixedStyledText('To stop the network and free any...')
                      SingleStyledText('To stop the network and free any...')
                      MixedStyledText('stop/0', style='monospaced')   network-programming-guide.md:234   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('stop/0')
                      SingleStyledText(' function:')
              CodeBlock('network:stop().\n')   network-programming-guide.md:236   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('network:stop().\n')
                    MixedStyledText('network:stop().\n')
                      Token('network:stop().\n', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              StaticGroupedFlowables(style='block quote')   network-programming-guide.md:238   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  This function is currentl...')   network-programming-guide.md:238   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  This function is currentl...')
                      MixedStyledText('Note.  This function is currentl...')
                        SingleStyledText('Note.  This function is currentl...')
        StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('50		Chapter 5.  Network Programm...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('50		Chapter 5.  Network Programm...')
          MixedStyledText('50		Chapter 5.  Network Programm...')
            Field('50')
              SingleStyledText('50')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('5')
              SingleStyledText('5')
            SingleStyledText('.  ')
            Field('Network Programming Guide')
              MixedStyledText('Network Programming Guide')
                MixedStyledText('Network Programming Guide')
                  SingleStyledText('Network Programming Guide')
---------------------------------- page 51 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 6', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 6')
        MixedStyledText('Chapter 6')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('6', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('6')
  Paragraph('Build Instructions', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Build Instructions')
        MixedStyledText('Build Instructions')
          MixedStyledText('Build Instructions')
            SingleStyledText('Build Instructions')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('This guide is intended for anyon...')   build-instructions.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This guide is intended for anyon...')
                  MixedStyledText('This guide is intended for anyon...')
                    SingleStyledText('This guide is intended for anyon...')
            Paragraph('The AtomVM virtual machine itsel...')   build-instructions.md:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The AtomVM virtual machine itsel...')
                  MixedStyledText('The AtomVM virtual machine itsel...')
                    SingleStyledText('The AtomVM virtual machine itsel...')
            Paragraph('The native C parts of AtomVM com...')   build-instructions.md:13   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The native C parts of AtomVM com...')
                  MixedStyledText('The native C parts of AtomVM com...')
                    SingleStyledText('The native C parts of AtomVM com...')
            Paragraph('The Erlang and Elixir parts are ...')   build-instructions.md:15   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The Erlang and Elixir parts are ...')
                  MixedStyledText('The Erlang and Elixir parts are ...')
                    SingleStyledText('The Erlang and Elixir parts are ...')
                    MixedStyledText('erlc', style='monospaced')   build-instructions.md:15   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('erlc')
                    SingleStyledText(') and Elixir compilers.  Current...')
            Paragraph('This guide provides information ...')   build-instructions.md:17   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This guide provides information ...')
                  MixedStyledText('This guide provides information ...')
                    SingleStyledText('This guide provides information ...')
            StaticGroupedFlowables(style='block quote')   build-instructions.md:19   <block_quote>
                 > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
              Paragraph('Note.  In order to build AtomVM ...')   build-instructions.md:19   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Note.  In order to build AtomVM ...')
                    MixedStyledText('Note.  In order to build AtomVM ...')
                      SingleStyledText('Note.  In order to build AtomVM ...')
            Section(id='%build-instructions#downloading-atomvm')   build-instructions.md:21   <section>
              Heading('6.1 Downloading AtomVM')   build-instructions.md:21   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.1 ')
                    SingleStyledText('6.1')
                    SingleStyledText(' ')
                  MixedStyledText('Downloading AtomVM')
                    MixedStyledText('Downloading AtomVM')
                      SingleStyledText('Downloading AtomVM')
              Paragraph('The AtomVM source code is availa...')   build-instructions.md:23   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The AtomVM source code is availa...')
                    MixedStyledText('The AtomVM source code is availa...')
                      SingleStyledText('The AtomVM source code is availa...')
              CodeBlock('shell$ git clone https://github....')   build-instructions.md:25   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('shell$ git clone https://github....')
                    MixedStyledText('shell$ git clone https://github....')
                      Token('shell$ git clone https://github....', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              StaticGroupedFlowables(style='block quote')   build-instructions.md:27   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  Downloading the AtomVM gi...')   build-instructions.md:27   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  Downloading the AtomVM gi...')
                      MixedStyledText('Note.  Downloading the AtomVM gi...')
                        SingleStyledText('Note.  Downloading the AtomVM gi...')
                        MixedStyledText('git', style='monospaced')   build-instructions.md:27   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('git')
                        SingleStyledText(' program.  Consult your local OS...')
                        MixedStyledText('git', style='monospaced')   build-instructions.md:27   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('git')
                        SingleStyledText(' package.')
            Section(id='%build-instructions#source-code-organization')   build-instructions.md:29   <section>
              Heading('6.2 Source code organization')   build-instructions.md:29   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.2 ')
                    SingleStyledText('6.2')
                    SingleStyledText(' ')
                  MixedStyledText('Source code organization')
                    MixedStyledText('Source code organization')
                      SingleStyledText('Source code organization')
              Paragraph('Source code is organized as foll...')   build-instructions.md:31   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Source code is organized as foll...')
                    MixedStyledText('Source code is organized as foll...')
                      SingleStyledText('Source code is organized as foll...')
              List(style='bulleted')   build-instructions.md:33   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   build-instructions.md:33   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('src  Contains the core AtomVM vi...')   build-instructions.md:33   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('src  Contains the core AtomVM vi...')
                          MixedStyledText('src  Contains the core AtomVM vi...')
                            MixedStyledText('src', style='monospaced')   build-instructions.md:33   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('src')
                            SingleStyledText('  Contains the core AtomVM virtu...')
                ListItem()   build-instructions.md:34   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('lib  Contains the Erlang and Eli...')   build-instructions.md:34   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('lib  Contains the Erlang and Eli...')
                          MixedStyledText('lib  Contains the Erlang and Eli...')
                            MixedStyledText('lib', style='monospaced')   build-instructions.md:34   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('lib')
                            SingleStyledText('  Contains the Erlang and Elixir...')
                ListItem()   build-instructions.md:35   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('tools Contains AtomVM tooling, i...')   build-instructions.md:35   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('tools Contains AtomVM tooling, i...')
                          MixedStyledText('tools Contains AtomVM tooling, i...')
                            MixedStyledText('tools', style='monospaced')   build-instructions.md:35   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('tools')
                            SingleStyledText(' Contains AtomVM tooling, includ...')
                            MixedStyledText('PackBEAM', style='monospaced')   build-instructions.md:35   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('PackBEAM')
                            SingleStyledText(' executable, as well as build su...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		51')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		51')
          MixedStyledText('		51')
            Tab('	')
            Tab('	')
            Field('51')
              SingleStyledText('51')
---------------------------------- page 52 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#source-code-organization')   build-instructions.md:29   <section>
              (continued) List(style='bulleted')   build-instructions.md:33   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   build-instructions.md:36   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('examples Contains sample program...')   build-instructions.md:36   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('examples Contains sample program...')
                          MixedStyledText('examples Contains sample program...')
                            MixedStyledText('examples', style='monospaced')   build-instructions.md:36   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('examples')
                            SingleStyledText(' Contains sample programs for de...')
                ListItem()   build-instructions.md:37   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('tests Contains test code run as ...')   build-instructions.md:37   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('tests Contains test code run as ...')
                          MixedStyledText('tests Contains test code run as ...')
                            MixedStyledText('tests', style='monospaced')   build-instructions.md:37   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('tests')
                            SingleStyledText(' Contains test code run as part ...')
                ListItem()   build-instructions.md:38   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('doc Contains documentation sourc...')   build-instructions.md:38   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('doc Contains documentation sourc...')
                          MixedStyledText('doc Contains documentation sourc...')
                            MixedStyledText('doc', style='monospaced')   build-instructions.md:38   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('doc')
                            SingleStyledText(' Contains documentation source c...')
              Paragraph('The src directory is broken up i...')   build-instructions.md:40   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The src directory is broken up i...')
                    MixedStyledText('The src directory is broken up i...')
                      SingleStyledText('The ')
                      MixedStyledText('src', style='monospaced')   build-instructions.md:40   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('src')
                      SingleStyledText(' directory is broken up into the...')
                      MixedStyledText('libAtomVM', style='monospaced')   build-instructions.md:40   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('libAtomVM')
                      SingleStyledText('), and platform-dependent code f...')
              Paragraph('For information about porting to...')   build-instructions.md:42   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('For information about porting to...')
                    MixedStyledText('For information about porting to...')
                      SingleStyledText('For information about porting to...')
                      MixedStyledText('Porting to new platforms', style='external link')   build-instructions.md:42   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Porting to new platforms')
                      SingleStyledText(', below.')
            Section(id='%build-instructions#building-for-generic-unix')   build-instructions.md:44   <section>
              Heading('6.3 Building for Generic UNIX')   build-instructions.md:44   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.3 ')
                    SingleStyledText('6.3')
                    SingleStyledText(' ')
                  MixedStyledText('Building for Generic UNIX')
                    MixedStyledText('Building for Generic UNIX')
                      SingleStyledText('Building for Generic UNIX')
              Paragraph('The following instructions apply...')   build-instructions.md:46   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following instructions apply...')
                    MixedStyledText('The following instructions apply...')
                      SingleStyledText('The following instructions apply...')
              StaticGroupedFlowables(style='block quote')   build-instructions.md:48   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  The Generic UNIX is usefu...')   build-instructions.md:48   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  The Generic UNIX is usefu...')
                      MixedStyledText('Note.  The Generic UNIX is usefu...')
                        SingleStyledText('Note.  The Generic UNIX is usefu...')
              Section(id='%build-instructions#build-requirements')   build-instructions.md:50   <section>
                Heading('6.3.1 Build Requirements')   build-instructions.md:50   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.3.1 ')
                      SingleStyledText('6.3.1')
                      SingleStyledText(' ')
                    MixedStyledText('Build Requirements')
                      MixedStyledText('Build Requirements')
                        SingleStyledText('Build Requirements')
                Paragraph('The following software is requir...')   build-instructions.md:52   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following software is requir...')
                      MixedStyledText('The following software is requir...')
                        SingleStyledText('The following software is requir...')
                List(style='bulleted')   build-instructions.md:54   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   build-instructions.md:54   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('gcc or llvm tool chains')   build-instructions.md:54   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('gcc or llvm tool chains')
                            MixedStyledText('gcc or llvm tool chains')
                              MixedStyledText('gcc', style='monospaced')   build-instructions.md:54   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('gcc')
                              SingleStyledText(' or ')
                              MixedStyledText('llvm', style='monospaced')   build-instructions.md:54   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('llvm')
                              SingleStyledText(' tool chains')
                  ListItem()   build-instructions.md:55   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('cmake')   build-instructions.md:55   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('cmake')
                            MixedStyledText('cmake')
                              MixedStyledText('cmake', style='monospaced')   build-instructions.md:55   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('cmake')
                  ListItem()   build-instructions.md:56   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('make')   build-instructions.md:56   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('make')
                            MixedStyledText('make')
                              MixedStyledText('make', style='monospaced')   build-instructions.md:56   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('make')
                  ListItem()   build-instructions.md:57   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('gperf')   build-instructions.md:57   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('gperf')
                            MixedStyledText('gperf')
                              MixedStyledText('gperf', style='monospaced')   build-instructions.md:57   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('gperf')
                  ListItem()   build-instructions.md:58   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('zlib')   build-instructions.md:58   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('zlib')
                            MixedStyledText('zlib')
                              MixedStyledText('zlib', style='monospaced')   build-instructions.md:58   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('zlib')
                  ListItem()   build-instructions.md:59   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Erlang/OTP 21')   build-instructions.md:59   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Erlang/OTP 21')
                            MixedStyledText('Erlang/OTP 21')
                              SingleStyledText('Erlang/OTP 21')
                Paragraph('Consult your local OS documentat...')   build-instructions.md:61   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Consult your local OS documentat...')
                      MixedStyledText('Consult your local OS documentat...')
                        SingleStyledText('Consult your local OS documentat...')
              Section(id='%build-instructions#id1')   build-instructions.md:63   <section>
                Heading('6.3.2 Build Instructions')   build-instructions.md:63   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.3.2 ')
                      SingleStyledText('6.3.2')
                      SingleStyledText(' ')
                    MixedStyledText('Build Instructions')
                      MixedStyledText('Build Instructions')
                        SingleStyledText('Build Instructions')
                Paragraph('The AtomVM build for generic UNI...')   build-instructions.md:65   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM build for generic UNI...')
                      MixedStyledText('The AtomVM build for generic UNI...')
                        SingleStyledText('The AtomVM build for generic UNI...')
                        MixedStyledText('cmake', style='monospaced')   build-instructions.md:65   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('cmake')
                        SingleStyledText(' tool for generating ')
                        MixedStyledText('make', style='monospaced')   build-instructions.md:65   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('make')
                        SingleStyledText(' files from the top level AtomVM...')
                        MixedStyledText('build', style='monospaced')   build-instructions.md:65   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('build')
                        SingleStyledText(' directory, and then point ')
                        MixedStyledText('cmake', style='monospaced')   build-instructions.md:65   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('cmake')
                        SingleStyledText(' to the parent directory for the...')
                CodeBlock('shell$ mkdir build\nshell$ cd bui...')   build-instructions.md:67   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ mkdir build\nshell$ cd bui...')
                      MixedStyledText('shell$ mkdir build\nshell$ cd bui...')
                        Token('shell$ mkdir build\nshell$ cd bui...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('This command will create all of ...')   build-instructions.md:72   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This command will create all of ...')
                      MixedStyledText('This command will create all of ...')
                        SingleStyledText('This command will create all of ...')
                        MixedStyledText('make', style='monospaced')   build-instructions.md:72   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('make')
                        SingleStyledText(' command:')
                CodeBlock('shell$ make -j 8\n...\n')   build-instructions.md:74   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make -j 8\n...\n')
                      MixedStyledText('shell$ make -j 8\n...\n')
                        Token('shell$ make -j 8\n...\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   build-instructions.md:77   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  You may specify -j <n>, w...')   build-instructions.md:77   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  You may specify -j <n>, w...')
                        MixedStyledText('Note.  You may specify -j <n>, w...')
                          SingleStyledText('Note.  You may specify ')
                          MixedStyledText('-j <n>', style='monospaced')   build-instructions.md:77   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('-j <n>')
                          SingleStyledText(', where ')
                          MixedStyledText('<n>', style='monospaced')   build-instructions.md:77   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<n>')
                          SingleStyledText(' is the number of CPUs you would...')
                Paragraph('Upon completion, the AtomVM exec...')   build-instructions.md:79   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Upon completion, the AtomVM exec...')
                      MixedStyledText('Upon completion, the AtomVM exec...')
                        SingleStyledText('Upon completion, the ')
                        MixedStyledText('AtomVM', style='monospaced')   build-instructions.md:79   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('AtomVM')
                        SingleStyledText(' executable can be found in the ')
                        MixedStyledText('build/src', style='monospaced')   build-instructions.md:79   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('build/src')
                        SingleStyledText(' directory.')
                Paragraph('The AtomVM core Erlang library c...')   build-instructions.md:81   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM core Erlang library c...')
                      MixedStyledText('The AtomVM core Erlang library c...')
                        SingleStyledText('The AtomVM core Erlang library c...')
                        MixedStyledText('libs/atomvmlib.avm', style='monospaced')   build-instructions.md:81   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('libs/atomvmlib.avm')
                        SingleStyledText(' AVM file.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('52		Chapter 6.  Build Instructio...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('52		Chapter 6.  Build Instructio...')
          MixedStyledText('52		Chapter 6.  Build Instructio...')
            Field('52')
              SingleStyledText('52')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('Build Instructions')
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
---------------------------------- page 53 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-generic-unix')   build-instructions.md:44   <section>
              (continued) Section(id='%build-instructions#id1')   build-instructions.md:63   <section>
                Section(id='%build-instructions#special-note-for-macos-users')   build-instructions.md:83   <section>
                  Heading('Special Note for MacOS users')   build-instructions.md:83   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Special Note for MacOS users')
                        MixedStyledText('Special Note for MacOS users')
                          SingleStyledText('Special Note for MacOS users')
                  Paragraph('You may build an Apple Xcode pro...')   build-instructions.md:85   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('You may build an Apple Xcode pro...')
                        MixedStyledText('You may build an Apple Xcode pro...')
                          SingleStyledText('You may build an Apple Xcode pro...')
                  CodeBlock('shell$ mkdir xcode\nshell$ cmake ...')   build-instructions.md:87   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('shell$ mkdir xcode\nshell$ cmake ...')
                        MixedStyledText('shell$ mkdir xcode\nshell$ cmake ...')
                          Token('shell$ mkdir xcode\nshell$ cmake ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('The above commands will build an...')   build-instructions.md:92   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The above commands will build an...')
                        MixedStyledText('The above commands will build an...')
                          SingleStyledText('The above commands will build an...')
              Section(id='%build-instructions#running-tests')   build-instructions.md:94   <section>
                Heading('6.3.3 Running tests')   build-instructions.md:94   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.3.3 ')
                      SingleStyledText('6.3.3')
                      SingleStyledText(' ')
                    MixedStyledText('Running tests')
                      MixedStyledText('Running tests')
                        SingleStyledText('Running tests')
                Paragraph('There are currently two sets of ...')   build-instructions.md:96   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('There are currently two sets of ...')
                      MixedStyledText('There are currently two sets of ...')
                        SingleStyledText('There are currently two sets of ...')
                List(style='bulleted')   build-instructions.md:98   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   build-instructions.md:98   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Erlang tests (erlang_tests) A se...')   build-instructions.md:98   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Erlang tests (erlang_tests) A se...')
                            MixedStyledText('Erlang tests (erlang_tests) A se...')
                              SingleStyledText('Erlang tests (')
                              MixedStyledText('erlang_tests', style='monospaced')   build-instructions.md:98   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('erlang_tests')
                              SingleStyledText(') A set of unit tests for basic ...')
                  ListItem()   build-instructions.md:99   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Library tests, exercising functi...')   build-instructions.md:99   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Library tests, exercising functi...')
                            MixedStyledText('Library tests, exercising functi...')
                              SingleStyledText('Library tests, exercising functi...')
                Paragraph('To run the Erlang tests, run the...')   build-instructions.md:101   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To run the Erlang tests, run the...')
                      MixedStyledText('To run the Erlang tests, run the...')
                        SingleStyledText('To run the Erlang tests, run the...')
                        MixedStyledText('test-erlang', style='monospaced')   build-instructions.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('test-erlang')
                        SingleStyledText(' executable in the ')
                        MixedStyledText('tests', style='monospaced')   build-instructions.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tests')
                        SingleStyledText(' directory:')
                CodeBlock('shell$ ./tests/test-erlang\n')   build-instructions.md:103   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tests/test-erlang\n')
                      MixedStyledText('shell$ ./tests/test-erlang\n')
                        Token('shell$ ./tests/test-erlang\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('This will run a suite of several...')   build-instructions.md:105   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This will run a suite of several...')
                      MixedStyledText('This will run a suite of several...')
                        SingleStyledText('This will run a suite of several...')
                Paragraph('To run the Library tests, run th...')   build-instructions.md:107   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To run the Library tests, run th...')
                      MixedStyledText('To run the Library tests, run th...')
                        SingleStyledText('To run the Library tests, run th...')
                        MixedStyledText('tests/libs', style='monospaced')   build-instructions.md:107   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('tests/libs')
                        SingleStyledText(' directory using the ')
                        MixedStyledText('AtomVM', style='monospaced')   build-instructions.md:107   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('AtomVM')
                        SingleStyledText(' executable.  For example:')
                CodeBlock('shell$ ./src/AtomVM ./tests/libs...')   build-instructions.md:109   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./src/AtomVM ./tests/libs...')
                      MixedStyledText('shell$ ./src/AtomVM ./tests/libs...')
                        Token('shell$ ./src/AtomVM ./tests/libs...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('This will run a suite of several...')   build-instructions.md:111   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This will run a suite of several...')
                      MixedStyledText('This will run a suite of several...')
                        SingleStyledText('This will run a suite of several...')
                Paragraph('Tests for the following librarie...')   build-instructions.md:113   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Tests for the following librarie...')
                      MixedStyledText('Tests for the following librarie...')
                        SingleStyledText('Tests for the following librarie...')
                List(style='bulleted')   build-instructions.md:115   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   build-instructions.md:115   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('estdlib')   build-instructions.md:115   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('estdlib')
                            MixedStyledText('estdlib')
                              MixedStyledText('estdlib', style='monospaced')   build-instructions.md:115   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('estdlib')
                  ListItem()   build-instructions.md:116   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('eavmlib')   build-instructions.md:116   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('eavmlib')
                            MixedStyledText('eavmlib')
                              MixedStyledText('eavmlib', style='monospaced')   build-instructions.md:116   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('eavmlib')
                  ListItem()   build-instructions.md:117   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('alisp')   build-instructions.md:117   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('alisp')
                            MixedStyledText('alisp')
                              MixedStyledText('alisp', style='monospaced')   build-instructions.md:117   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('alisp')
            Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              Heading('6.4 Building for ESP32')   build-instructions.md:119   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.4 ')
                    SingleStyledText('6.4')
                    SingleStyledText(' ')
                  MixedStyledText('Building for ESP32')
                    MixedStyledText('Building for ESP32')
                      SingleStyledText('Building for ESP32')
              Paragraph('Building AtomVM for ESP32 must b...')   build-instructions.md:121   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Building AtomVM for ESP32 must b...')
                    MixedStyledText('Building AtomVM for ESP32 must b...')
                      SingleStyledText('Building AtomVM for ESP32 must b...')
              Paragraph('In order to build a complete Ato...')   build-instructions.md:123   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In order to build a complete Ato...')
                    MixedStyledText('In order to build a complete Ato...')
                      SingleStyledText('In order to build a complete Ato...')
              Section(id='%build-instructions#id2')   build-instructions.md:125   <section>
                Heading('6.4.1 Build Requirements')   build-instructions.md:125   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.1 ')
                      SingleStyledText('6.4.1')
                      SingleStyledText(' ')
                    MixedStyledText('Build Requirements')
                      MixedStyledText('Build Requirements')
                        SingleStyledText('Build Requirements')
                Paragraph('The following software is requir...')   build-instructions.md:127   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following software is requir...')
                      MixedStyledText('The following software is requir...')
                        SingleStyledText('The following software is requir...')
                List(style='bulleted')   build-instructions.md:129   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   build-instructions.md:129   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Espressif Xtensa tool chains')   build-instructions.md:129   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Espressif Xtensa tool chains')
                            MixedStyledText('Espressif Xtensa tool chains')
                              SingleStyledText('Espressif Xtensa tool chains')
                  ListItem()   build-instructions.md:130   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Espressif IDF SDK version 3.x (4...')   build-instructions.md:130   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Espressif IDF SDK version 3.x (4...')
                            MixedStyledText('Espressif IDF SDK version 3.x (4...')
                              MixedStyledText('Espressif IDF SDK', style='external link')   build-instructions.md:130   <reference>
                                   > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                SingleStyledText('Espressif IDF SDK')
                              SingleStyledText(' version 3.x (4.x support is cur...')
                              MixedStyledText('experimental', style='emphasis')   build-instructions.md:130   <emphasis>
                                   > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                                SingleStyledText('experimental')
                              SingleStyledText(')')
                  ListItem()   build-instructions.md:131   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('cmake')   build-instructions.md:131   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('cmake')
                            MixedStyledText('cmake')
                              MixedStyledText('cmake', style='monospaced')   build-instructions.md:131   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('cmake')
                  ListItem()   build-instructions.md:132   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('GNU make')   build-instructions.md:132   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('GNU make')
                            MixedStyledText('GNU make')
                              SingleStyledText('GNU ')
                              MixedStyledText('make', style='monospaced')   build-instructions.md:132   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('make')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6.4.  Building for ESP32		53')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6.4.  Building for ESP32		53')
          MixedStyledText('6.4.  Building for ESP32		53')
            Field('6.4')
              SingleStyledText('6.4')
            SingleStyledText('.  ')
            Field('Building for ESP32')
              MixedStyledText('Building for ESP32')
                MixedStyledText('Building for ESP32')
                  SingleStyledText('Building for ESP32')
            Tab('	')
            Tab('	')
            Field('53')
              SingleStyledText('53')
---------------------------------- page 54 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#id2')   build-instructions.md:125   <section>
                Paragraph('Instructions for downloading and...')   build-instructions.md:134   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
              Section(id='%build-instructions#id3')   build-instructions.md:136   <section>
                Heading('6.4.2 Build Instructions')   build-instructions.md:136   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.2 ')
                      SingleStyledText('6.4.2')
                      SingleStyledText(' ')
                    MixedStyledText('Build Instructions')
                      MixedStyledText('Build Instructions')
                        SingleStyledText('Build Instructions')
                Paragraph('Change directories to the src/pl...')   build-instructions.md:138   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Change directories to the src/pl...')
                      MixedStyledText('Change directories to the src/pl...')
                        SingleStyledText('Change directories to the ')
                        MixedStyledText('src/platforms/esp32', style='monospaced')   build-instructions.md:138   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('src/platforms/esp32')
                        SingleStyledText(' directory under the AtomVM sour...')
                CodeBlock('shell$ cd <atomvm-source-tree-ro...')   build-instructions.md:140   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ cd <atomvm-source-tree-ro...')
                      MixedStyledText('shell$ cd <atomvm-source-tree-ro...')
                        Token('shell$ cd <atomvm-source-tree-ro...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Start by updating the configurat...')   build-instructions.md:143   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Start by updating the configurat...')
                      MixedStyledText('Start by updating the configurat...')
                        SingleStyledText('Start by updating the configurat...')
                        MixedStyledText('sdkconfig', style='monospaced')   build-instructions.md:143   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('sdkconfig')
                        SingleStyledText(' file via the ')
                        MixedStyledText('menuconfig', style='monospaced')   build-instructions.md:143   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('menuconfig')
                        SingleStyledText(' Make target:')
                CodeBlock('shell$ make menuconfig\n')   build-instructions.md:145   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make menuconfig\n')
                      MixedStyledText('shell$ make menuconfig\n')
                        Token('shell$ make menuconfig\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('This command will bring up a cur...')   build-instructions.md:147   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This command will bring up a cur...')
                      MixedStyledText('This command will bring up a cur...')
                        SingleStyledText('This command will bring up a cur...')
                        MixedStyledText('E', style='monospaced')   build-instructions.md:147   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('E')
                        SingleStyledText('.  Save the changes, and the pro...')
                Paragraph('You can now build AtomvVM using ...')   build-instructions.md:149   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can now build AtomvVM using ...')
                      MixedStyledText('You can now build AtomvVM using ...')
                        SingleStyledText('You can now build AtomvVM using ...')
                        MixedStyledText('make', style='monospaced')   build-instructions.md:149   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('make')
                        SingleStyledText(' command:')
                CodeBlock('shell$ make -j 8\n...\n')   build-instructions.md:151   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ make -j 8\n...\n')
                      MixedStyledText('shell$ make -j 8\n...\n')
                        Token('shell$ make -j 8\n...\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   build-instructions.md:154   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  You may specify -j <n>, w...')   build-instructions.md:154   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  You may specify -j <n>, w...')
                        MixedStyledText('Note.  You may specify -j <n>, w...')
                          SingleStyledText('Note.  You may specify ')
                          MixedStyledText('-j <n>', style='monospaced')   build-instructions.md:154   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('-j <n>')
                          SingleStyledText(', where ')
                          MixedStyledText('<n>', style='monospaced')   build-instructions.md:154   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<n>')
                          SingleStyledText(' is the number of CPUs you would...')
                Paragraph('This command, once completed, wi...')   build-instructions.md:156   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This command, once completed, wi...')
                      MixedStyledText('This command, once completed, wi...')
                        SingleStyledText('This command, once completed, wi...')
                CodeBlock('To flash all build output, run '...')   build-instructions.md:158   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('To flash all build output, run '...')
                      MixedStyledText('To flash all build output, run '...')
                        Token('To flash all build output, run '...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('At this point, you can run make ...')   build-instructions.md:166   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('At this point, you can run make ...')
                      MixedStyledText('At this point, you can run make ...')
                        SingleStyledText('At this point, you can run ')
                        MixedStyledText('make flash', style='monospaced')   build-instructions.md:166   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('make flash')
                        SingleStyledText(' to upload the 3 binaries up to ...')
                Paragraph('However, first, we will build a ...')   build-instructions.md:168   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('However, first, we will build a ...')
                      MixedStyledText('However, first, we will build a ...')
                        SingleStyledText('However, first, we will build a ...')
                        MixedStyledText('Building a Release Image', style='external link')   build-instructions.md:168   <reference>
                             > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                          SingleStyledText('Building a Release Image')
                        SingleStyledText(', below.  But first, it is helpf...')
              Section(id='%build-instructions#flash-layout')   build-instructions.md:170   <section>
                Heading('6.4.3 Flash Layout')   build-instructions.md:170   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.3 ')
                      SingleStyledText('6.4.3')
                      SingleStyledText(' ')
                    MixedStyledText('Flash Layout')
                      MixedStyledText('Flash Layout')
                        SingleStyledText('Flash Layout')
                Paragraph('The AtomVM Flash memory is parti...')   build-instructions.md:172   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM Flash memory is parti...')
                      MixedStyledText('The AtomVM Flash memory is parti...')
                        SingleStyledText('The AtomVM Flash memory is parti...')
                Paragraph('The flash layout is roughly as f...')   build-instructions.md:174   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The flash layout is roughly as f...')
                      MixedStyledText('The flash layout is roughly as f...')
                        SingleStyledText('The flash layout is roughly as f...')
                CodeBlock('+-----------------+  -----------...')   build-instructions.md:176   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+-----------------+  -----------...')
                      MixedStyledText('+-----------------+  -----------...')
                        Token('+-----------------+  -----------...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('54		Chapter 6.  Build Instructio...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('54		Chapter 6.  Build Instructio...')
          MixedStyledText('54		Chapter 6.  Build Instructio...')
            Field('54')
              SingleStyledText('54')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('Build Instructions')
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
---------------------------------- page 55 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#flash-layout')   build-instructions.md:170   <section>
                (continued) CodeBlock('+-----------------+  -----------...')   build-instructions.md:176   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('The following table summarizes t...')   build-instructions.md:212   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following table summarizes t...')
                      MixedStyledText('The following table summarizes t...')
                        SingleStyledText('The following table summarizes t...')
                Table()   build-instructions.md:214   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Partition')   build-instructions.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Partition')
                              MixedStyledText('Partition')
                                SingleStyledText('Partition')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   build-instructions.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Offset')   build-instructions.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Offset')
                              MixedStyledText('Offset')
                                SingleStyledText('Offset')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   build-instructions.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Length')   build-instructions.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Length')
                              MixedStyledText('Length')
                                SingleStyledText('Length')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                      TableCell()   build-instructions.md   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   build-instructions.md   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                  TableBody()
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Secure Boot')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Secure Boot')
                              MixedStyledText('Secure Boot')
                                SingleStyledText('Secure Boot')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x00')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x00')
                              MixedStyledText('0x00')
                                SingleStyledText('0x00')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('4kB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('4kB')
                              MixedStyledText('4kB')
                                SingleStyledText('4kB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Initialization vectors and other...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Initialization vectors and other...')
                              MixedStyledText('Initialization vectors and other...')
                                SingleStyledText('Initialization vectors and other...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Bootloader')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Bootloader')
                              MixedStyledText('Bootloader')
                                SingleStyledText('Bootloader')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x1000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x1000')
                              MixedStyledText('0x1000')
                                SingleStyledText('0x1000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('28kB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('28kB')
                              MixedStyledText('28kB')
                                SingleStyledText('28kB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('The ESP32 bootloader, as built f...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The ESP32 bootloader, as built f...')
                              MixedStyledText('The ESP32 bootloader, as built f...')
                                SingleStyledText('The ESP32 bootloader, as built f...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Partition Table')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Partition Table')
                              MixedStyledText('Partition Table')
                                SingleStyledText('Partition Table')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x8000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x8000')
                              MixedStyledText('0x8000')
                                SingleStyledText('0x8000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('3kB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('3kB')
                              MixedStyledText('3kB')
                                SingleStyledText('3kB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('The AtomVM-defined partition tab...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The AtomVM-defined partition tab...')
                              MixedStyledText('The AtomVM-defined partition tab...')
                                SingleStyledText('The AtomVM-defined partition tab...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('NVS')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('NVS')
                              MixedStyledText('NVS')
                                SingleStyledText('NVS')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x9000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x9000')
                              MixedStyledText('0x9000')
                                SingleStyledText('0x9000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('24kB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('24kB')
                              MixedStyledText('24kB')
                                SingleStyledText('24kB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Space for non-volatile storage.')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Space for non-volatile storage.')
                              MixedStyledText('Space for non-volatile storage.')
                                SingleStyledText('Space for non-volatile storage.')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PHY_INIT')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PHY_INIT')
                              MixedStyledText('PHY_INIT')
                                SingleStyledText('PHY_INIT')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0xF000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0xF000')
                              MixedStyledText('0xF000')
                                SingleStyledText('0xF000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('4kB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('4kB')
                              MixedStyledText('4kB')
                                SingleStyledText('4kB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Initialization data for physical...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Initialization data for physical...')
                              MixedStyledText('Initialization data for physical...')
                                SingleStyledText('Initialization data for physical...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('AtomVM virtual machine')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('AtomVM virtual machine')
                              MixedStyledText('AtomVM virtual machine')
                                SingleStyledText('AtomVM virtual machine')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x10000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x10000')
                              MixedStyledText('0x10000')
                                SingleStyledText('0x10000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('1.75mB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('1.75mB')
                              MixedStyledText('1.75mB')
                                SingleStyledText('1.75mB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('The AtomVM virtual machine (comp...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The AtomVM virtual machine (comp...')
                              MixedStyledText('The AtomVM virtual machine (comp...')
                                SingleStyledText('The AtomVM virtual machine (comp...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('lib.avm')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('lib.avm')
                              MixedStyledText('lib.avm')
                                SingleStyledText('lib.avm')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x1D0000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x1D0000')
                              MixedStyledText('0x1D0000')
                                SingleStyledText('0x1D0000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('256k')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('256k')
                              MixedStyledText('256k')
                                SingleStyledText('256k')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('The AtomVM BEAM library, compile...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The AtomVM BEAM library, compile...')
                              MixedStyledText('The AtomVM BEAM library, compile...')
                                SingleStyledText('The AtomVM BEAM library, compile...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                    TableRow()
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('main.avm')   build-instructions.md   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('main.avm')
                              MixedStyledText('main.avm')
                                SingleStyledText('main.avm')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0x210000')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0x210000')
                              MixedStyledText('0x210000')
                                SingleStyledText('0x210000')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('1mB')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('1mB')
                              MixedStyledText('1mB')
                                SingleStyledText('1mB')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                      TableCell()   build-instructions.md   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('The user application.  This is w...')   build-instructions.md   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The user application.  This is w...')
                              MixedStyledText('The user application.  This is w...')
                                SingleStyledText('The user application.  This is w...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
              Section(id='%build-instructions#the-lib-avm-and-main-avm-partitions')   build-instructions.md:225   <section>
                Heading('6.4.4 The lib.avm and main.avm p...')   build-instructions.md:225   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.4 ')
                      SingleStyledText('6.4.4')
                      SingleStyledText(' ')
                    MixedStyledText('The lib.avm and main.avm partiti...')
                      MixedStyledText('The lib.avm and main.avm partiti...')
                        SingleStyledText('The ')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:225   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' and ')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:225   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partitions')
                Paragraph('The lib.avm and main.avm partiti...')   build-instructions.md:227   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The lib.avm and main.avm partiti...')
                      MixedStyledText('The lib.avm and main.avm partiti...')
                        SingleStyledText('The ')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:227   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' and ')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:227   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partitions are intended to stor...')
                Paragraph('The lib.avm partition is intende...')   build-instructions.md:229   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The lib.avm partition is intende...')
                      MixedStyledText('The lib.avm partition is intende...')
                        SingleStyledText('The ')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:229   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' partition is intended for core ...')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:229   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' partition, which includes the B...')
                        MixedStyledText('estdlib', style='monospaced')   build-instructions.md:229   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('estdlib')
                        SingleStyledText(' and ')
                        MixedStyledText('eavmlib', style='monospaced')   build-instructions.md:229   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('eavmlib')
                        SingleStyledText(' libraries.')
                Paragraph('In contrast, the main.avm partit...')   build-instructions.md:231   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In contrast, the main.avm partit...')
                      MixedStyledText('In contrast, the main.avm partit...')
                        SingleStyledText('In contrast, the ')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:231   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partition is intended for user ...')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:231   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partition starts at address ')
                        MixedStyledText('0x210000', style='monospaced')   build-instructions.md:231   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x210000')
                        SingleStyledText(', and it is to that location to ...')
                Paragraph('The AtomVM search path for BEAM ...')   build-instructions.md:233   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM search path for BEAM ...')
                      MixedStyledText('The AtomVM search path for BEAM ...')
                        SingleStyledText('The AtomVM search path for BEAM ...')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:233   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partition and falls back to ')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:233   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText('.  Users should not have a need ...')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:233   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' partition, but if necessary, a ...')
                        MixedStyledText('main.avm', style='monospaced')   build-instructions.md:233   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.avm')
                        SingleStyledText(' partition will be loaded instea...')
                        MixedStyledText('lib.avm', style='monospaced')   build-instructions.md:233   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('lib.avm')
                        SingleStyledText(' partition.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6.4.  Building for ESP32		55')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6.4.  Building for ESP32		55')
          MixedStyledText('6.4.  Building for ESP32		55')
            Field('6.4')
              SingleStyledText('6.4')
            SingleStyledText('.  ')
            Field('Building for ESP32')
              MixedStyledText('Building for ESP32')
                MixedStyledText('Building for ESP32')
                  SingleStyledText('Building for ESP32')
            Tab('	')
            Tab('	')
            Field('55')
              SingleStyledText('55')
---------------------------------- page 56 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#the-lib-avm-and-main-avm-partitions')   build-instructions.md:225   <section>
                StaticGroupedFlowables(style='block quote')   build-instructions.md:235   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  The location of the main....')   build-instructions.md:235   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
              Section(id='%build-instructions#building-a-release-image')   build-instructions.md:237   <section>
                Heading('6.4.5 Building a Release Image')   build-instructions.md:237   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.5 ')
                      SingleStyledText('6.4.5')
                      SingleStyledText(' ')
                    MixedStyledText('Building a Release Image')
                      MixedStyledText('Building a Release Image')
                        SingleStyledText('Building a Release Image')
                Paragraph('The <atomvm-source-tree-root>/to...')   build-instructions.md:239   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The <atomvm-source-tree-root>/to...')
                      MixedStyledText('The <atomvm-source-tree-root>/to...')
                        SingleStyledText('The ')
                        MixedStyledText('<atomvm-source-tree-root>/tools/...', style='monospaced')   build-instructions.md:239   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('<atomvm-source-tree-root>/tools/...')
                        SingleStyledText(' directory contains the ')
                        MixedStyledText('mkimage.sh', style='monospaced')   build-instructions.md:239   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mkimage.sh')
                        SingleStyledText(' script that can be used to crea...')
                StaticGroupedFlowables(style='block quote')   build-instructions.md:241   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Before running the mkimag...')   build-instructions.md:241   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Before running the mkimag...')
                        MixedStyledText('Note.  Before running the mkimag...')
                          SingleStyledText('Note.  Before running the ')
                          MixedStyledText('mkimage.sh', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('mkimage.sh')
                          SingleStyledText(' script, you must have a complet...')
                          MixedStyledText('libs', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('libs')
                          SingleStyledText(' directory.  The script configur...')
                          MixedStyledText('build/libs', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('build/libs')
                          SingleStyledText(' directory in the AtomVM source ...')
                          MixedStyledText('--build_dir <path>', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('--build_dir <path>')
                          SingleStyledText(' option to the ')
                          MixedStyledText('mkimage.sh', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('mkimage.sh')
                          SingleStyledText(' script, with ')
                          MixedStyledText('<path>', style='monospaced')   build-instructions.md:241   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<path>')
                          SingleStyledText(' pointing to your AtomVM build d...')
                Paragraph('Running this script will generat...')   build-instructions.md:243   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Running this script will generat...')
                      MixedStyledText('Running this script will generat...')
                        SingleStyledText('Running this script will generat...')
                        MixedStyledText('atomvm-<sha>.img', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm-<sha>.img')
                        SingleStyledText(' file in the ')
                        MixedStyledText('build', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('build')
                        SingleStyledText(' directory of the esp32 source t...')
                        MixedStyledText('<sha>', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('<sha>')
                        SingleStyledText(' is the git hash of the current ...')
                        MixedStyledText('eavmlib', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('eavmlib')
                        SingleStyledText(' and ')
                        MixedStyledText('estdlib', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('estdlib')
                        SingleStyledText(' Erlang libraries in one file, w...')
                        MixedStyledText('0x1000', style='monospaced')   build-instructions.md:243   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x1000')
                        SingleStyledText('.')
                Paragraph('The mkimage.sh script is run as ...')   build-instructions.md:245   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The mkimage.sh script is run as ...')
                      MixedStyledText('The mkimage.sh script is run as ...')
                        SingleStyledText('The ')
                        MixedStyledText('mkimage.sh', style='monospaced')   build-instructions.md:245   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mkimage.sh')
                        SingleStyledText(' script is run as follows:')
                CodeBlock('shell$ ./tools/release/esp32/mki...')   build-instructions.md:247   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/release/esp32/mki...')
                      MixedStyledText('shell$ ./tools/release/esp32/mki...')
                        Token('shell$ ./tools/release/esp32/mki...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Users can then use the esptool.p...')   build-instructions.md:255   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Users can then use the esptool.p...')
                      MixedStyledText('Users can then use the esptool.p...')
                        SingleStyledText('Users can then use the ')
                        MixedStyledText('esptool.py', style='monospaced')   build-instructions.md:255   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esptool.py')
                        SingleStyledText(' directly to flash the entire im...')
                        MixedStyledText('main.app', style='monospaced')   build-instructions.md:255   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('main.app')
                        SingleStyledText(' partition at address ')
                        MixedStyledText('0x210000', style='monospaced')   build-instructions.md:255   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x210000')
                        SingleStyledText(',')
                Paragraph('But first, it is a good idea to ...')   build-instructions.md:257   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('But first, it is a good idea to ...')
                      MixedStyledText('But first, it is a good idea to ...')
                        SingleStyledText('But first, it is a good idea to ...')
                CodeBlock('shell$ esptool.py --chip esp32 -...')   build-instructions.md:259   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ esptool.py --chip esp32 -...')
                      MixedStyledText('shell$ esptool.py --chip esp32 -...')
                        Token('shell$ esptool.py --chip esp32 -...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('You can then use the ./tools/dev...')   build-instructions.md:270   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('You can then use the ./tools/dev...')
                      MixedStyledText('You can then use the ./tools/dev...')
                        SingleStyledText('You can then use the ')
                        MixedStyledText('./tools/dev/flash.sh', style='monospaced')   build-instructions.md:270   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('./tools/dev/flash.sh')
                        SingleStyledText(' tool (or ')
                        MixedStyledText('esptool.py', style='monospaced')   build-instructions.md:270   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('esptool.py')
                        SingleStyledText(' directly, if you prefer), to fl...')
                CodeBlock('shell$ FLASH_OFFSET=0x1000 ./too...')   build-instructions.md:272   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ FLASH_OFFSET=0x1000 ./too...')
                      MixedStyledText('shell$ FLASH_OFFSET=0x1000 ./too...')
                        Token('shell$ FLASH_OFFSET=0x1000 ./too...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('56		Chapter 6.  Build Instructio...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('56		Chapter 6.  Build Instructio...')
          MixedStyledText('56		Chapter 6.  Build Instructio...')
            Field('56')
              SingleStyledText('56')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('Build Instructions')
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
---------------------------------- page 57 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#building-a-release-image')   build-instructions.md:237   <section>
                (continued) CodeBlock('shell$ FLASH_OFFSET=0x1000 ./too...')   build-instructions.md:272   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                StaticGroupedFlowables(style='block quote')   build-instructions.md:292   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. Flashing the full AtomVM i...')   build-instructions.md:292   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. Flashing the full AtomVM i...')
                        MixedStyledText('Note. Flashing the full AtomVM i...')
                          SingleStyledText('Note. Flashing the full AtomVM i...')
                Paragraph('Finally, you can then flash your...')   build-instructions.md:294   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Finally, you can then flash your...')
                      MixedStyledText('Finally, you can then flash your...')
                        SingleStyledText('Finally, you can then flash your...')
                CodeBlock('shell$ ./tools/dev/flash.sh exam...')   build-instructions.md:296   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('shell$ ./tools/dev/flash.sh exam...')
                      MixedStyledText('shell$ ./tools/dev/flash.sh exam...')
                        Token('shell$ ./tools/dev/flash.sh exam...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                StaticGroupedFlowables(style='block quote')   build-instructions.md:319   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Since the Erlang core lib...')   build-instructions.md:319   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Since the Erlang core lib...')
                        MixedStyledText('Note.  Since the Erlang core lib...')
                          SingleStyledText('Note.  Since the Erlang core lib...')
                          SingleStyledText('ExAtomVM Mix task')
                          SingleStyledText(', or the Erlang ')
                          SingleStyledText('AtomVM Rebar3 Plugin')
                          SingleStyledText(' for doing day-to-day developmen...')
              Section(id='%build-instructions#adding-custom-nifs-ports-and-third-party-components')   build-instructions.md:321   <section>
                Heading('6.4.6 Adding custom Nifs, Ports,...')   build-instructions.md:321   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('6.4.6 ')
                      SingleStyledText('6.4.6')
                      SingleStyledText(' ')
                    MixedStyledText('Adding custom Nifs, Ports, and t...')
                      MixedStyledText('Adding custom Nifs, Ports, and t...')
                        SingleStyledText('Adding custom Nifs, Ports, and t...')
                Paragraph('While AtomVM is a functional imp...')   build-instructions.md:323   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('While AtomVM is a functional imp...')
                      MixedStyledText('While AtomVM is a functional imp...')
                        SingleStyledText('While AtomVM is a functional imp...')
                Paragraph('AtomVM supports extensions to th...')   build-instructions.md:325   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM supports extensions to th...')
                      MixedStyledText('AtomVM supports extensions to th...')
                        SingleStyledText('AtomVM supports extensions to th...')
                        MixedStyledText('components', style='monospaced')   build-instructions.md:325   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('components')
                        SingleStyledText(' directory, and the ESP32 build ...')
                StaticGroupedFlowables(style='block quote')   build-instructions.md:327   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('For more information about build...')   build-instructions.md:327   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('For more information about build...')
                        MixedStyledText('For more information about build...')
                          SingleStyledText('For more information about build...')
                          MixedStyledText('IDF SDK Build System', style='external link')   build-instructions.md:327   <reference>
                               > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                            SingleStyledText('IDF SDK Build System')
                          SingleStyledText(' documentation.')
                Paragraph('The instructions for adding cust...')   build-instructions.md:329   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The instructions for adding cust...')
                      MixedStyledText('The instructions for adding cust...')
                        SingleStyledText('The instructions for adding cust...')
                List(style='enumerated')   build-instructions.md:331   <enumerated_list>
                     > (0,0,1,0,2) enumerated list [Sphinx] > DEFAULT
                  ListItem()   build-instructions.md:331   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('1.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('1.')
                          SingleStyledText('1')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Adding the custom Nif or Port to...')   build-instructions.md:331   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Adding the custom Nif or Port to...')
                            MixedStyledText('Adding the custom Nif or Port to...')
                              SingleStyledText('Adding the custom Nif or Port to...')
                              MixedStyledText('comonents', style='monospaced')   build-instructions.md:331   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('comonents')
                              SingleStyledText(' directory of the AtomVM source ...')
                  ListItem()   build-instructions.md:332   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('2.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('2.')
                          SingleStyledText('2')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Adding the component to the corr...')   build-instructions.md:332   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Adding the component to the corr...')
                            MixedStyledText('Adding the component to the corr...')
                              SingleStyledText('Adding the component to the corr...')
                              MixedStyledText('main/component_nifs.txt', style='monospaced')   build-instructions.md:332   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('main/component_nifs.txt')
                              SingleStyledText(' or ')
                              MixedStyledText('main/component_ports.txt', style='monospaced')   build-instructions.md:332   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('main/component_ports.txt')
                              SingleStyledText(' files;')
                  ListItem()   build-instructions.md:333   <list_item>
                       x (0,0,1,0,4) enumerated list item
                    ListItemLabel('3.')
                         > (0,0,1,0,6) enumerated list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('3.')
                          SingleStyledText('3')
                          SingleStyledText('.')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Building the AtomVM binary.')   build-instructions.md:333   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Building the AtomVM binary.')
                            MixedStyledText('Building the AtomVM binary.')
                              SingleStyledText('Building the AtomVM binary.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6.4.  Building for ESP32		57')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6.4.  Building for ESP32		57')
          MixedStyledText('6.4.  Building for ESP32		57')
            Field('6.4')
              SingleStyledText('6.4')
            SingleStyledText('.  ')
            Field('Building for ESP32')
              MixedStyledText('Building for ESP32')
                MixedStyledText('Building for ESP32')
                  SingleStyledText('Building for ESP32')
            Tab('	')
            Tab('	')
            Field('57')
              SingleStyledText('57')
---------------------------------- page 58 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#adding-custom-nifs-ports-and-third-party-components')   build-instructions.md:321   <section>
                StaticGroupedFlowables(style='block quote')   build-instructions.md:335   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  The Espressif SDK and too...')   build-instructions.md:335   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('Custom Nifs and Ports are availa...')   build-instructions.md:337   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Custom Nifs and Ports are availa...')
                      MixedStyledText('Custom Nifs and Ports are availa...')
                        SingleStyledText('Custom Nifs and Ports are availa...')
                Paragraph('More detailed instructions follo...')   build-instructions.md:339   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('More detailed instructions follo...')
                      MixedStyledText('More detailed instructions follo...')
                        SingleStyledText('More detailed instructions follo...')
                Section(id='%build-instructions#adding-a-custom-atomvm-nif')   build-instructions.md:341   <section>
                  Heading('Adding a custom AtomVM Nif')   build-instructions.md:341   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Adding a custom AtomVM Nif')
                        MixedStyledText('Adding a custom AtomVM Nif')
                          SingleStyledText('Adding a custom AtomVM Nif')
                  Paragraph('To add support for a new periphe...')   build-instructions.md:343   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('To add support for a new periphe...')
                        MixedStyledText('To add support for a new periphe...')
                          SingleStyledText('To add support for a new periphe...')
                  List(style='bulleted')   build-instructions.md:345   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   build-instructions.md:345   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Choose a name for your nif (e.g,...')   build-instructions.md:345   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Choose a name for your nif (e.g,...')
                              MixedStyledText('Choose a name for your nif (e.g,...')
                                SingleStyledText('Choose a name for your nif (e.g,...')
                                MixedStyledText('<moniker>', style='monospaced')   build-instructions.md:345   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('<moniker>')
                                SingleStyledText('.')
                    ListItem()   build-instructions.md:346   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('In your source code, implement t...')   build-instructions.md:346   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('In your source code, implement t...')
                              MixedStyledText('In your source code, implement t...')
                                SingleStyledText('In your source code, implement t...')
                        List(style='bulleted')   build-instructions.md:347   <bullet_list>
                             > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                               (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                          ListItem()   build-instructions.md:347   <list_item>
                               x (0,0,1,0,4) bulleted list item
                            ListItemLabel('•')
                                 > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                   (0,0,0,0,2) list item label [Sphinx] > default
                                MixedStyledText('•')
                                  SingleStyledText('')
                                  SingleStyledText('•')
                                  SingleStyledText('')
                            StaticGroupedFlowables()
                                 > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                              Paragraph('void <moniker>_nif_init(GlobalCo...')   build-instructions.md:347   <paragraph>
                                   > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                     (0,0,0,0,2) body [Sphinx] > default
                                  MixedStyledText('void <moniker>_nif_init(GlobalCo...')
                                    MixedStyledText('void <moniker>_nif_init(GlobalCo...')
                                      MixedStyledText('void <moniker>_nif_init(GlobalCo...', style='monospaced')   build-instructions.md:347   <literal>
                                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                        SingleStyledText('void <moniker>_nif_init(GlobalCo...')
                              List(style='bulleted')   build-instructions.md:348   <bullet_list>
                                   > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                                     (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                                ListItem()   build-instructions.md:348   <list_item>
                                     x (0,0,1,0,4) bulleted list item
                                  ListItemLabel('•')
                                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                         (0,0,0,0,2) list item label [Sphinx] > default
                                      MixedStyledText('•')
                                        SingleStyledText('')
                                        SingleStyledText('•')
                                        SingleStyledText('')
                                  StaticGroupedFlowables()
                                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                                    Paragraph('This function will be called onc...')   build-instructions.md:348   <paragraph>
                                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                           (0,0,0,0,2) body [Sphinx] > default
                                        MixedStyledText('This function will be called onc...')
                                          MixedStyledText('This function will be called onc...')
                                            SingleStyledText('This function will be called onc...')
                          ListItem()   build-instructions.md:349   <list_item>
                               x (0,0,1,0,4) bulleted list item
                            ListItemLabel('•')
                                 > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                   (0,0,0,0,2) list item label [Sphinx] > default
                                MixedStyledText('•')
                                  SingleStyledText('')
                                  SingleStyledText('•')
                                  SingleStyledText('')
                            StaticGroupedFlowables()
                                 > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                              Paragraph('const struct Nif *<moniker>_nif_...')   build-instructions.md:349   <paragraph>
                                   > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                     (0,0,0,0,2) body [Sphinx] > default
                                  MixedStyledText('const struct Nif *<moniker>_nif_...')
                                    MixedStyledText('const struct Nif *<moniker>_nif_...')
                                      MixedStyledText('const struct Nif *<moniker>_nif_...', style='monospaced')   build-instructions.md:349   <literal>
                                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                        SingleStyledText('const struct Nif *<moniker>_nif_...')
                              List(style='bulleted')   build-instructions.md:350   <bullet_list>
                                   > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                                     (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                                ListItem()   build-instructions.md:350   <list_item>
                                     x (0,0,1,0,4) bulleted list item
                                  ListItemLabel('•')
                                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                         (0,0,0,0,2) list item label [Sphinx] > default
                                      MixedStyledText('•')
                                        SingleStyledText('')
                                        SingleStyledText('•')
                                        SingleStyledText('')
                                  StaticGroupedFlowables()
                                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                                    Paragraph('This function will be called to ...')   build-instructions.md:350   <paragraph>
                                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                           (0,0,0,0,2) body [Sphinx] > default
                                        MixedStyledText('This function will be called to ...')
                                          MixedStyledText('This function will be called to ...')
                                            SingleStyledText('This function will be called to ...')
                  Paragraph('Example:')   build-instructions.md:352   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Example:')
                        MixedStyledText('Example:')
                          SingleStyledText('Example:')
                  CodeBlock('void my_nif_init(GlobalContext *...')   build-instructions.md:354   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('void my_nif_init(GlobalContext *...')
                        MixedStyledText('void my_nif_init(GlobalContext *...')
                          Token('void my_nif_init(GlobalContext *...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   build-instructions.md:357   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. Instructions for implement...')   build-instructions.md:357   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. Instructions for implement...')
                          MixedStyledText('Note. Instructions for implement...')
                            SingleStyledText('Note. Instructions for implement...')
                  List(style='bulleted')   build-instructions.md:359   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   build-instructions.md:359   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Add your <moniker> to the main/c...')   build-instructions.md:359   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Add your <moniker> to the main/c...')
                              MixedStyledText('Add your <moniker> to the main/c...')
                                SingleStyledText('Add your ')
                                MixedStyledText('<moniker>', style='monospaced')   build-instructions.md:359   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('<moniker>')
                                SingleStyledText(' to the ')
                                MixedStyledText('main/component_nifs.txt', style='monospaced')   build-instructions.md:359   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('main/component_nifs.txt')
                                SingleStyledText(' file in the ')
                                MixedStyledText('src/platforms/esp32', style='monospaced')   build-instructions.md:359   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('src/platforms/esp32')
                                SingleStyledText(' directory.')
                  StaticGroupedFlowables(style='block quote')   build-instructions.md:361   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  The main/component_nifs.t...')   build-instructions.md:361   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  The main/component_nifs.t...')
                          MixedStyledText('Note.  The main/component_nifs.t...')
                            SingleStyledText('Note.  The ')
                            MixedStyledText('main/component_nifs.txt', style='monospaced')   build-instructions.md:361   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('main/component_nifs.txt')
                            SingleStyledText(' file will not exist until after...')
                Section(id='%build-instructions#adding-a-custom-atomvm-port')   build-instructions.md:363   <section>
                  Heading('Adding a custom AtomVM Port')   build-instructions.md:363   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Adding a custom AtomVM Port')
                        MixedStyledText('Adding a custom AtomVM Port')
                          SingleStyledText('Adding a custom AtomVM Port')
                  Paragraph('To add support for a new periphe...')   build-instructions.md:365   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('To add support for a new periphe...')
                        MixedStyledText('To add support for a new periphe...')
                          SingleStyledText('To add support for a new periphe...')
                  List(style='bulleted')   build-instructions.md:367   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   build-instructions.md:367   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Choose a name for your port (e.g...')   build-instructions.md:367   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Choose a name for your port (e.g...')
                              MixedStyledText('Choose a name for your port (e.g...')
                                SingleStyledText('Choose a name for your port (e.g...')
                                MixedStyledText('<moniker>', style='monospaced')   build-instructions.md:367   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('<moniker>')
                                SingleStyledText('.')
                    ListItem()   build-instructions.md:368   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('In your source code, implement t...')   build-instructions.md:368   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('In your source code, implement t...')
                              MixedStyledText('In your source code, implement t...')
                                SingleStyledText('In your source code, implement t...')
                        List(style='bulleted')   build-instructions.md:369   <bullet_list>
                             > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                               (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                          ListItem()   build-instructions.md:369   <list_item>
                               x (0,0,1,0,4) bulleted list item
                            ListItemLabel('•')
                                 > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                   (0,0,0,0,2) list item label [Sphinx] > default
                                MixedStyledText('•')
                                  SingleStyledText('')
                                  SingleStyledText('•')
                                  SingleStyledText('')
                            StaticGroupedFlowables()
                                 > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                              Paragraph('void <moniker>_init(GlobalContex...')   build-instructions.md:369   <paragraph>
                                   > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                     (0,0,0,0,2) body [Sphinx] > default
                                  MixedStyledText('void <moniker>_init(GlobalContex...')
                                    MixedStyledText('void <moniker>_init(GlobalContex...')
                                      MixedStyledText('void <moniker>_init(GlobalContex...', style='monospaced')   build-instructions.md:369   <literal>
                                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                        SingleStyledText('void <moniker>_init(GlobalContex...')
                              List(style='bulleted')   build-instructions.md:370   <bullet_list>
                                   > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                                     (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                                ListItem()   build-instructions.md:370   <list_item>
                                     x (0,0,1,0,4) bulleted list item
                                  ListItemLabel('•')
                                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                         (0,0,0,0,2) list item label [Sphinx] > default
                                      MixedStyledText('•')
                                        SingleStyledText('')
                                        SingleStyledText('•')
                                        SingleStyledText('')
                                  StaticGroupedFlowables()
                                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                                    Paragraph('This function will be called onc...')   build-instructions.md:370   <paragraph>
                                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                           (0,0,0,0,2) body [Sphinx] > default
                                        MixedStyledText('This function will be called onc...')
                                          MixedStyledText('This function will be called onc...')
                                            SingleStyledText('This function will be called onc...')
                          ListItem()   build-instructions.md:371   <list_item>
                               x (0,0,1,0,4) bulleted list item
                            ListItemLabel('•')
                                 > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                   (0,0,0,0,2) list item label [Sphinx] > default
                                MixedStyledText('•')
                                  SingleStyledText('')
                                  SingleStyledText('•')
                                  SingleStyledText('')
                            StaticGroupedFlowables()
                                 > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                              Paragraph('Context *<moniker>_create_port(G...')   build-instructions.md:371   <paragraph>
                                   > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                     (0,0,0,0,2) body [Sphinx] > default
                                  MixedStyledText('Context *<moniker>_create_port(G...')
                                    MixedStyledText('Context *<moniker>_create_port(G...')
                                      MixedStyledText('Context *<moniker>_create_port(G...', style='monospaced')   build-instructions.md:371   <literal>
                                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                        SingleStyledText('Context *<moniker>_create_port(G...')
                              List(style='bulleted')   build-instructions.md:372   <bullet_list>
                                   > (0,0,1,0,5) nested bulleted list [Sphinx] > bulleted list
                                     (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                                ListItem()   build-instructions.md:372   <list_item>
                                     x (0,0,1,0,4) bulleted list item
                                  ListItemLabel('•')
                                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                                         (0,0,0,0,2) list item label [Sphinx] > default
                                      MixedStyledText('•')
                                        SingleStyledText('')
                                        SingleStyledText('•')
                                        SingleStyledText('')
                                  StaticGroupedFlowables()
                                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                                    Paragraph('This function will be called to ...')   build-instructions.md:372   <paragraph>
                                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                                           (0,0,0,0,2) body [Sphinx] > default
                                        MixedStyledText('This function will be called to ...')
                                          MixedStyledText('This function will be called to ...')
                                            SingleStyledText('This function will be called to ...')
                  Paragraph('Example:')   build-instructions.md:374   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Example:')
                        MixedStyledText('Example:')
                          SingleStyledText('Example:')
                  CodeBlock('void my_port_init(GlobalContext ...')   build-instructions.md:376   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('void my_port_init(GlobalContext ...')
                        MixedStyledText('void my_port_init(GlobalContext ...')
                          Token('void my_port_init(GlobalContext ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   build-instructions.md:379   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. Instructions for implement...')   build-instructions.md:379   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. Instructions for implement...')
                          MixedStyledText('Note. Instructions for implement...')
                            SingleStyledText('Note. Instructions for implement...')
                  List(style='bulleted')   build-instructions.md:381   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   build-instructions.md:381   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Add your <moniker> to the main/c...')   build-instructions.md:381   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Add your <moniker> to the main/c...')
                              MixedStyledText('Add your <moniker> to the main/c...')
                                SingleStyledText('Add your ')
                                MixedStyledText('<moniker>', style='monospaced')   build-instructions.md:381   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('<moniker>')
                                SingleStyledText(' to the ')
                                MixedStyledText('main/component_ports.txt', style='monospaced')   build-instructions.md:381   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('main/component_ports.txt')
                                SingleStyledText(' file in the ')
                                MixedStyledText('src/platforms/esp32', style='monospaced')   build-instructions.md:381   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('src/platforms/esp32')
                                SingleStyledText(' directory.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('58		Chapter 6.  Build Instructio...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('58		Chapter 6.  Build Instructio...')
          MixedStyledText('58		Chapter 6.  Build Instructio...')
            Field('58')
              SingleStyledText('58')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('Build Instructions')
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
---------------------------------- page 59 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%build-instructions')   <start_of_file>
          (continued) Section(id='%build-instructions#build-instructions')   build-instructions.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%build-instructions#building-for-esp32')   build-instructions.md:119   <section>
              (continued) Section(id='%build-instructions#adding-custom-nifs-ports-and-third-party-components')   build-instructions.md:321   <section>
                (continued) Section(id='%build-instructions#adding-a-custom-atomvm-port')   build-instructions.md:363   <section>
                  StaticGroupedFlowables(style='block quote')   build-instructions.md:383   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  The main/component_ports....')   build-instructions.md:383   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
            Section(id='%build-instructions#building-for-stm32')   build-instructions.md:385   <section>
              Heading('6.5 Building for STM32')   build-instructions.md:385   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.5 ')
                    SingleStyledText('6.5')
                    SingleStyledText(' ')
                  MixedStyledText('Building for STM32')
                    MixedStyledText('Building for STM32')
                      SingleStyledText('Building for STM32')
              StaticGroupedFlowables(style='block quote')   build-instructions.md:387   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('TODO')   build-instructions.md:387   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('TODO')
                      MixedStyledText('TODO')
                        SingleStyledText('TODO')
        StaticGroupedFlowables(id='%atomvm-internals')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6.5.  Building for STM32		59')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6.5.  Building for STM32		59')
          MixedStyledText('6.5.  Building for STM32		59')
            Field('6.5')
              SingleStyledText('6.5')
            SingleStyledText('.  ')
            Field('Building for STM32')
              MixedStyledText('Building for STM32')
                MixedStyledText('Building for STM32')
                  SingleStyledText('Building for STM32')
            Tab('	')
            Tab('	')
            Field('59')
              SingleStyledText('59')
---------------------------------- page 60 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%atomvm-internals')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('60		Chapter 6.  Build Instructio...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('60		Chapter 6.  Build Instructio...')
          MixedStyledText('60		Chapter 6.  Build Instructio...')
            Field('60')
              SingleStyledText('60')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('Build Instructions')
              MixedStyledText('Build Instructions')
                MixedStyledText('Build Instructions')
                  SingleStyledText('Build Instructions')
---------------------------------- page 61 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 7', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 7')
        MixedStyledText('Chapter 7')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('7', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('7')
  Paragraph('AtomVM Internals', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('AtomVM Internals')
        MixedStyledText('AtomVM Internals')
          MixedStyledText('AtomVM Internals')
            SingleStyledText('AtomVM Internals')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%atomvm-internals')   <start_of_file>
          Section(id='%atomvm-internals#atomvm-internals')   atomvm-internals.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%atomvm-internals#what-is-an-abstract-machine')   atomvm-internals.md:9   <section>
              Heading('7.1 What is an Abstract Machine?')   atomvm-internals.md:9   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.1 ')
                    SingleStyledText('7.1')
                    SingleStyledText(' ')
                  MixedStyledText('What is an Abstract Machine?')
                    MixedStyledText('What is an Abstract Machine?')
                      SingleStyledText('What is an Abstract Machine?')
              Paragraph('AtomVM is an “abstract” or “virt...')   atomvm-internals.md:11   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM is an “abstract” or “virt...')
                    MixedStyledText('AtomVM is an “abstract” or “virt...')
                      SingleStyledText('AtomVM is an “abstract” or “virt...')
              Paragraph('AtomVM and virtual machines gene...')   atomvm-internals.md:13   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM and virtual machines gene...')
                    MixedStyledText('AtomVM and virtual machines gene...')
                      SingleStyledText('AtomVM and virtual machines gene...')
                      MixedStyledText('javac', style='monospaced')   atomvm-internals.md:13   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('javac')
                      SingleStyledText(' compiler is used to translate J...')
                      MixedStyledText('erlc', style='monospaced')   atomvm-internals.md:13   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('erlc')
                      SingleStyledText(' compiler is used to translate E...')
              Paragraph('AtomVM is an abstract machine de...')   atomvm-internals.md:15   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('AtomVM is an abstract machine de...')
                    MixedStyledText('AtomVM is an abstract machine de...')
                      SingleStyledText('AtomVM is an abstract machine de...')
              StaticGroupedFlowables(style='block quote')   atomvm-internals.md:17   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note that there is no abstract s...')   atomvm-internals.md:17   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note that there is no abstract s...')
                      MixedStyledText('Note that there is no abstract s...')
                        SingleStyledText('Note that there is no abstract s...')
              Paragraph('At a high level, the AtomVM abst...')   atomvm-internals.md:19   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('At a high level, the AtomVM abst...')
                    MixedStyledText('At a high level, the AtomVM abst...')
                      SingleStyledText('At a high level, the AtomVM abst...')
              List(style='bulleted')   atomvm-internals.md:21   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   atomvm-internals.md:21   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Loading and execution of the BEA...')   atomvm-internals.md:21   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Loading and execution of the BEA...')
                          MixedStyledText('Loading and execution of the BEA...')
                            SingleStyledText('Loading and execution of the BEA...')
                ListItem()   atomvm-internals.md:22   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Managing calls to internal and e...')   atomvm-internals.md:22   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Managing calls to internal and e...')
                          MixedStyledText('Managing calls to internal and e...')
                            SingleStyledText('Managing calls to internal and e...')
                ListItem()   atomvm-internals.md:23   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Creation and destruction of Erla...')   atomvm-internals.md:23   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Creation and destruction of Erla...')
                          MixedStyledText('Creation and destruction of Erla...')
                            SingleStyledText('Creation and destruction of Erla...')
                ListItem()   atomvm-internals.md:24   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Memory management (allocation an...')   atomvm-internals.md:24   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Memory management (allocation an...')
                          MixedStyledText('Memory management (allocation an...')
                            SingleStyledText('Memory management (allocation an...')
                ListItem()   atomvm-internals.md:25   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Pre-emptive scheduling and inter...')   atomvm-internals.md:25   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Pre-emptive scheduling and inter...')
                          MixedStyledText('Pre-emptive scheduling and inter...')
                            SingleStyledText('Pre-emptive scheduling and inter...')
                ListItem()   atomvm-internals.md:26   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Execution of user-defined native...')   atomvm-internals.md:26   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Execution of user-defined native...')
                          MixedStyledText('Execution of user-defined native...')
                            SingleStyledText('Execution of user-defined native...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		61')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		61')
          MixedStyledText('		61')
            Tab('	')
            Tab('	')
            Field('61')
              SingleStyledText('61')
---------------------------------- page 62 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%atomvm-internals')   <start_of_file>
          (continued) Section(id='%atomvm-internals#atomvm-internals')   atomvm-internals.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%atomvm-internals#what-is-an-abstract-machine')   atomvm-internals.md:9   <section>
              (continued) List(style='bulleted')   atomvm-internals.md:21   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   atomvm-internals.md:27   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Interfacing with the host operat...')   atomvm-internals.md:27   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Interfacing with the host operat...')
                          MixedStyledText('Interfacing with the host operat...')
                            SingleStyledText('Interfacing with the host operat...')
              Paragraph('This document provides a descrip...')   atomvm-internals.md:29   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This document provides a descrip...')
                    MixedStyledText('This document provides a descrip...')
                      SingleStyledText('This document provides a descrip...')
            Section(id='%atomvm-internals#atomvm-data-structures')   atomvm-internals.md:31   <section>
              Heading('7.2 AtomVM Data Structures')   atomvm-internals.md:31   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.2 ')
                    SingleStyledText('7.2')
                    SingleStyledText(' ')
                  MixedStyledText('AtomVM Data Structures')
                    MixedStyledText('AtomVM Data Structures')
                      SingleStyledText('AtomVM Data Structures')
              Paragraph('This section describes AtomVM in...')   atomvm-internals.md:33   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This section describes AtomVM in...')
                    MixedStyledText('This section describes AtomVM in...')
                      SingleStyledText('This section describes AtomVM in...')
                      MixedStyledText('structs', style='monospaced')   atomvm-internals.md:33   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('structs')
                      SingleStyledText(').  The descriptions will start ...')
              Section(id='%atomvm-internals#the-globalcontext')   atomvm-internals.md:35   <section>
                Heading('7.2.1 The GlobalContext')   atomvm-internals.md:35   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('7.2.1 ')
                      SingleStyledText('7.2.1')
                      SingleStyledText(' ')
                    MixedStyledText('The GlobalContext')
                      MixedStyledText('The GlobalContext')
                        SingleStyledText('The GlobalContext')
                Paragraph('We start with the top level data...')   atomvm-internals.md:37   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('We start with the top level data...')
                      MixedStyledText('We start with the top level data...')
                        SingleStyledText('We start with the top level data...')
                        MixedStyledText('GlobalContext', style='monospaced')   atomvm-internals.md:37   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('GlobalContext')
                        SingleStyledText(' struct.  This object is a singl...')
                StaticGroupedFlowables(style='block quote')   atomvm-internals.md:39   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. Given the design of the sy...')   atomvm-internals.md:39   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. Given the design of the sy...')
                        MixedStyledText('Note. Given the design of the sy...')
                          SingleStyledText('Note. Given the design of the sy...')
                Paragraph('In order to simplify the exposit...')   atomvm-internals.md:41   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In order to simplify the exposit...')
                      MixedStyledText('In order to simplify the exposit...')
                        SingleStyledText('In order to simplify the exposit...')
                List(style='bulleted')   atomvm-internals.md:43   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   atomvm-internals.md:43   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Process management – fields asso...')   atomvm-internals.md:43   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Process management – fields asso...')
                            MixedStyledText('Process management – fields asso...')
                              SingleStyledText('Process management – fields asso...')
                  ListItem()   atomvm-internals.md:44   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Atoms management – fields associ...')   atomvm-internals.md:44   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Atoms management – fields associ...')
                            MixedStyledText('Atoms management – fields associ...')
                              SingleStyledText('Atoms management – fields associ...')
                  ListItem()   atomvm-internals.md:45   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Module Management – fields assoc...')   atomvm-internals.md:45   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Module Management – fields assoc...')
                            MixedStyledText('Module Management – fields assoc...')
                              SingleStyledText('Module Management – fields assoc...')
                  ListItem()   atomvm-internals.md:46   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Reference Counted Binaries – fie...')   atomvm-internals.md:46   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Reference Counted Binaries – fie...')
                            MixedStyledText('Reference Counted Binaries – fie...')
                              SingleStyledText('Reference Counted Binaries – fie...')
                  ListItem()   atomvm-internals.md:47   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Other data structures')   atomvm-internals.md:47   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Other data structures')
                            MixedStyledText('Other data structures')
                              SingleStyledText('Other data structures')
                Paragraph('These subsets are described in m...')   atomvm-internals.md:49   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('These subsets are described in m...')
                      MixedStyledText('These subsets are described in m...')
                        SingleStyledText('These subsets are described in m...')
                StaticGroupedFlowables(style='block quote')   atomvm-internals.md:51   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Not all fields of the Glo...')   atomvm-internals.md:51   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Not all fields of the Glo...')
                        MixedStyledText('Note.  Not all fields of the Glo...')
                          SingleStyledText('Note.  Not all fields of the ')
                          MixedStyledText('GlobalContext', style='monospaced')   atomvm-internals.md:51   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('GlobalContext')
                          SingleStyledText(' structure are described in this...')
                Section(id='%atomvm-internals#process-management')   atomvm-internals.md:53   <section>
                  Heading('Process Management')   atomvm-internals.md:53   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Process Management')
                        MixedStyledText('Process Management')
                          SingleStyledText('Process Management')
                  Paragraph('As a BEAM implementation, AtomVM...')   atomvm-internals.md:55   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('As a BEAM implementation, AtomVM...')
                        MixedStyledText('As a BEAM implementation, AtomVM...')
                          SingleStyledText('As a BEAM implementation, AtomVM...')
                          MixedStyledText('Context', style='monospaced')   atomvm-internals.md:55   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Context')
                          SingleStyledText(' structure, described in more de...')
                  Paragraph('The GlobalContext structure main...')   atomvm-internals.md:57   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The GlobalContext structure main...')
                        MixedStyledText('The GlobalContext structure main...')
                          SingleStyledText('The ')
                          MixedStyledText('GlobalContext', style='monospaced')   atomvm-internals.md:57   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('GlobalContext')
                          SingleStyledText(' structure maintains a list of r...')
                  List(style='bulleted')   atomvm-internals.md:59   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   atomvm-internals.md:59   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('processes_table the list of all ...')   atomvm-internals.md:59   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('processes_table the list of all ...')
                              MixedStyledText('processes_table the list of all ...')
                                MixedStyledText('processes_table', style='monospaced')   atomvm-internals.md:59   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('processes_table')
                                SingleStyledText(' the list of all processes runni...')
                    ListItem()   atomvm-internals.md:60   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('waiting_processes the subset of ...')   atomvm-internals.md:60   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('waiting_processes the subset of ...')
                              MixedStyledText('waiting_processes the subset of ...')
                                MixedStyledText('waiting_processes', style='monospaced')   atomvm-internals.md:60   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('waiting_processes')
                                SingleStyledText(' the subset of processes that ar...')
                    ListItem()   atomvm-internals.md:61   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('ready_processes the subset of pr...')   atomvm-internals.md:61   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('ready_processes the subset of pr...')
                              MixedStyledText('ready_processes the subset of pr...')
                                MixedStyledText('ready_processes', style='monospaced')   atomvm-internals.md:61   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('ready_processes')
                                SingleStyledText(' the subset of processes that ar...')
                  Paragraph('Each of these fields are doubly-...')   atomvm-internals.md:63   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Each of these fields are doubly-...')
                        MixedStyledText('Each of these fields are doubly-...')
                          SingleStyledText('Each of these fields are doubly-...')
                          MixedStyledText('prev', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('prev')
                          SingleStyledText(' and ')
                          MixedStyledText('next', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('next')
                          SingleStyledText(' pointer field.  The ')
                          MixedStyledText('Context', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Context')
                          SingleStyledText(' data structure begins with two ...')
                          MixedStyledText('Context', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Context')
                          SingleStyledText(' struct in the ')
                          MixedStyledText('processes_table', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('processes_table')
                          SingleStyledText(' field, and the second of which ...')
                          MixedStyledText('waiting_processes', style='monospaced')   atomvm-internals.md:63   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('waiting_processes')
                          SingleStyledText(' or the ')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('62		Chapter 7.  AtomVM Internals')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('62		Chapter 7.  AtomVM Internals')
          MixedStyledText('62		Chapter 7.  AtomVM Internals')
            Field('62')
              SingleStyledText('62')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('7')
              SingleStyledText('7')
            SingleStyledText('.  ')
            Field('AtomVM Internals')
              MixedStyledText('AtomVM Internals')
                MixedStyledText('AtomVM Internals')
                  SingleStyledText('AtomVM Internals')
---------------------------------- page 63 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%atomvm-internals')   <start_of_file>
          (continued) Section(id='%atomvm-internals#atomvm-internals')   atomvm-internals.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%atomvm-internals#atomvm-data-structures')   atomvm-internals.md:31   <section>
              (continued) Section(id='%atomvm-internals#the-globalcontext')   atomvm-internals.md:35   <section>
                (continued) Section(id='%atomvm-internals#process-management')   atomvm-internals.md:53   <section>
                  (continued) Paragraph('Each of these fields are doubly-...')   atomvm-internals.md:63   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                  StaticGroupedFlowables(style='block quote')   atomvm-internals.md:65   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  The C programming languag...')   atomvm-internals.md:65   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  The C programming languag...')
                          MixedStyledText('Note.  The C programming languag...')
                            SingleStyledText('Note.  The C programming languag...')
                  Paragraph('The relationship between the Glo...')   atomvm-internals.md:68   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The relationship between the Glo...')
                        MixedStyledText('The relationship between the Glo...')
                          SingleStyledText('The relationship between the ')
                          MixedStyledText('GlobalContext', style='monospaced')   atomvm-internals.md:68   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('GlobalContext')
                          SingleStyledText(' fields that manage BEAM process...')
                          MixedStyledText('Context', style='monospaced')   atomvm-internals.md:68   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Context')
                          SingleStyledText(' data structures that represent ...')
                  Paragraph('InlineImage')   atomvm-internals.md:70   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                          InlineImage('_static/globalcontext-processes.svg')   atomvm-internals.md:70   <image>
                               x (0,0,0,0,2) inline image
  Paragraph('Error opening image file: [Errno...')
       > (0,0,0,0,2) body [Sphinx] > default
      ErrorText('Error opening image file: [Errno...', style=TextStyle)
                      MixedStyledText('InlineImage')
                        MixedStyledText('InlineImage')
                          InlineImage('_static/globalcontext-processes.svg')   atomvm-internals.md:70   <image>
                               x (0,0,0,0,2) inline image
                  StaticGroupedFlowables(style='block quote')   atomvm-internals.md:72   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  The Context data structur...')   atomvm-internals.md:72   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  The Context data structur...')
                          MixedStyledText('Note.  The Context data structur...')
                            SingleStyledText('Note.  The ')
                            MixedStyledText('Context', style='monospaced')   atomvm-internals.md:72   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('Context')
                            SingleStyledText(' data structure is described in ...')
                Section(id='module-management')   atomvm-internals.md:74   <section>
                  Heading('Module Management')   atomvm-internals.md:74   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Module Management')
                        MixedStyledText('Module Management')
                          SingleStyledText('Module Management')
                Section(id='%atomvm-internals#an-aside-what-s-in-a-hashtable')   atomvm-internals.md:76   <section>
                  Heading('An Aside: What’s in a HashTable?')   atomvm-internals.md:76   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('An Aside: What’s in a HashTable?')
                        MixedStyledText('An Aside: What’s in a HashTable?')
                          SingleStyledText('An Aside: What’s in a HashTable?')
              Section(id='%atomvm-internals#modules')   atomvm-internals.md:79   <section>
                Heading('7.2.2 Modules')   atomvm-internals.md:79   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('7.2.2 ')
                      SingleStyledText('7.2.2')
                      SingleStyledText(' ')
                    MixedStyledText('Modules')
                      MixedStyledText('Modules')
                        SingleStyledText('Modules')
              Section(id='%atomvm-internals#contexts')   atomvm-internals.md:81   <section>
                Heading('7.2.3 Contexts')   atomvm-internals.md:81   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('7.2.3 ')
                      SingleStyledText('7.2.3')
                      SingleStyledText(' ')
                    MixedStyledText('Contexts')
                      MixedStyledText('Contexts')
                        SingleStyledText('Contexts')
            Section(id='%atomvm-internals#runtime-execution-loop')   atomvm-internals.md:83   <section>
              Heading('7.3 Runtime Execution Loop')   atomvm-internals.md:83   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.3 ')
                    SingleStyledText('7.3')
                    SingleStyledText(' ')
                  MixedStyledText('Runtime Execution Loop')
                    MixedStyledText('Runtime Execution Loop')
                      SingleStyledText('Runtime Execution Loop')
            Section(id='module-loading')   atomvm-internals.md:85   <section>
              Heading('7.4 Module Loading')   atomvm-internals.md:85   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.4 ')
                    SingleStyledText('7.4')
                    SingleStyledText(' ')
                  MixedStyledText('Module Loading')
                    MixedStyledText('Module Loading')
                      SingleStyledText('Module Loading')
            Section(id='%atomvm-internals#function-calls-and-return-values')   atomvm-internals.md:87   <section>
              Heading('7.5 Function Calls and Return Va...')   atomvm-internals.md:87   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.5 ')
                    SingleStyledText('7.5')
                    SingleStyledText(' ')
                  MixedStyledText('Function Calls and Return Values')
                    MixedStyledText('Function Calls and Return Values')
                      SingleStyledText('Function Calls and Return Values')
            Section(id='%atomvm-internals#exception-handling')   atomvm-internals.md:89   <section>
              Heading('7.6 Exception Handling')   atomvm-internals.md:89   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.6 ')
                    SingleStyledText('7.6')
                    SingleStyledText(' ')
                  MixedStyledText('Exception Handling')
                    MixedStyledText('Exception Handling')
                      SingleStyledText('Exception Handling')
            Section(id='%atomvm-internals#the-scheduler')   atomvm-internals.md:91   <section>
              Heading('7.7 The Scheduler')   atomvm-internals.md:91   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.7 ')
                    SingleStyledText('7.7')
                    SingleStyledText(' ')
                  MixedStyledText('The Scheduler')
                    MixedStyledText('The Scheduler')
                      SingleStyledText('The Scheduler')
        StaticGroupedFlowables(id='%memory-management')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('7.3.  Runtime Execution Loop		63')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('7.3.  Runtime Execution Loop		63')
          MixedStyledText('7.3.  Runtime Execution Loop		63')
            Field('7.3')
              SingleStyledText('7.3')
            SingleStyledText('.  ')
            Field('Runtime Execution Loop')
              MixedStyledText('Runtime Execution Loop')
                MixedStyledText('Runtime Execution Loop')
                  SingleStyledText('Runtime Execution Loop')
            Tab('	')
            Tab('	')
            Field('63')
              SingleStyledText('63')
---------------------------------- page 64 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('64		Chapter 7.  AtomVM Internals')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('64		Chapter 7.  AtomVM Internals')
          MixedStyledText('64		Chapter 7.  AtomVM Internals')
            Field('64')
              SingleStyledText('64')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('7')
              SingleStyledText('7')
            SingleStyledText('.  ')
            Field('AtomVM Internals')
              MixedStyledText('AtomVM Internals')
                MixedStyledText('AtomVM Internals')
                  SingleStyledText('AtomVM Internals')
---------------------------------- page 65 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 8', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 8')
        MixedStyledText('Chapter 8')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('8', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('8')
  Paragraph('Memory Management', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Memory Management')
        MixedStyledText('Memory Management')
          MixedStyledText('Memory Management')
            SingleStyledText('Memory Management')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('Like most managed execution envi...')   memory-management.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('Like most managed execution envi...')
                  MixedStyledText('Like most managed execution envi...')
                    SingleStyledText('Like most managed execution envi...')
            Paragraph('Because Erlang/Elixir, and the B...')   memory-management.md:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('Because Erlang/Elixir, and the B...')
                  MixedStyledText('Because Erlang/Elixir, and the B...')
                    SingleStyledText('Because Erlang/Elixir, and the B...')
            Paragraph('AtomVM internally uses a “Contex...')   memory-management.md:13   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('AtomVM internally uses a “Contex...')
                  MixedStyledText('AtomVM internally uses a “Contex...')
                    SingleStyledText('AtomVM internally uses a “Contex...')
            Paragraph('For any given execution context,...')   memory-management.md:15   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('For any given execution context,...')
                  MixedStyledText('For any given execution context,...')
                    SingleStyledText('For any given execution context,...')
            Paragraph('The fundamental unit of memory t...')   memory-management.md:17   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The fundamental unit of memory t...')
                  MixedStyledText('The fundamental unit of memory t...')
                    SingleStyledText('The fundamental unit of memory t...')
                    MixedStyledText('term', style='monospaced')   memory-management.md:17   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('term')
                    SingleStyledText(', which is typedef’d internally ...')
                    MixedStyledText('int', style='monospaced')   memory-management.md:17   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('int')
                    SingleStyledText(').  Various tricks are used, des...')
            Paragraph('This document describes the memo...')   memory-management.md:19   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This document describes the memo...')
                  MixedStyledText('This document describes the memo...')
                    SingleStyledText('This document describes the memo...')
            Section(id='%memory-management#the-context-structure')   memory-management.md:21   <section>
              Heading('8.1 The Context structure')   memory-management.md:21   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('8.1 ')
                    SingleStyledText('8.1')
                    SingleStyledText(' ')
                  MixedStyledText('The Context structure')
                    MixedStyledText('The Context structure')
                      SingleStyledText('The Context structure')
              Section(id='%memory-management#the-heap-and-stack')   memory-management.md:23   <section>
                Heading('8.1.1 The Heap and Stack')   memory-management.md:23   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.1 ')
                      SingleStyledText('8.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('The Heap and Stack')
                      MixedStyledText('The Heap and Stack')
                        SingleStyledText('The Heap and Stack')
                Paragraph('The heap and stack for each Atom...')   memory-management.md:25   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The heap and stack for each Atom...')
                      MixedStyledText('The heap and stack for each Atom...')
                        SingleStyledText('The heap and stack for each Atom...')
                        MixedStyledText('malloc', style='monospaced')   memory-management.md:25   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('malloc')
                        SingleStyledText(' C function) in the heap space o...')
                Paragraph('The heap contains all of the all...')   memory-management.md:27   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The heap contains all of the all...')
                      MixedStyledText('The heap contains all of the all...')
                        SingleStyledText('The heap contains all of the all...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		65')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		65')
          MixedStyledText('		65')
            Tab('	')
            Tab('	')
            Field('65')
              SingleStyledText('65')
---------------------------------- page 66 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#the-context-structure')   memory-management.md:21   <section>
              (continued) Section(id='%memory-management#the-heap-and-stack')   memory-management.md:23   <section>
                Paragraph('The heap grows incrementally, as...')   memory-management.md:29   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                StaticGroupedFlowables(style='block quote')   memory-management.md:31   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. It is possible for the Ato...')   memory-management.md:31   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. It is possible for the Ato...')
                        MixedStyledText('Note. It is possible for the Ato...')
                          SingleStyledText('Note. It is possible for the Ato...')
                          MixedStyledText('malloc', style='monospaced')   memory-management.md:31   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('malloc')
                          SingleStyledText(' or equiv.  But that is a differ...')
                Paragraph('The stack grows from the top of ...')   memory-management.md:33   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The stack grows from the top of ...')
                      MixedStyledText('The stack grows from the top of ...')
                        SingleStyledText('The stack grows from the top of ...')
                        MixedStyledText('pointers', style='emphasis')   memory-management.md:33   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('pointers')
                        SingleStyledText(' to terms in the heap.  In eithe...')
                Paragraph('The region between the stack and...')   memory-management.md:35   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The region between the stack and...')
                      MixedStyledText('The region between the stack and...')
                        SingleStyledText('The region between the stack and...')
                Paragraph('The following diagram illustrate...')   memory-management.md:37   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following diagram illustrate...')
                      MixedStyledText('The following diagram illustrate...')
                        SingleStyledText('The following diagram illustrate...')
                CodeBlock('+===============================...')   memory-management.md:39   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+===============================...')
                      MixedStyledText('+===============================...')
                        Token('+===============================...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The initial size of the allocate...')   memory-management.md:67   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The initial size of the allocate...')
                      MixedStyledText('The initial size of the allocate...')
                        SingleStyledText('The initial size of the allocate...')
              Section(id='%memory-management#registers')   memory-management.md:69   <section>
                Heading('8.1.2 Registers')   memory-management.md:69   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.2 ')
                      SingleStyledText('8.1.2')
                      SingleStyledText(' ')
                    MixedStyledText('Registers')
                      MixedStyledText('Registers')
                        SingleStyledText('Registers')
                Paragraph('Registered are allocated in an a...')   memory-management.md:71   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Registered are allocated in an a...')
                      MixedStyledText('Registered are allocated in an a...')
                        SingleStyledText('Registered are allocated in an a...')
                        MixedStyledText('x', style='monospaced')   memory-management.md:71   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('x')
                        SingleStyledText(' field in the Context data struc...')
                CodeBlock('+---------+---------+---------+-...')   memory-management.md:73   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+---------+---------+---------+-...')
                      MixedStyledText('+---------+---------+---------+-...')
                        Token('+---------+---------+---------+-...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('66		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('66		Chapter 8.  Memory Managemen...')
          MixedStyledText('66		Chapter 8.  Memory Managemen...')
            Field('66')
              SingleStyledText('66')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 67 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#the-context-structure')   memory-management.md:21   <section>
              (continued) Section(id='%memory-management#registers')   memory-management.md:69   <section>
                Paragraph('Like terms in the stack, terms i...')   memory-management.md:77   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('Registers are used as part of th...')   memory-management.md:79   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Registers are used as part of th...')
                      MixedStyledText('Registers are used as part of th...')
                        SingleStyledText('Registers are used as part of th...')
              Section(id='%memory-management#process-dictionary')   memory-management.md:81   <section>
                Heading('8.1.3 Process Dictionary')   memory-management.md:81   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.3 ')
                      SingleStyledText('8.1.3')
                      SingleStyledText(' ')
                    MixedStyledText('Process Dictionary')
                      MixedStyledText('Process Dictionary')
                        SingleStyledText('Process Dictionary')
                Paragraph('AtomVM processes support a proce...')   memory-management.md:83   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM processes support a proce...')
                      MixedStyledText('AtomVM processes support a proce...')
                        SingleStyledText('AtomVM processes support a proce...')
                        MixedStyledText('erlang:put/2', style='monospaced')   memory-management.md:83   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:put/2')
                        SingleStyledText(' and ')
                        MixedStyledText('erlang:get/1', style='monospaced')   memory-management.md:83   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:get/1')
                        SingleStyledText(' functions.')
                Paragraph('The Process Dictionary contains ...')   memory-management.md:85   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The Process Dictionary contains ...')
                      MixedStyledText('The Process Dictionary contains ...')
                        SingleStyledText('The Process Dictionary contains ...')
              Section(id='%memory-management#heap-fragments')   memory-management.md:87   <section>
                Heading('8.1.4 Heap Fragments')   memory-management.md:87   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.4 ')
                      SingleStyledText('8.1.4')
                      SingleStyledText(' ')
                    MixedStyledText('Heap Fragments')
                      MixedStyledText('Heap Fragments')
                        SingleStyledText('Heap Fragments')
                Paragraph('AtomVM makes use of heap fragmen...')   memory-management.md:89   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('AtomVM makes use of heap fragmen...')
                      MixedStyledText('AtomVM makes use of heap fragmen...')
                        SingleStyledText('AtomVM makes use of heap fragmen...')
              Section(id='%memory-management#mailbox')   memory-management.md:91   <section>
                Heading('8.1.5 Mailbox')   memory-management.md:91   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.5 ')
                      SingleStyledText('8.1.5')
                      SingleStyledText(' ')
                    MixedStyledText('Mailbox')
                      MixedStyledText('Mailbox')
                        SingleStyledText('Mailbox')
                Paragraph('Each Erlang process contains a p...')   memory-management.md:93   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Each Erlang process contains a p...')
                      MixedStyledText('Each Erlang process contains a p...')
                        SingleStyledText('Each Erlang process contains a p...')
                        MixedStyledText('erlang:send/2', style='monospaced')   memory-management.md:93   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:send/2')
                        SingleStyledText(' operation, or ')
                        MixedStyledText('!', style='monospaced')   memory-management.md:93   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('!')
                        SingleStyledText(' operator.')
                Paragraph('The representation of terms in a...')   memory-management.md:95   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The representation of terms in a...')
                      MixedStyledText('The representation of terms in a...')
                        SingleStyledText('The representation of terms in a...')
                        MixedStyledText('receive ... end', style='monospaced')   memory-management.md:95   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('receive ... end')
                        SingleStyledText(').  Messages (and their term con...')
              Section(id='%memory-management#memory-graph')   memory-management.md:97   <section>
                Heading('8.1.6 Memory Graph')   memory-management.md:97   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.1.6 ')
                      SingleStyledText('8.1.6')
                      SingleStyledText(' ')
                    MixedStyledText('Memory Graph')
                      MixedStyledText('Memory Graph')
                        SingleStyledText('Memory Graph')
                Paragraph('Memory is allocated in the execu...')   memory-management.md:99   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Memory is allocated in the execu...')
                      MixedStyledText('Memory is allocated in the execu...')
                        SingleStyledText('Memory is allocated in the execu...')
                Paragraph('For example, if we look at the m...')   memory-management.md:101   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('For example, if we look at the m...')
                      MixedStyledText('For example, if we look at the m...')
                        SingleStyledText('For example, if we look at the m...')
                CodeBlock('{foo, [{bar, self()}]}\n')   memory-management.md:103   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('{foo, [{bar, self()}]}\n')
                      MixedStyledText('{foo, [{bar, self()}]}\n')
                        Token('{foo, [{bar, self()}]}\n', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('we would generally see something...')   memory-management.md:105   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('we would generally see something...')
                      MixedStyledText('we would generally see something...')
                        SingleStyledText('we would generally see something...')
                CodeBlock('|           ...             |\n| ...')   memory-management.md:107   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('|           ...             |\n| ...')
                      MixedStyledText('|           ...             |\n| ...')
                        Token('|           ...             |\n| ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.1.  The Context structure		67')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.1.  The Context structure		67')
          MixedStyledText('8.1.  The Context structure		67')
            Field('8.1')
              SingleStyledText('8.1')
            SingleStyledText('.  ')
            Field('The Context structure')
              MixedStyledText('The Context structure')
                MixedStyledText('The Context structure')
                  SingleStyledText('The Context structure')
            Tab('	')
            Tab('	')
            Field('67')
              SingleStyledText('67')
---------------------------------- page 68 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#the-context-structure')   memory-management.md:21   <section>
              (continued) Section(id='%memory-management#memory-graph')   memory-management.md:97   <section>
                (continued) CodeBlock('|           ...             |\n| ...')   memory-management.md:107   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                Paragraph('The tuple {bar, self()} is alloc...')   memory-management.md:130   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The tuple {bar, self()} is alloc...')
                      MixedStyledText('The tuple {bar, self()} is alloc...')
                        SingleStyledText('The tuple ')
                        MixedStyledText('{bar, self()}', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{bar, self()}')
                        SingleStyledText(' is allocated in a block, and th...')
                        MixedStyledText('[{bar, self()}]', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('[{bar, self()}]')
                        SingleStyledText(' (or, technically, ')
                        MixedStyledText('[{bar, self()} | []]', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('[{bar, self()} | []]')
                        SingleStyledText(') contains elements that ')
                        MixedStyledText('point', style='emphasis')   memory-management.md:130   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('point')
                        SingleStyledText(' to it elements (in this case, ')
                        MixedStyledText('[]', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('[]')
                        SingleStyledText(' and ')
                        MixedStyledText('{bar, self()}', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{bar, self()}')
                        SingleStyledText(' – note that in general, in Atom...')
                        MixedStyledText('{foo, [{bar, self()}]}', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('{foo, [{bar, self()}]}')
                        SingleStyledText(' contains the atom ')
                        MixedStyledText('foo', style='monospaced')   memory-management.md:130   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('foo')
                        SingleStyledText(' and a ')
                        MixedStyledText('pointer', style='emphasis')   memory-management.md:130   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('pointer')
                        SingleStyledText(' to the list it contains.')
                Paragraph('In this way, the set of allocate...')   memory-management.md:132   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In this way, the set of allocate...')
                      MixedStyledText('In this way, the set of allocate...')
                        SingleStyledText('In this way, the set of allocate...')
                Paragraph('The stack, registers, and proces...')   memory-management.md:134   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The stack, registers, and proces...')
                      MixedStyledText('The stack, registers, and proces...')
                        SingleStyledText('The stack, registers, and proces...')
                Paragraph('Note that the values in the stac...')   memory-management.md:136   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note that the values in the stac...')
                      MixedStyledText('Note that the values in the stac...')
                        SingleStyledText('Note that the values in the stac...')
            Section(id='%memory-management#simple-terms')   memory-management.md:138   <section>
              Heading('8.2 Simple Terms')   memory-management.md:138   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('8.2 ')
                    SingleStyledText('8.2')
                    SingleStyledText(' ')
                  MixedStyledText('Simple Terms')
                    MixedStyledText('Simple Terms')
                      SingleStyledText('Simple Terms')
              Paragraph('The fundamental unit of memory i...')   memory-management.md:140   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The fundamental unit of memory i...')
                    MixedStyledText('The fundamental unit of memory i...')
                      SingleStyledText('The fundamental unit of memory i...')
                      MixedStyledText('term', style='monospaced')   memory-management.md:140   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('term')
                      SingleStyledText(' object, which is designed to fi...')
              Paragraph('This section enumerates the Atom...')   memory-management.md:142   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('This section enumerates the Atom...')
                    MixedStyledText('This section enumerates the Atom...')
                      SingleStyledText('This section enumerates the Atom...')
              StaticGroupedFlowables(style='block quote')   memory-management.md:144   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  The term type is overload...')   memory-management.md:144   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  The term type is overload...')
                      MixedStyledText('Note.  The term type is overload...')
                        SingleStyledText('Note.  The term type is overload...')
              Paragraph('The following term types take up...')   memory-management.md:146   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following term types take up...')
                    MixedStyledText('The following term types take up...')
                      SingleStyledText('The following term types take up...')
              Section(id='%memory-management#atoms')   memory-management.md:148   <section>
                Heading('8.2.1 Atoms')   memory-management.md:148   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.2.1 ')
                      SingleStyledText('8.2.1')
                      SingleStyledText(' ')
                    MixedStyledText('Atoms')
                      MixedStyledText('Atoms')
                        SingleStyledText('Atoms')
                Paragraph('An atom is represented as a sing...')   memory-management.md:150   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('An atom is represented as a sing...')
                      MixedStyledText('An atom is represented as a sing...')
                        SingleStyledText('An atom is represented as a sing...')
                        MixedStyledText('0xB', style='monospaced')   memory-management.md:150   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0xB')
                        SingleStyledText(' (')
                        MixedStyledText('001011b', style='monospaced')   memory-management.md:150   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('001011b')
                        SingleStyledText(').  The high order word-size-6 b...')
                CodeBlock('                          |< 6  ...')   memory-management.md:152   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                          |< 6  ...')
                      MixedStyledText('                          |< 6  ...')
                        Token('                          |< 6  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('There may therefore only be 2^{w...')   memory-management.md:159   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('There may therefore only be 2^{w...')
                      MixedStyledText('There may therefore only be 2^{w...')
                        SingleStyledText('There may therefore only be ')
                        MixedStyledText('2^{word-size-6}', style='monospaced')   memory-management.md:159   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('2^{word-size-6}')
                        SingleStyledText(' atoms in an AtomVM program (e.g...')
                        MixedStyledText('67,108,864', style='monospaced')   memory-management.md:159   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('67,108,864')
                        SingleStyledText(').  Plenty to work with!')
                StaticGroupedFlowables(style='block quote')   memory-management.md:161   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. The global atom table is a...')   memory-management.md:161   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. The global atom table is a...')
                        MixedStyledText('Note. The global atom table is a...')
                          SingleStyledText('Note. The global atom table is a...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('68		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('68		Chapter 8.  Memory Managemen...')
          MixedStyledText('68		Chapter 8.  Memory Managemen...')
            Field('68')
              SingleStyledText('68')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 69 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#simple-terms')   memory-management.md:138   <section>
              (continued) Section(id='%memory-management#atoms')   memory-management.md:148   <section>
                (continued) StaticGroupedFlowables(style='block quote')   memory-management.md:161   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  (continued) Paragraph('Note. The global atom table is a...')   memory-management.md:161   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
              Section(id='%memory-management#integers')   memory-management.md:163   <section>
                Heading('8.2.2 Integers')   memory-management.md:163   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.2.2 ')
                      SingleStyledText('8.2.2')
                      SingleStyledText(' ')
                    MixedStyledText('Integers')
                      MixedStyledText('Integers')
                        SingleStyledText('Integers')
                Paragraph('An integer is represented as a s...')   memory-management.md:165   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('An integer is represented as a s...')
                      MixedStyledText('An integer is represented as a s...')
                        SingleStyledText('An integer is represented as a s...')
                        MixedStyledText('0xF', style='monospaced')   memory-management.md:165   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0xF')
                        SingleStyledText(' (')
                        MixedStyledText('1111b', style='monospaced')   memory-management.md:165   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('1111b')
                        SingleStyledText(').  The high order word-size-6 b...')
                CodeBlock('                            |< 4...')   memory-management.md:167   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                            |< 4...')
                      MixedStyledText('                            |< 4...')
                        Token('                            |< 4...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The magnitude of an integer is t...')   memory-management.md:174   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The magnitude of an integer is t...')
                      MixedStyledText('The magnitude of an integer is t...')
                        SingleStyledText('The magnitude of an integer is t...')
                        MixedStyledText('2^{word-size - 4}', style='monospaced')   memory-management.md:174   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('2^{word-size - 4}')
                        SingleStyledText(' in an AtomVM program (e.g., on ...')
                        MixedStyledText('+- 134,217,728', style='monospaced')   memory-management.md:174   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('+- 134,217,728')
                        SingleStyledText(').')
                StaticGroupedFlowables(style='block quote')   memory-management.md:176   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Arbitrarily large integer...')   memory-management.md:176   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Arbitrarily large integer...')
                        MixedStyledText('Note.  Arbitrarily large integer...')
                          SingleStyledText('Note.  Arbitrarily large integer...')
              Section(id='%memory-management#nil')   memory-management.md:178   <section>
                Heading('8.2.3 nil')   memory-management.md:178   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.2.3 ')
                      SingleStyledText('8.2.3')
                      SingleStyledText(' ')
                    MixedStyledText('nil')
                      MixedStyledText('nil')
                        SingleStyledText('nil')
                Paragraph('The special value nil (typically...')   memory-management.md:180   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The special value nil (typically...')
                      MixedStyledText('The special value nil (typically...')
                        SingleStyledText('The special value ')
                        MixedStyledText('nil', style='monospaced')   memory-management.md:180   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('nil')
                        SingleStyledText(' (typically the tail of the tail...')
                        MixedStyledText('[]', style='monospaced')   memory-management.md:180   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('[]')
                        SingleStyledText(') is the special value 0x3B:')
                CodeBlock('+===============================...')   memory-management.md:182   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+===============================...')
                      MixedStyledText('+===============================...')
                        Token('+===============================...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%memory-management#pids')   memory-management.md:189   <section>
                Heading('8.2.4 Pids')   memory-management.md:189   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.2.4 ')
                      SingleStyledText('8.2.4')
                      SingleStyledText(' ')
                    MixedStyledText('Pids')
                      MixedStyledText('Pids')
                        SingleStyledText('Pids')
                Paragraph('A Pid is represented as a single...')   memory-management.md:191   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A Pid is represented as a single...')
                      MixedStyledText('A Pid is represented as a single...')
                        SingleStyledText('A Pid is represented as a single...')
                        MixedStyledText('0x03', style='monospaced')   memory-management.md:191   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x03')
                        SingleStyledText('), and (for now), the high order...')
                        MixedStyledText('word-size - 4', style='monospaced')   memory-management.md:191   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('word-size - 4')
                        SingleStyledText(' bits store the local process id...')
                CodeBlock('                            |< 4...')   memory-management.md:193   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                            |< 4...')
                      MixedStyledText('                            |< 4...')
                        Token('                            |< 4...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('There may therefore only be 2^{w...')   memory-management.md:200   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('There may therefore only be 2^{w...')
                      MixedStyledText('There may therefore only be 2^{w...')
                        SingleStyledText('There may therefore only be ')
                        MixedStyledText('2^{word-size - 4}', style='monospaced')   memory-management.md:200   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('2^{word-size - 4}')
                        SingleStyledText(' Pids in an AtomVM program (e.g....')
                        MixedStyledText('268,435,456', style='monospaced')   memory-management.md:200   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('268,435,456')
                        SingleStyledText(').')
                StaticGroupedFlowables(style='block quote')   memory-management.md:202   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Global process IDs are no...')   memory-management.md:202   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Global process IDs are no...')
                        MixedStyledText('Note.  Global process IDs are no...')
                          SingleStyledText('Note.  Global process IDs are no...')
                          MixedStyledText('word-size - 4', style='monospaced')   memory-management.md:202   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('word-size - 4')
                          SingleStyledText(' bits.')
            Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              Heading('8.3 Boxed terms')   memory-management.md:204   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('8.3 ')
                    SingleStyledText('8.3')
                    SingleStyledText(' ')
                  MixedStyledText('Boxed terms')
                    MixedStyledText('Boxed terms')
                      SingleStyledText('Boxed terms')
              Paragraph('Some term types cannot fit in a ...')   memory-management.md:206   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Some term types cannot fit in a ...')
                    MixedStyledText('Some term types cannot fit in a ...')
                      SingleStyledText('Some term types cannot fit in a ...')
                      MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:206   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('boxed[0]')
                      SingleStyledText(') to represent the term type, an...')
                      MixedStyledText('word-size - 6', style='monospaced')   memory-management.md:206   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('word-size - 6')
                      SingleStyledText(' bits to represent the remaining...')
              Section(id='%memory-management#boxed-term-pointers')   memory-management.md:208   <section>
                Heading('8.3.1 Boxed term pointers')   memory-management.md:208   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.3.1 ')
                      SingleStyledText('8.3.1')
                      SingleStyledText(' ')
                    MixedStyledText('Boxed term pointers')
                      MixedStyledText('Boxed term pointers')
                        SingleStyledText('Boxed term pointers')
                Paragraph('Before discussing the different ...')   memory-management.md:210   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Before discussing the different ...')
                      MixedStyledText('Before discussing the different ...')
                        SingleStyledText('Before discussing the different ...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.3.  Boxed terms		69')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.3.  Boxed terms		69')
          MixedStyledText('8.3.  Boxed terms		69')
            Field('8.3')
              SingleStyledText('8.3')
            SingleStyledText('.  ')
            Field('Boxed terms')
              MixedStyledText('Boxed terms')
                MixedStyledText('Boxed terms')
                  SingleStyledText('Boxed terms')
            Tab('	')
            Tab('	')
            Field('69')
              SingleStyledText('69')
---------------------------------- page 70 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#boxed-term-pointers')   memory-management.md:208   <section>
                (continued) Paragraph('Before discussing the different ...')   memory-management.md:210   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('A boxed term pointer is a single...')   memory-management.md:212   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A boxed term pointer is a single...')
                      MixedStyledText('A boxed term pointer is a single...')
                        SingleStyledText('A boxed term pointer is a single...')
                        MixedStyledText('word-size - 2', style='monospaced')   memory-management.md:212   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('word-size - 2')
                        SingleStyledText(' bits, and ')
                        MixedStyledText('0x2', style='monospaced')   memory-management.md:212   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x2')
                        SingleStyledText(' (')
                        MixedStyledText('10b', style='monospaced')   memory-management.md:212   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('10b')
                        SingleStyledText(') in the low-order 2 bits.')
                CodeBlock('                              |2...')   memory-management.md:214   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                              |2...')
                      MixedStyledText('                              |2...')
                        Token('                              |2...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Because terms (and hence the hea...')   memory-management.md:221   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Because terms (and hence the hea...')
                      MixedStyledText('Because terms (and hence the hea...')
                        SingleStyledText('Because terms (and hence the hea...')
                        MixedStyledText('1,073,741,824', style='monospaced')   memory-management.md:221   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('1,073,741,824')
                        SingleStyledText(', on a 32-bit platform) are suff...')
              Section(id='%memory-management#references')   memory-management.md:223   <section>
                Heading('8.3.2 References')   memory-management.md:223   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.3.2 ')
                      SingleStyledText('8.3.2')
                      SingleStyledText(' ')
                    MixedStyledText('References')
                      MixedStyledText('References')
                        SingleStyledText('References')
                Paragraph('A reference (e.g., created via e...')   memory-management.md:225   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A reference (e.g., created via e...')
                      MixedStyledText('A reference (e.g., created via e...')
                        SingleStyledText('A reference (e.g., created via ')
                        MixedStyledText('erlang:make_ref/0', style='monospaced')   memory-management.md:225   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:make_ref/0')
                        SingleStyledText(') stores a 64-bit incrementing c...')
                        MixedStyledText('boxed[1]', style='monospaced')   memory-management.md:225   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('boxed[1]')
                        SingleStyledText(', and the low-order 32 bits are ...')
                        MixedStyledText('boxed[2]', style='monospaced')   memory-management.md:225   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('boxed[2]')
                        SingleStyledText(':')
                CodeBlock('                          |< 6  ...')   memory-management.md:227   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                          |< 6  ...')
                      MixedStyledText('                          |< 6  ...')
                        Token('                          |< 6  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%memory-management#tuples')   memory-management.md:239   <section>
                Heading('8.3.3 Tuples')   memory-management.md:239   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.3.3 ')
                      SingleStyledText('8.3.3')
                      SingleStyledText(' ')
                    MixedStyledText('Tuples')
                      MixedStyledText('Tuples')
                        SingleStyledText('Tuples')
                Paragraph('Tuples are represented as boxed ...')   memory-management.md:241   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Tuples are represented as boxed ...')
                      MixedStyledText('Tuples are represented as boxed ...')
                        SingleStyledText('Tuples are represented as boxed ...')
                        MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:241   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('boxed[0]')
                        SingleStyledText('), a type tag of ')
                        MixedStyledText('0x00', style='monospaced')   memory-management.md:241   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00')
                        SingleStyledText(' (')
                        MixedStyledText('000000b', style='monospaced')   memory-management.md:241   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('000000b')
                        SingleStyledText('), followed by a sequence of ')
                        MixedStyledText('n', style='monospaced')   memory-management.md:241   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('n')
                        SingleStyledText('-many words, which may either (c...')
                        MixedStyledText('n', style='monospaced')   memory-management.md:241   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('n')
                        SingleStyledText(' is the arity of the tuple:')
                CodeBlock('                          |< 6  ...')   memory-management.md:243   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                          |< 6  ...')
                      MixedStyledText('                          |< 6  ...')
                        Token('                          |< 6  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%memory-management#maps')   memory-management.md:259   <section>
                Heading('8.3.4 Maps')   memory-management.md:259   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.3.4 ')
                      SingleStyledText('8.3.4')
                      SingleStyledText(' ')
                    MixedStyledText('Maps')
                      MixedStyledText('Maps')
                        SingleStyledText('Maps')
                Paragraph('Maps are represented as boxed te...')   memory-management.md:261   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Maps are represented as boxed te...')
                      MixedStyledText('Maps are represented as boxed te...')
                        SingleStyledText('Maps are represented as boxed te...')
                        MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:261   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('boxed[0]')
                        SingleStyledText('), a type tag of ')
                        MixedStyledText('0x3C', style='monospaced')   memory-management.md:261   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x3C')
                        SingleStyledText(' (')
                        MixedStyledText('111100b', style='monospaced')   memory-management.md:261   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('111100b')
                        SingleStyledText('), followed by:')
                List(style='bulleted')   memory-management.md:263   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   memory-management.md:263   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('a term pointer to a tuple of ari...')   memory-management.md:263   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('a term pointer to a tuple of ari...')
                            MixedStyledText('a term pointer to a tuple of ari...')
                              SingleStyledText('a term pointer to a tuple of ari...')
                              MixedStyledText('n', style='monospaced')   memory-management.md:263   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('n')
                              SingleStyledText(' containing the keys in the map;')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('70		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('70		Chapter 8.  Memory Managemen...')
          MixedStyledText('70		Chapter 8.  Memory Managemen...')
            Field('70')
              SingleStyledText('70')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 71 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#maps')   memory-management.md:259   <section>
                (continued) List(style='bulleted')   memory-management.md:263   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   memory-management.md:264   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('a sequence of n-many words, cont...')   memory-management.md:264   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('a sequence of n-many words, cont...')
                            MixedStyledText('a sequence of n-many words, cont...')
                              SingleStyledText('a sequence of ')
                              MixedStyledText('n', style='monospaced')   memory-management.md:264   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('n')
                              SingleStyledText('-many words, containing the valu...')
                Paragraph('The keys and values are single w...')   memory-management.md:266   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The keys and values are single w...')
                      MixedStyledText('The keys and values are single w...')
                        SingleStyledText('The keys and values are single w...')
                CodeBlock('        +=======================...')   memory-management.md:268   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('        +=======================...')
                      MixedStyledText('        +=======================...')
                        Token('        +=======================...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('The tuple of keys may or may not...')   memory-management.md:296   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The tuple of keys may or may not...')
                      MixedStyledText('The tuple of keys may or may not...')
                        SingleStyledText('The tuple of keys may or may not...')
                        MixedStyledText(':=', style='monospaced')   memory-management.md:296   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText(':=')
                        SingleStyledText(' operator (or via ')
                        MixedStyledText('=>', style='monospaced')   memory-management.md:296   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('=>')
                        SingleStyledText(', when the key already exists in...')
              Section(id='%memory-management#binaries')   memory-management.md:298   <section>
                Heading('8.3.5 Binaries')   memory-management.md:298   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.3.5 ')
                      SingleStyledText('8.3.5')
                      SingleStyledText(' ')
                    MixedStyledText('Binaries')
                      MixedStyledText('Binaries')
                        SingleStyledText('Binaries')
                Paragraph('Binaries are stored in several d...')   memory-management.md:300   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Binaries are stored in several d...')
                      MixedStyledText('Binaries are stored in several d...')
                        SingleStyledText('Binaries are stored in several d...')
                Paragraph('Binary data less than 64 bytes i...')   memory-management.md:302   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Binary data less than 64 bytes i...')
                      MixedStyledText('Binary data less than 64 bytes i...')
                        SingleStyledText('Binary data less than 64 bytes i...')
                Paragraph('Binary data greater or equal to ...')   memory-management.md:304   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Binary data greater or equal to ...')
                      MixedStyledText('Binary data greater or equal to ...')
                        SingleStyledText('Binary data greater or equal to ...')
                        MixedStyledText('erlang:list_to_binary/1', style='monospaced')   memory-management.md:304   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('erlang:list_to_binary/1')
                        SingleStyledText(' Nif.')
                Paragraph('Non-const binaries are stored ou...')   memory-management.md:306   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Non-const binaries are stored ou...')
                      MixedStyledText('Non-const binaries are stored ou...')
                        SingleStyledText('Non-const binaries are stored ou...')
                Paragraph('Const binaries share similar fea...')   memory-management.md:308   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Const binaries share similar fea...')
                      MixedStyledText('Const binaries share similar fea...')
                        SingleStyledText('Const binaries share similar fea...')
                Paragraph('Finally, a special kind of binar...')   memory-management.md:310   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Finally, a special kind of binar...')
                      MixedStyledText('Finally, a special kind of binar...')
                        SingleStyledText('Finally, a special kind of binar...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.3.  Boxed terms		71')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.3.  Boxed terms		71')
          MixedStyledText('8.3.  Boxed terms		71')
            Field('8.3')
              SingleStyledText('8.3')
            SingleStyledText('.  ')
            Field('Boxed terms')
              MixedStyledText('Boxed terms')
                MixedStyledText('Boxed terms')
                  SingleStyledText('Boxed terms')
            Tab('	')
            Tab('	')
            Field('71')
              SingleStyledText('71')
---------------------------------- page 72 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#binaries')   memory-management.md:298   <section>
                (continued) Paragraph('Finally, a special kind of binar...')   memory-management.md:310   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                Paragraph('The following sub-sections descr...')   memory-management.md:312   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following sub-sections descr...')
                      MixedStyledText('The following sub-sections descr...')
                        SingleStyledText('The following sub-sections descr...')
                Section(id='%memory-management#heap-binaries')   memory-management.md:314   <section>
                  Heading('Heap Binaries')   memory-management.md:314   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Heap Binaries')
                        MixedStyledText('Heap Binaries')
                          SingleStyledText('Heap Binaries')
                  Paragraph('Heap binaries are represented as...')   memory-management.md:316   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Heap binaries are represented as...')
                        MixedStyledText('Heap binaries are represented as...')
                          SingleStyledText('Heap binaries are represented as...')
                          MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('boxed[0]')
                          SingleStyledText('), a type tag of ')
                          MixedStyledText('0x024', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x024')
                          SingleStyledText(' (')
                          MixedStyledText('100100b', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('100100b')
                          SingleStyledText('), followed by the size in bytes...')
                          MixedStyledText('n', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('n')
                          SingleStyledText('-many words, which contains the ...')
                          MixedStyledText('size', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('size')
                          SingleStyledText('-many bytes (')
                          MixedStyledText('<= word-size * n', style='monospaced')   memory-management.md:316   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('<= word-size * n')
                          SingleStyledText('):')
                  CodeBlock('                          |< 6  ...')   memory-management.md:318   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('                          |< 6  ...')
                        MixedStyledText('                          |< 6  ...')
                          Token('                          |< 6  ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  StaticGroupedFlowables(style='block quote')   memory-management.md:333   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  If the number of bytes in...')   memory-management.md:333   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  If the number of bytes in...')
                          MixedStyledText('Note.  If the number of bytes in...')
                            SingleStyledText('Note.  If the number of bytes in...')
                Section(id='%memory-management#reference-counted-binaries')   memory-management.md:335   <section>
                  Heading('Reference Counted Binaries')   memory-management.md:335   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Reference Counted Binaries')
                        MixedStyledText('Reference Counted Binaries')
                          SingleStyledText('Reference Counted Binaries')
                  Paragraph('Reference counted binaries are r...')   memory-management.md:337   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Reference counted binaries are r...')
                        MixedStyledText('Reference counted binaries are r...')
                          SingleStyledText('Reference counted binaries are r...')
                          MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:337   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('boxed[0]')
                          SingleStyledText('), a type tag of ')
                          MixedStyledText('0x020', style='monospaced')   memory-management.md:337   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x020')
                          SingleStyledText(' (')
                          MixedStyledText('100000b', style='monospaced')   memory-management.md:337   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('100000b')
                          SingleStyledText('), followed by the size in bytes...')
                  Paragraph('Currently, only the low-order bi...')   memory-management.md:339   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Currently, only the low-order bi...')
                        MixedStyledText('Currently, only the low-order bi...')
                          SingleStyledText('Currently, only the low-order bi...')
                          MixedStyledText('0', style='monospaced')   memory-management.md:339   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0')
                          SingleStyledText(' value of indicates that the ref...')
                  Paragraph('The off-heap data is a block of ...')   memory-management.md:341   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The off-heap data is a block of ...')
                        MixedStyledText('The off-heap data is a block of ...')
                          SingleStyledText('The off-heap data is a block of ...')
                  List(style='bulleted')   memory-management.md:343   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   memory-management.md:343   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('a ListHead structure, used to ma...')   memory-management.md:343   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('a ListHead structure, used to ma...')
                              MixedStyledText('a ListHead structure, used to ma...')
                                SingleStyledText('a ListHead structure, used to ma...')
                    ListItem()   memory-management.md:344   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('a reference count (unsigned inte...')   memory-management.md:344   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('a reference count (unsigned inte...')
                              MixedStyledText('a reference count (unsigned inte...')
                                SingleStyledText('a reference count (unsigned inte...')
                    ListItem()   memory-management.md:345   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('the size of the stored data;')   memory-management.md:345   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('the size of the stored data;')
                              MixedStyledText('the size of the stored data;')
                                SingleStyledText('the size of the stored data;')
                    ListItem()   memory-management.md:346   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('the stored data, itself.')   memory-management.md:346   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('the stored data, itself.')
                              MixedStyledText('the stored data, itself.')
                                SingleStyledText('the stored data, itself.')
                  Paragraph('All of the above data is allocat...')   memory-management.md:348   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('All of the above data is allocat...')
                        MixedStyledText('All of the above data is allocat...')
                          SingleStyledText('All of the above data is allocat...')
                          MixedStyledText('free', style='monospaced')   memory-management.md:348   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('free')
                          SingleStyledText('’d when no longer referenced.')
                  Paragraph('The reference count is initializ...')   memory-management.md:350   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The reference count is initializ...')
                        MixedStyledText('The reference count is initializ...')
                          SingleStyledText('The reference count is initializ...')
                          MixedStyledText('free', style='monospaced')   memory-management.md:350   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('free')
                          SingleStyledText('’ing data in off-heap storage is...')
                  CodeBlock('                               |...')   memory-management.md:352   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('                               |...')
                        MixedStyledText('                               |...')
                          Token('                               |...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('72		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('72		Chapter 8.  Memory Managemen...')
          MixedStyledText('72		Chapter 8.  Memory Managemen...')
            Field('72')
              SingleStyledText('72')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 73 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#binaries')   memory-management.md:298   <section>
                (continued) Section(id='%memory-management#reference-counted-binaries')   memory-management.md:335   <section>
                  (continued) CodeBlock('                               |...')   memory-management.md:352   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                  StaticGroupedFlowables(style='block quote')   memory-management.md:374   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note. The size of a reference co...')   memory-management.md:374   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note. The size of a reference co...')
                          MixedStyledText('Note. The size of a reference co...')
                            SingleStyledText('Note. The size of a reference co...')
                            MixedStyledText('erlang:memory/0,1', style='monospaced')   memory-management.md:374   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('erlang:memory/0,1')
                            SingleStyledText(').')
                  Paragraph('In addition, a reference-counted...')   memory-management.md:376   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In addition, a reference-counted...')
                        MixedStyledText('In addition, a reference-counted...')
                          SingleStyledText('In addition, a reference-counted...')
                          MixedStyledText('car', style='monospaced')   memory-management.md:376   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('car')
                          SingleStyledText(' of this cell points to the boxe...')
                          MixedStyledText('cdr', style='monospaced')   memory-management.md:376   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('cdr')
                          SingleStyledText(' points to the “previous” cons c...')
                          MixedStyledText('nil', style='monospaced')   memory-management.md:376   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('nil')
                          SingleStyledText('), otherwise.  The cons cell for...')
                Section(id='%memory-management#const-binaries')   memory-management.md:378   <section>
                  Heading('Const Binaries')   memory-management.md:378   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Const Binaries')
                        MixedStyledText('Const Binaries')
                          SingleStyledText('Const Binaries')
                  Paragraph('Const binaries are stored in the...')   memory-management.md:380   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Const binaries are stored in the...')
                        MixedStyledText('Const binaries are stored in the...')
                          SingleStyledText('Const binaries are stored in the...')
                  List(style='bulleted')   memory-management.md:382   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   memory-management.md:382   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The low order bit of the flags f...')   memory-management.md:382   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The low order bit of the flags f...')
                              MixedStyledText('The low order bit of the flags f...')
                                SingleStyledText('The low order bit of the flags f...')
                                MixedStyledText('boxed[2]', style='monospaced')   memory-management.md:382   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('boxed[2]')
                                SingleStyledText(') is ')
                                MixedStyledText('1', style='monospaced')   memory-management.md:382   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('1')
                                SingleStyledText(', to indicate that the reference...')
                    ListItem()   memory-management.md:383   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The ptr field (boxed[3]) points ...')   memory-management.md:383   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The ptr field (boxed[3]) points ...')
                              MixedStyledText('The ptr field (boxed[3]) points ...')
                                SingleStyledText('The ptr field (')
                                MixedStyledText('boxed[3]', style='monospaced')   memory-management.md:383   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('boxed[3]')
                                SingleStyledText(') points directly to the constan...')
                    ListItem()   memory-management.md:384   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The trailing cons cell elements ...')   memory-management.md:384   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The trailing cons cell elements ...')
                              MixedStyledText('The trailing cons cell elements ...')
                                SingleStyledText('The trailing cons cell elements ...')
                                MixedStyledText('nil', style='monospaced')   memory-management.md:384   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('nil')
                                SingleStyledText('.')
                  Paragraph('This heap structure has the foll...')   memory-management.md:386   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('This heap structure has the foll...')
                        MixedStyledText('This heap structure has the foll...')
                          SingleStyledText('This heap structure has the foll...')
                  CodeBlock('                          |< 6  ...')   memory-management.md:388   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('                          |< 6  ...')
                        MixedStyledText('                          |< 6  ...')
                          Token('                          |< 6  ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.3.  Boxed terms		73')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.3.  Boxed terms		73')
          MixedStyledText('8.3.  Boxed terms		73')
            Field('8.3')
              SingleStyledText('8.3')
            SingleStyledText('.  ')
            Field('Boxed terms')
              MixedStyledText('Boxed terms')
                MixedStyledText('Boxed terms')
                  SingleStyledText('Boxed terms')
            Tab('	')
            Tab('	')
            Field('73')
              SingleStyledText('73')
---------------------------------- page 74 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#binaries')   memory-management.md:298   <section>
                Section(id='%memory-management#match-binaries')   memory-management.md:404   <section>
                  Heading('Match Binaries')   memory-management.md:404   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Match Binaries')
                        MixedStyledText('Match Binaries')
                          SingleStyledText('Match Binaries')
                  Paragraph('Match binaries are represented a...')   memory-management.md:406   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Match binaries are represented a...')
                        MixedStyledText('Match binaries are represented a...')
                          SingleStyledText('Match binaries are represented a...')
                          MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:406   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('boxed[0]')
                          SingleStyledText('), a type tag of ')
                          MixedStyledText('0x04', style='monospaced')   memory-management.md:406   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x04')
                          SingleStyledText(' (')
                          MixedStyledText('000100b', style='monospaced')   memory-management.md:406   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('000100b')
                          SingleStyledText('), and the following elements:')
                  List(style='bulleted')   memory-management.md:408   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   memory-management.md:408   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('a reference to either a binary o...')   memory-management.md:408   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('a reference to either a binary o...')
                              MixedStyledText('a reference to either a binary o...')
                                SingleStyledText('a reference to either a binary o...')
                    ListItem()   memory-management.md:409   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('an offset in the referenced bina...')   memory-management.md:409   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('an offset in the referenced bina...')
                              MixedStyledText('an offset in the referenced bina...')
                                SingleStyledText('an offset in the referenced bina...')
                    ListItem()   memory-management.md:410   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('a saved state used for backtrack...')   memory-management.md:410   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('a saved state used for backtrack...')
                              MixedStyledText('a saved state used for backtrack...')
                                SingleStyledText('a saved state used for backtrack...')
                  Paragraph('Like a reference counted binary,...')   memory-management.md:412   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Like a reference counted binary,...')
                        MixedStyledText('Like a reference counted binary,...')
                          SingleStyledText('Like a reference counted binary,...')
                          MixedStyledText('car', style='monospaced')   memory-management.md:412   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('car')
                          SingleStyledText(' element points to the actual re...')
                          MixedStyledText('cdr', style='monospaced')   memory-management.md:412   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('cdr')
                          SingleStyledText(' points to the “previous” cons c...')
                  StaticGroupedFlowables(style='block quote')   memory-management.md:414   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  If the referenced binary ...')   memory-management.md:414   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  If the referenced binary ...')
                          MixedStyledText('Note.  If the referenced binary ...')
                            SingleStyledText('Note.  If the referenced binary ...')
                            MixedStyledText('nil', style='monospaced')   memory-management.md:414   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('nil')
                            SingleStyledText('.')
                  CodeBlock('some\nbinary                     ...')   memory-management.md:416   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('some\nbinary                     ...')
                        MixedStyledText('some\nbinary                     ...')
                          Token('some\nbinary                     ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('A reference to a reference-count...')   memory-management.md:433   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('A reference to a reference-count...')
                        MixedStyledText('A reference to a reference-count...')
                          SingleStyledText('A reference to a reference-count...')
                          MixedStyledText('free', style='monospaced')   memory-management.md:433   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('free')
                          SingleStyledText('ing) of a reference-counted bina...')
                Section(id='%memory-management#sub-binaries')   memory-management.md:435   <section>
                  Heading('Sub-Binaries')   memory-management.md:435   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Sub-Binaries')
                        MixedStyledText('Sub-Binaries')
                          SingleStyledText('Sub-Binaries')
                  Paragraph('Sub-binaries are represented as ...')   memory-management.md:437   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Sub-binaries are represented as ...')
                        MixedStyledText('Sub-binaries are represented as ...')
                          SingleStyledText('Sub-binaries are represented as ...')
                          MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:437   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('boxed[0]')
                          SingleStyledText('), a type tag of ')
                          MixedStyledText('0x28', style='monospaced')   memory-management.md:437   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x28')
                          SingleStyledText(' (')
                          MixedStyledText('001000b', style='monospaced')   memory-management.md:437   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('001000b')
                          SingleStyledText(')')
                  Paragraph('A sub-binary is a boxed term tha...')   memory-management.md:439   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('A sub-binary is a boxed term tha...')
                        MixedStyledText('A sub-binary is a boxed term tha...')
                          SingleStyledText('A sub-binary is a boxed term tha...')
                          MixedStyledText('offset + length', style='monospaced')   memory-management.md:439   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('offset + length')
                          SingleStyledText(' is always less than or equal to...')
                  CodeBlock('    some\n    refc\n    binary    ...')   memory-management.md:441   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('    some\n    refc\n    binary    ...')
                        MixedStyledText('    some\n    refc\n    binary    ...')
                          Token('    some\n    refc\n    binary    ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('74		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('74		Chapter 8.  Memory Managemen...')
          MixedStyledText('74		Chapter 8.  Memory Managemen...')
            Field('74')
              SingleStyledText('74')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 75 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#boxed-terms')   memory-management.md:204   <section>
              (continued) Section(id='%memory-management#binaries')   memory-management.md:298   <section>
                (continued) Section(id='%memory-management#sub-binaries')   memory-management.md:435   <section>
                  Paragraph('Note than when a sub-binary is c...')   memory-management.md:455   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                  Paragraph('A sub-binary may be created from...')   memory-management.md:457   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('A sub-binary may be created from...')
                        MixedStyledText('A sub-binary may be created from...')
                          SingleStyledText('A sub-binary may be created from...')
                  Paragraph('Sub-binaries are created via the...')   memory-management.md:459   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Sub-binaries are created via the...')
                        MixedStyledText('Sub-binaries are created via the...')
                          SingleStyledText('Sub-binaries are created via the...')
                          MixedStyledText('binary:part/3', style='monospaced')   memory-management.md:459   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('binary:part/3')
                          SingleStyledText(' and ')
                          MixedStyledText('binary:split/2', style='monospaced')   memory-management.md:459   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('binary:split/2')
                          SingleStyledText(' Nifs, as well as via the ')
                          MixedStyledText('/binary', style='monospaced')   memory-management.md:459   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('/binary')
                          SingleStyledText(' bit syntax specifier.')
            Section(id='%memory-management#lists')   memory-management.md:461   <section>
              Heading('8.4 Lists')   memory-management.md:461   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('8.4 ')
                    SingleStyledText('8.4')
                    SingleStyledText(' ')
                  MixedStyledText('Lists')
                    MixedStyledText('Lists')
                      SingleStyledText('Lists')
              Paragraph('A list is, very simply, a cons c...')   memory-management.md:463   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('A list is, very simply, a cons c...')
                    MixedStyledText('A list is, very simply, a cons c...')
                      SingleStyledText('A list is, very simply, a cons c...')
                      MixedStyledText('cdr', style='monospaced')   memory-management.md:463   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('cdr')
                      SingleStyledText(') of the list, and the second of...')
                      MixedStyledText('car', style='monospaced')   memory-management.md:463   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('car')
                      SingleStyledText(') of the list.')
              CodeBlock('+===============================...')   memory-management.md:465   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('+===============================...')
                    MixedStyledText('+===============================...')
                      Token('+===============================...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              StaticGroupedFlowables(style='block quote')   memory-management.md:473   <block_quote>
                   > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                Paragraph('Note.  Lists are typically termi...')   memory-management.md:473   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Note.  Lists are typically termi...')
                      MixedStyledText('Note.  Lists are typically termi...')
                        SingleStyledText('Note.  Lists are typically termi...')
                        MixedStyledText('[]', style='monospaced')   memory-management.md:473   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('[]')
                        SingleStyledText('), represented by the nil term, ...')
                        MixedStyledText('nil', style='monospaced')   memory-management.md:473   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('nil')
                        SingleStyledText('-terminated.')
              Paragraph('Unlike boxed terms, the low-orde...')   memory-management.md:475   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Unlike boxed terms, the low-orde...')
                    MixedStyledText('Unlike boxed terms, the low-orde...')
                      SingleStyledText('Unlike boxed terms, the low-orde...')
                      MixedStyledText('0x1', style='monospaced')   memory-management.md:475   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('0x1')
                      SingleStyledText(' (')
                      MixedStyledText('01b', style='monospaced')   memory-management.md:475   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('01b')
                      SingleStyledText('):')
              CodeBlock('+=============================+=...')   memory-management.md:477   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('+=============================+=...')
                    MixedStyledText('+=============================+=...')
                      Token('+=============================+=...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%memory-management#strings')   memory-management.md:483   <section>
                Heading('8.4.1 Strings')   memory-management.md:483   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.4.1 ')
                      SingleStyledText('8.4.1')
                      SingleStyledText(' ')
                    MixedStyledText('Strings')
                      MixedStyledText('Strings')
                        SingleStyledText('Strings')
                Paragraph('Strings are just lists of intege...')   memory-management.md:485   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Strings are just lists of intege...')
                      MixedStyledText('Strings are just lists of intege...')
                        SingleStyledText('Strings are just lists of intege...')
                CodeBlock('+===============================...')   memory-management.md:487   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+===============================...')
                      MixedStyledText('+===============================...')
                        Token('+===============================...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.4.  Lists		75')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.4.  Lists		75')
          MixedStyledText('8.4.  Lists		75')
            Field('8.4')
              SingleStyledText('8.4')
            SingleStyledText('.  ')
            Field('Lists')
              MixedStyledText('Lists')
                MixedStyledText('Lists')
                  SingleStyledText('Lists')
            Tab('	')
            Tab('	')
            Field('75')
              SingleStyledText('75')
---------------------------------- page 76 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#lists')   memory-management.md:461   <section>
              (continued) Section(id='%memory-management#strings')   memory-management.md:483   <section>
                (continued) CodeBlock('+===============================...')   memory-management.md:487   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                StaticGroupedFlowables(style='block quote')   memory-management.md:508   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  String elements may not r...')   memory-management.md:508   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  String elements may not r...')
                        MixedStyledText('Note.  String elements may not r...')
                          SingleStyledText('Note.  String elements may not r...')
              Section(id='%memory-management#functions')   memory-management.md:510   <section>
                Heading('8.4.2 Functions')   memory-management.md:510   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.4.2 ')
                      SingleStyledText('8.4.2')
                      SingleStyledText(' ')
                    MixedStyledText('Functions')
                      MixedStyledText('Functions')
                        SingleStyledText('Functions')
                Paragraph('Functions are represented as box...')   memory-management.md:512   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Functions are represented as box...')
                      MixedStyledText('Functions are represented as box...')
                        SingleStyledText('Functions are represented as box...')
                        MixedStyledText('boxed[0]', style='monospaced')   memory-management.md:512   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('boxed[0]')
                        SingleStyledText('), a type tag of ')
                        MixedStyledText('0x14', style='monospaced')   memory-management.md:512   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x14')
                        SingleStyledText(' (')
                        MixedStyledText('010100b', style='monospaced')   memory-management.md:512   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('010100b')
                        SingleStyledText('), followed by the raw memory ad...')
                Paragraph('In addition, if there are any te...')   memory-management.md:514   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In addition, if there are any te...')
                      MixedStyledText('In addition, if there are any te...')
                        SingleStyledText('In addition, if there are any te...')
                CodeBlock('                          |< 6  ...')   memory-management.md:516   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('                          |< 6  ...')
                      MixedStyledText('                          |< 6  ...')
                        Token('                          |< 6  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%memory-management#special-stack-types')   memory-management.md:533   <section>
              Heading('8.5 Special Stack Types')   memory-management.md:533   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('8.5 ')
                    SingleStyledText('8.5')
                    SingleStyledText(' ')
                  MixedStyledText('Special Stack Types')
                    MixedStyledText('Special Stack Types')
                      SingleStyledText('Special Stack Types')
              Paragraph('Some terms are only used in the ...')   memory-management.md:535   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Some terms are only used in the ...')
                    MixedStyledText('Some terms are only used in the ...')
                      SingleStyledText('Some terms are only used in the ...')
              Section(id='%memory-management#continuation-pointer')   memory-management.md:537   <section>
                Heading('8.5.1 Continuation Pointer')   memory-management.md:537   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.5.1 ')
                      SingleStyledText('8.5.1')
                      SingleStyledText(' ')
                    MixedStyledText('Continuation Pointer')
                      MixedStyledText('Continuation Pointer')
                        SingleStyledText('Continuation Pointer')
                Paragraph('A continuation pointer is a raw ...')   memory-management.md:539   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A continuation pointer is a raw ...')
                      MixedStyledText('A continuation pointer is a raw ...')
                        SingleStyledText('A continuation pointer is a raw ...')
                        MixedStyledText('0x0', style='monospaced')   memory-management.md:539   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x0')
                        SingleStyledText(' (')
                        MixedStyledText('(00000000)b', style='monospaced')   memory-management.md:539   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('(00000000)b')
                        SingleStyledText('):')
                CodeBlock('+===============================...')   memory-management.md:541   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('+===============================...')
                      MixedStyledText('+===============================...')
                        Token('+===============================...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%memory-management#catch-labels')   memory-management.md:545   <section>
                Heading('8.5.2 Catch Labels')   memory-management.md:545   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.5.2 ')
                      SingleStyledText('8.5.2')
                      SingleStyledText(' ')
                    MixedStyledText('Catch Labels')
                      MixedStyledText('Catch Labels')
                        SingleStyledText('Catch Labels')
                Paragraph('A catch label is used to indicat...')   memory-management.md:547   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A catch label is used to indicat...')
                      MixedStyledText('A catch label is used to indicat...')
                        SingleStyledText('A catch label is used to indicat...')
                        MixedStyledText('0x1B', style='monospaced')   memory-management.md:547   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x1B')
                        SingleStyledText(', the high order 8 bits holding ...')
                        MixedStyledText('m_i', style='monospaced')   memory-management.md:547   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('m_i')
                        SingleStyledText('), and the middle 18 bits holdin...')
                        MixedStyledText('l_i', style='monospaced')   memory-management.md:547   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('l_i')
                        SingleStyledText('):')
                CodeBlock('|<   8  >|<     18       >|< 6  ...')   memory-management.md:549   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('|<   8  >|<     18       >|< 6  ...')
                      MixedStyledText('|<   8  >|<     18       >|< 6  ...')
                        Token('|<   8  >|<     18       >|< 6  ...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('Module and catch label indices a...')   memory-management.md:556   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Module and catch label indices a...')
                      MixedStyledText('Module and catch label indices a...')
                        SingleStyledText('Module and catch label indices a...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('76		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('76		Chapter 8.  Memory Managemen...')
          MixedStyledText('76		Chapter 8.  Memory Managemen...')
            Field('76')
              SingleStyledText('76')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 77 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              Heading('8.6 Garbage Collection')   memory-management.md:558   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
              Paragraph('Garbage collection refers to the...')   memory-management.md:560   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Garbage collection refers to the...')
                    MixedStyledText('Garbage collection refers to the...')
                      SingleStyledText('Garbage collection refers to the...')
                      MixedStyledText('Tracing Garbage Collection', style='external link')   memory-management.md:560   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Tracing Garbage Collection')
                      SingleStyledText(', as does ')
                      MixedStyledText('Erlang Garbage Collection', style='external link')   memory-management.md:560   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Erlang Garbage Collection')
                      SingleStyledText('.  Unlike some garbage collectio...')
              Paragraph('A given process heap and stack o...')   memory-management.md:562   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('A given process heap and stack o...')
                    MixedStyledText('A given process heap and stack o...')
                      SingleStyledText('A given process heap and stack o...')
              CodeBlock('                              +-...')   memory-management.md:564   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('                              +-...')
                    MixedStyledText('                              +-...')
                      Token('                              +-...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('Terms stored in the stack, regis...')   memory-management.md:597   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Terms stored in the stack, regis...')
                    MixedStyledText('Terms stored in the stack, regis...')
                      SingleStyledText('Terms stored in the stack, regis...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.6.  Garbage Collection		77')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.6.  Garbage Collection		77')
          MixedStyledText('8.6.  Garbage Collection		77')
            Field('8.6')
              SingleStyledText('8.6')
            SingleStyledText('.  ')
            Field('Garbage Collection')
              MixedStyledText('Garbage Collection')
                MixedStyledText('Garbage Collection')
                  SingleStyledText('Garbage Collection')
            Tab('	')
            Tab('	')
            Field('77')
              SingleStyledText('77')
---------------------------------- page 78 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              Section(id='%memory-management#when-does-garbage-collection-happen')   memory-management.md:599   <section>
                Heading('8.6.1 When does garbage collecti...')   memory-management.md:599   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.6.1 ')
                      SingleStyledText('8.6.1')
                      SingleStyledText(' ')
                    MixedStyledText('When does garbage collection hap...')
                      MixedStyledText('When does garbage collection hap...')
                        SingleStyledText('When does garbage collection hap...')
                Paragraph('Garbage collection typically occ...')   memory-management.md:601   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Garbage collection typically occ...')
                      MixedStyledText('Garbage collection typically occ...')
                        SingleStyledText('Garbage collection typically occ...')
                Paragraph('Garbage collection is a synchron...')   memory-management.md:603   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Garbage collection is a synchron...')
                      MixedStyledText('Garbage collection is a synchron...')
                        SingleStyledText('Garbage collection is a ')
                        MixedStyledText('synchronous', style='emphasis')   memory-management.md:603   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('synchronous')
                        SingleStyledText(' operation in each Context (Erla...')
                StaticGroupedFlowables(style='block quote')   memory-management.md:605   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  Currently, AtomVM does no...')   memory-management.md:605   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  Currently, AtomVM does no...')
                        MixedStyledText('Note.  Currently, AtomVM does no...')
                          SingleStyledText('Note.  Currently, AtomVM does no...')
              Section(id='%memory-management#garbage-collection-steps')   memory-management.md:607   <section>
                Heading('8.6.2 Garbage Collection Steps')   memory-management.md:607   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('8.6.2 ')
                      SingleStyledText('8.6.2')
                      SingleStyledText(' ')
                    MixedStyledText('Garbage Collection Steps')
                      MixedStyledText('Garbage Collection Steps')
                        SingleStyledText('Garbage Collection Steps')
                Paragraph('Garbage collection in AtomVM can...')   memory-management.md:609   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Garbage collection in AtomVM can...')
                      MixedStyledText('Garbage collection in AtomVM can...')
                        SingleStyledText('Garbage collection in AtomVM can...')
                List(style='bulleted')   memory-management.md:611   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   memory-management.md:611   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Allocation of a new block of mem...')   memory-management.md:611   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Allocation of a new block of mem...')
                            MixedStyledText('Allocation of a new block of mem...')
                              SingleStyledText('Allocation of a new block of mem...')
                  ListItem()   memory-management.md:612   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('A “shallow copy” of all root ter...')   memory-management.md:612   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('A “shallow copy” of all root ter...')
                            MixedStyledText('A “shallow copy” of all root ter...')
                              SingleStyledText('A “shallow copy” of all root ter...')
                  ListItem()   memory-management.md:613   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('An iterative “scan and copy” of ...')   memory-management.md:613   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('An iterative “scan and copy” of ...')
                            MixedStyledText('An iterative “scan and copy” of ...')
                              SingleStyledText('An iterative “scan and copy” of ...')
                  ListItem()   memory-management.md:614   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('A sweep of the “Mark Sweep Objec...')   memory-management.md:614   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('A sweep of the “Mark Sweep Objec...')
                            MixedStyledText('A sweep of the “Mark Sweep Objec...')
                              SingleStyledText('A sweep of the “Mark Sweep Objec...')
                  ListItem()   memory-management.md:615   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Deletion of the old heap.')   memory-management.md:615   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Deletion of the old heap.')
                            MixedStyledText('Deletion of the old heap.')
                              SingleStyledText('Deletion of the old heap.')
                Paragraph('The following subsections descri...')   memory-management.md:617   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following subsections descri...')
                      MixedStyledText('The following subsections descri...')
                        SingleStyledText('The following subsections descri...')
                Section(id='%memory-management#allocation')   memory-management.md:619   <section>
                  Heading('Allocation')   memory-management.md:619   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Allocation')
                        MixedStyledText('Allocation')
                          SingleStyledText('Allocation')
                  Paragraph('Garbage collection typically occ...')   memory-management.md:621   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Garbage collection typically occ...')
                        MixedStyledText('Garbage collection typically occ...')
                          SingleStyledText('Garbage collection typically occ...')
                  Paragraph('Allocation is a straightforward ...')   memory-management.md:623   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Allocation is a straightforward ...')
                        MixedStyledText('Allocation is a straightforward ...')
                          SingleStyledText('Allocation is a straightforward ')
                          MixedStyledText('malloc', style='monospaced')   memory-management.md:623   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('malloc')
                          SingleStyledText(' in the (operating system) proce...')
                Section(id='%memory-management#shallow-copy')   memory-management.md:625   <section>
                  Heading('Shallow Copy')   memory-management.md:625   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Shallow Copy')
                        MixedStyledText('Shallow Copy')
                          SingleStyledText('Shallow Copy')
                  Paragraph('The garbage collector starts by ...')   memory-management.md:627   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The garbage collector starts by ...')
                        MixedStyledText('The garbage collector starts by ...')
                          SingleStyledText('The garbage collector starts by ...')
                  Paragraph('A shallow copy of a term depends...')   memory-management.md:629   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('A shallow copy of a term depends...')
                        MixedStyledText('A shallow copy of a term depends...')
                          SingleStyledText('A shallow copy of a term depends...')
                          MixedStyledText('may', style='emphasis')   memory-management.md:629   <emphasis>
                               > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                            SingleStyledText('may')
                          SingleStyledText(' occur in the heap elsewhere, bu...')
                  Paragraph('On the other hand, if the term i...')   memory-management.md:631   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('On the other hand, if the term i...')
                        MixedStyledText('On the other hand, if the term i...')
                          SingleStyledText('On the other hand, if the term i...')
                  List(style='bulleted')   memory-management.md:633   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   memory-management.md:633   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The boxed term is copied from th...')   memory-management.md:633   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The boxed term is copied from th...')
                              MixedStyledText('The boxed term is copied from th...')
                                SingleStyledText('The boxed term is copied from th...')
                                MixedStyledText('not', style='emphasis')   memory-management.md:633   <emphasis>
                                     > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                                  SingleStyledText('not')
                                SingleStyledText(' updated (yet); they will be as ...')
                    ListItem()   memory-management.md:634   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The first word of the existing b...')   memory-management.md:634   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The first word of the existing b...')
                              MixedStyledText('The first word of the existing b...')
                                SingleStyledText('The first word of the existing b...')
                                MixedStyledText('over-written', style='emphasis')   memory-management.md:634   <emphasis>
                                     > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                                  SingleStyledText('over-written')
                                SingleStyledText(' with a marker value (')
                                MixedStyledText('0x2b', style='monospaced')   memory-management.md:634   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('0x2b')
                                SingleStyledText(') in the old heap, and the secon...')
                    ListItem()   memory-management.md:635   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The term in the root set is upda...')   memory-management.md:635   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The term in the root set is upda...')
                              MixedStyledText('The term in the root set is upda...')
                                SingleStyledText('The term in the root set is upda...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('78		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('78		Chapter 8.  Memory Managemen...')
          MixedStyledText('78		Chapter 8.  Memory Managemen...')
            Field('78')
              SingleStyledText('78')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 79 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              (continued) Section(id='%memory-management#garbage-collection-steps')   memory-management.md:607   <section>
                (continued) Section(id='%memory-management#shallow-copy')   memory-management.md:625   <section>
                  Paragraph('This process is best illustrated...')   memory-management.md:637   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                  CodeBlock('{foo, <<1,2,3,4,...,1024>>}\n')   memory-management.md:639   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('{foo, <<1,2,3,4,...,1024>>}\n')
                        MixedStyledText('{foo, <<1,2,3,4,...,1024>>}\n')
                          Token('{foo, <<1,2,3,4,...,1024>>}\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Suppose this term resides in the...')   memory-management.md:641   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Suppose this term resides in the...')
                        MixedStyledText('Suppose this term resides in the...')
                          SingleStyledText('Suppose this term resides in the...')
                          MixedStyledText('register[i]', style='monospaced')   memory-management.md:641   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('register[i]')
                          SingleStyledText(' is a root term pointer to this ...')
                  CodeBlock('+-> |              |        |   ...')   memory-management.md:643   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('+-> |              |        |   ...')
                        MixedStyledText('+-> |              |        |   ...')
                          Token('+-> |              |        |   ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('The boxed term is copied to the ...')   memory-management.md:666   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The boxed term is copied to the ...')
                        MixedStyledText('The boxed term is copied to the ...')
                          SingleStyledText('The boxed term is copied to the ...')
                          MixedStyledText('0x2b', style='monospaced')   memory-management.md:666   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x2b')
                          SingleStyledText(', along with a pointer to the ne...')
                  CodeBlock('+-> |              | <--------+ ...')   memory-management.md:668   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('+-> |              | <--------+ ...')
                        MixedStyledText('+-> |              | <--------+ ...')
                          Token('+-> |              | <--------+ ...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Note that the first term of the ...')   memory-management.md:692   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note that the first term of the ...')
                        MixedStyledText('Note that the first term of the ...')
                          SingleStyledText('Note that the first term of the ...')
                          MixedStyledText('foo', style='monospaced')   memory-management.md:692   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('foo')
                          SingleStyledText(') is copied to the new heap, but...')
                  Paragraph('After a shallow copy of the root...')   memory-management.md:694   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('After a shallow copy of the root...')
                        MixedStyledText('After a shallow copy of the root...')
                          SingleStyledText('After a shallow copy of the root...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.6.  Garbage Collection		79')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.6.  Garbage Collection		79')
          MixedStyledText('8.6.  Garbage Collection		79')
            Field('8.6')
              SingleStyledText('8.6')
            SingleStyledText('.  ')
            Field('Garbage Collection')
              MixedStyledText('Garbage Collection')
                MixedStyledText('Garbage Collection')
                  SingleStyledText('Garbage Collection')
            Tab('	')
            Tab('	')
            Field('79')
              SingleStyledText('79')
---------------------------------- page 80 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              (continued) Section(id='%memory-management#garbage-collection-steps')   memory-management.md:607   <section>
                (continued) Section(id='%memory-management#shallow-copy')   memory-management.md:625   <section>
                  (continued) Paragraph('After a shallow copy of the root...')   memory-management.md:694   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                Section(id='%memory-management#iterative-scan-and-copy')   memory-management.md:696   <section>
                  Heading('Iterative Scan and Copy')   memory-management.md:696   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Iterative Scan and Copy')
                        MixedStyledText('Iterative Scan and Copy')
                          SingleStyledText('Iterative Scan and Copy')
                  Paragraph('The iterative scan and copy phas...')   memory-management.md:698   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The iterative scan and copy phas...')
                        MixedStyledText('The iterative scan and copy phas...')
                          SingleStyledText('The iterative scan and copy phas...')
                  List(style='bulleted')   memory-management.md:700   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   memory-management.md:700   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Starting with the newly created ...')   memory-management.md:700   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Starting with the newly created ...')
                              MixedStyledText('Starting with the newly created ...')
                                SingleStyledText('Starting with the newly created ...')
                    ListItem()   memory-management.md:701   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('If any term in this region is a ...')   memory-management.md:701   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('If any term in this region is a ...')
                              MixedStyledText('If any term in this region is a ...')
                                SingleStyledText('If any term in this region is a ...')
                                MixedStyledText('not', style='emphasis')   memory-management.md:701   <emphasis>
                                     > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                                  SingleStyledText('not')
                                SingleStyledText(' been marked as copied, perform ...')
                    ListItem()   memory-management.md:702   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Note that after iterating over a...')   memory-management.md:702   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Note that after iterating over a...')
                              MixedStyledText('Note that after iterating over a...')
                                SingleStyledText('Note that after iterating over a...')
                    ListItem()   memory-management.md:703   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('So we repeat the process on the ...')   memory-management.md:703   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('So we repeat the process on the ...')
                              MixedStyledText('So we repeat the process on the ...')
                                SingleStyledText('So we repeat the process on the ...')
                    ListItem()   memory-management.md:704   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('The process is repeated until no...')   memory-management.md:704   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('The process is repeated until no...')
                              MixedStyledText('The process is repeated until no...')
                                SingleStyledText('The process is repeated until no...')
                  Paragraph('The following sequence of iterat...')   memory-management.md:706   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The following sequence of iterat...')
                        MixedStyledText('The following sequence of iterat...')
                          SingleStyledText('The following sequence of iterat...')
                  CodeBlock('+---------------+ ===> +--------...')   memory-management.md:708   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('+---------------+ ===> +--------...')
                        MixedStyledText('+---------------+ ===> +--------...')
                          Token('+---------------+ ===> +--------...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('At the end of the iterative scan...')   memory-management.md:743   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('At the end of the iterative scan...')
                        MixedStyledText('At the end of the iterative scan...')
                          SingleStyledText('At the end of the iterative scan...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('80		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('80		Chapter 8.  Memory Managemen...')
          MixedStyledText('80		Chapter 8.  Memory Managemen...')
            Field('80')
              SingleStyledText('80')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 81 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              (continued) Section(id='%memory-management#garbage-collection-steps')   memory-management.md:607   <section>
                Section(id='%memory-management#mso-sweep')   memory-management.md:745   <section>
                  Heading('MSO Sweep')   memory-management.md:745   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  Paragraph('As mentioned in the section abov...')   memory-management.md:747   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('As mentioned in the section abov...')
                        MixedStyledText('As mentioned in the section abov...')
                          SingleStyledText('As mentioned in the section abov...')
                  Paragraph('In order to manage the memory as...')   memory-management.md:749   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('In order to manage the memory as...')
                        MixedStyledText('In order to manage the memory as...')
                          SingleStyledText('In order to manage the memory as...')
                          MixedStyledText('send', style='monospaced')   memory-management.md:749   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('send')
                          SingleStyledText(', or from a mailbox to a heap on...')
                          MixedStyledText('receive', style='monospaced')   memory-management.md:749   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('receive')
                          SingleStyledText('), the reference count is increm...')
                  Paragraph('The MSO list is formed via the c...')   memory-management.md:751   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The MSO list is formed via the c...')
                        MixedStyledText('The MSO list is formed via the c...')
                          SingleStyledText('The MSO list is formed via the c...')
                  Paragraph('The following diagram illustrate...')   memory-management.md:753   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The following diagram illustrate...')
                        MixedStyledText('The following diagram illustrate...')
                          SingleStyledText('The following diagram illustrate...')
                  CodeBlock('        |                   |\n+-...')   memory-management.md:755   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('        |                   |\n+-...')
                        MixedStyledText('        |                   |\n+-...')
                          Token('        |                   |\n+-...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('After the new heap has been scan...')   memory-management.md:787   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('After the new heap has been scan...')
                        MixedStyledText('After the new heap has been scan...')
                          SingleStyledText('After the new heap has been scan...')
                  StaticGroupedFlowables(style='block quote')   memory-management.md:789   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    Paragraph('Note.  Const binaries, while the...')   memory-management.md:789   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Note.  Const binaries, while the...')
                          MixedStyledText('Note.  Const binaries, while the...')
                            SingleStyledText('Note.  Const binaries, while the...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8.6.  Garbage Collection		81')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8.6.  Garbage Collection		81')
          MixedStyledText('8.6.  Garbage Collection		81')
            Field('8.6')
              SingleStyledText('8.6')
            SingleStyledText('.  ')
            Field('Garbage Collection')
              MixedStyledText('Garbage Collection')
                MixedStyledText('Garbage Collection')
                  SingleStyledText('Garbage Collection')
            Tab('	')
            Tab('	')
            Field('81')
              SingleStyledText('81')
---------------------------------- page 82 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%memory-management')   <start_of_file>
          (continued) Section(id='%memory-management#memory-management')   memory-management.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%memory-management#garbage-collection')   memory-management.md:558   <section>
              (continued) Section(id='%memory-management#garbage-collection-steps')   memory-management.md:607   <section>
                (continued) Section(id='%memory-management#mso-sweep')   memory-management.md:745   <section>
                  (continued) StaticGroupedFlowables(style='block quote')   memory-management.md:789   <block_quote>
                       > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                    (continued) Paragraph('Note.  Const binaries, while the...')   memory-management.md:789   <paragraph>
                         > (0,0,0,0,2) body [Sphinx] > default
                Section(id='%memory-management#deletion')   memory-management.md:791   <section>
                  Heading('Deletion')   memory-management.md:791   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Deletion')
                        MixedStyledText('Deletion')
                          SingleStyledText('Deletion')
                  Paragraph('Once all terms have been copied ...')   memory-management.md:793   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Once all terms have been copied ...')
                        MixedStyledText('Once all terms have been copied ...')
                          SingleStyledText('Once all terms have been copied ...')
                          MixedStyledText('free', style='monospaced')   memory-management.md:793   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('free')
                          SingleStyledText(' function.')
        StaticGroupedFlowables(id='%packbeam-format')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('82		Chapter 8.  Memory Managemen...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('82		Chapter 8.  Memory Managemen...')
          MixedStyledText('82		Chapter 8.  Memory Managemen...')
            Field('82')
              SingleStyledText('82')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('8')
              SingleStyledText('8')
            SingleStyledText('.  ')
            Field('Memory Management')
              MixedStyledText('Memory Management')
                MixedStyledText('Memory Management')
                  SingleStyledText('Memory Management')
---------------------------------- page 83 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 9', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 9')
        MixedStyledText('Chapter 9')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('9', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('9')
  Paragraph('Packbeam Format', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Packbeam Format')
        MixedStyledText('Packbeam Format')
          MixedStyledText('Packbeam Format')
            SingleStyledText('Packbeam Format')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%packbeam-format')   <start_of_file>
          Section(id='%packbeam-format#packbeam-format')   packbeam-format.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('AtomVM makes use of the packbeam...')   packbeam-format.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('AtomVM makes use of the packbeam...')
                  MixedStyledText('AtomVM makes use of the packbeam...')
                    SingleStyledText('AtomVM makes use of the packbeam...')
            Paragraph('AtomVM provides a simple tool fo...')   packbeam-format.md:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('AtomVM provides a simple tool fo...')
                  MixedStyledText('AtomVM provides a simple tool fo...')
                    SingleStyledText('AtomVM provides a simple tool fo...')
                    MixedStyledText('Mix', style='monospaced')   packbeam-format.md:11   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('Mix')
                    SingleStyledText(' and ')
                    MixedStyledText('rebar3', style='monospaced')   packbeam-format.md:11   <literal>
                         > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                      SingleStyledText('rebar3')
                    SingleStyledText('.')
            Paragraph('This document describes the pack...')   packbeam-format.md:13   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('This document describes the pack...')
                  MixedStyledText('This document describes the pack...')
                    SingleStyledText('This document describes the pack...')
            Section(id='%packbeam-format#overview')   packbeam-format.md:15   <section>
              Heading('9.1 Overview')   packbeam-format.md:15   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('9.1 ')
                    SingleStyledText('9.1')
                    SingleStyledText(' ')
                  MixedStyledText('Overview')
                    MixedStyledText('Overview')
                      SingleStyledText('Overview')
              Paragraph('Packbeam files are binary-encode...')   packbeam-format.md:17   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Packbeam files are binary-encode...')
                    MixedStyledText('Packbeam files are binary-encode...')
                      SingleStyledText('Packbeam files are binary-encode...')
              Paragraph('All binary integer values are 32...')   packbeam-format.md:19   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('All binary integer values are 32...')
                    MixedStyledText('All binary integer values are 32...')
                      SingleStyledText('All binary integer values are 32...')
              Paragraph('At present, the AtomVM runtime t...')   packbeam-format.md:21   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('At present, the AtomVM runtime t...')
                    MixedStyledText('At present, the AtomVM runtime t...')
                      SingleStyledText('At present, the AtomVM runtime t...')
                      MixedStyledText('read-only', style='emphasis')   packbeam-format.md:21   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('read-only')
                      SingleStyledText(' data.  There is no support for ...')
            Section(id='%packbeam-format#packbeam-header')   packbeam-format.md:23   <section>
              Heading('9.2 Packbeam Header')   packbeam-format.md:23   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('9.2 ')
                    SingleStyledText('9.2')
                    SingleStyledText(' ')
                  MixedStyledText('Packbeam Header')
                    MixedStyledText('Packbeam Header')
                      SingleStyledText('Packbeam Header')
              Paragraph('All AtomVM files begin with the ...')   packbeam-format.md:25   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('All AtomVM files begin with the ...')
                    MixedStyledText('All AtomVM files begin with the ...')
                      SingleStyledText('All AtomVM files begin with the ...')
              CodeBlock('0x23, 0x21, 0x2f, 0x75,\n0x73, 0x...')   packbeam-format.md:27   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('0x23, 0x21, 0x2f, 0x75,\n0x73, 0x...')
                    MixedStyledText('0x23, 0x21, 0x2f, 0x75,\n0x73, 0x...')
                      Token('0x23, 0x21, 0x2f, 0x75,\n0x73, 0x...', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The ASCII encoding of this seque...')   packbeam-format.md:34   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The ASCII encoding of this seque...')
                    MixedStyledText('The ASCII encoding of this seque...')
                      SingleStyledText('The ASCII encoding of this seque...')
              CodeBlock('#!/usr/bin/env AtomVM\n\n')   packbeam-format.md:36   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('#!/usr/bin/env AtomVM\n\n')
                    MixedStyledText('#!/usr/bin/env AtomVM\n\n')
                      Token('#!/usr/bin/env AtomVM\n\n', type=Token.Text)
                           > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('followed by two nil (0x00) bytes...')   packbeam-format.md:38   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('followed by two nil (0x00) bytes...')
                    MixedStyledText('followed by two nil (0x00) bytes...')
                      SingleStyledText('followed by two nil (')
                      MixedStyledText('0x00', style='monospaced')   packbeam-format.md:38   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('0x00')
                      SingleStyledText(') bytes.')
              Paragraph('The packbeam header is followed ...')   packbeam-format.md:40   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The packbeam header is followed ...')
                    MixedStyledText('The packbeam header is followed ...')
                      SingleStyledText('The packbeam header is followed ...')
                      MixedStyledText('end', style='monospaced')   packbeam-format.md:40   <literal>
                           > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                        SingleStyledText('end')
                      SingleStyledText(' file header, marking the end of...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		83')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		83')
          MixedStyledText('		83')
            Tab('	')
            Tab('	')
            Field('83')
              SingleStyledText('83')
---------------------------------- page 84 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%packbeam-format')   <start_of_file>
          (continued) Section(id='%packbeam-format#packbeam-format')   packbeam-format.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%packbeam-format#file-encodings')   packbeam-format.md:42   <section>
              Heading('9.3 File encodings')   packbeam-format.md:42   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
              Paragraph('Each embedded file in a packbeam...')   packbeam-format.md:44   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Each embedded file in a packbeam...')
                    MixedStyledText('Each embedded file in a packbeam...')
                      SingleStyledText('Each embedded file in a packbeam...')
              Section(id='%packbeam-format#file-header')   packbeam-format.md:46   <section>
                Heading('9.3.1 File Header')   packbeam-format.md:46   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('9.3.1 ')
                      SingleStyledText('9.3.1')
                      SingleStyledText(' ')
                    MixedStyledText('File Header')
                      MixedStyledText('File Header')
                        SingleStyledText('File Header')
                Paragraph('The file header consists of the ...')   packbeam-format.md:48   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The file header consists of the ...')
                      MixedStyledText('The file header consists of the ...')
                        SingleStyledText('The file header consists of the ...')
                List(style='bulleted')   packbeam-format.md:50   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   packbeam-format.md:50   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('size (32 bit, big-endian)')   packbeam-format.md:50   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('size (32 bit, big-endian)')
                            MixedStyledText('size (32 bit, big-endian)')
                              MixedStyledText('size', style='monospaced')   packbeam-format.md:50   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('size')
                              SingleStyledText(' (32 bit, big-endian)')
                  ListItem()   packbeam-format.md:51   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('flags (32-bit, big endian)')   packbeam-format.md:51   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('flags (32-bit, big endian)')
                            MixedStyledText('flags (32-bit, big endian)')
                              MixedStyledText('flags', style='monospaced')   packbeam-format.md:51   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('flags')
                              SingleStyledText(' (32-bit, big endian)')
                  ListItem()   packbeam-format.md:52   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('reserved (32-bit, big-endian, cu...')   packbeam-format.md:52   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('reserved (32-bit, big-endian, cu...')
                            MixedStyledText('reserved (32-bit, big-endian, cu...')
                              MixedStyledText('reserved', style='monospaced')   packbeam-format.md:52   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('reserved')
                              SingleStyledText(' (32-bit, big-endian, currently ...')
                  ListItem()   packbeam-format.md:53   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('module_name (null-terminated seq...')   packbeam-format.md:53   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('module_name (null-terminated seq...')
                            MixedStyledText('module_name (null-terminated seq...')
                              MixedStyledText('module_name', style='monospaced')   packbeam-format.md:53   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('module_name')
                              SingleStyledText(' (null-terminated sequence of by...')
                Paragraph('The size field indicates the siz...')   packbeam-format.md:55   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The size field indicates the siz...')
                      MixedStyledText('The size field indicates the siz...')
                        SingleStyledText('The ')
                        MixedStyledText('size', style='monospaced')   packbeam-format.md:55   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('size')
                        SingleStyledText(' field indicates the size (in by...')
                Paragraph('Currently, the two low-order bit...')   packbeam-format.md:57   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Currently, the two low-order bit...')
                      MixedStyledText('Currently, the two low-order bit...')
                        SingleStyledText('Currently, the two low-order bit...')
                        MixedStyledText('flags', style='monospaced')   packbeam-format.md:57   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('flags')
                        SingleStyledText(' field are used.  ')
                        MixedStyledText('0x02', style='monospaced')   packbeam-format.md:57   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x02')
                        SingleStyledText(' indicates the file is a BEAM fi...')
                        MixedStyledText('0x01', style='monospaced')   packbeam-format.md:57   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x01')
                        SingleStyledText(' indicates that the file contain...')
                        MixedStyledText('start/0', style='monospaced')   packbeam-format.md:57   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' function, and is therefore suit...')
                StaticGroupedFlowables(style='block quote')   packbeam-format.md:59   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('When AtomVM starts, it will scan...')   packbeam-format.md:59   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('When AtomVM starts, it will scan...')
                        MixedStyledText('When AtomVM starts, it will scan...')
                          SingleStyledText('When AtomVM starts, it will scan...')
                          MixedStyledText('start/0', style='monospaced')   packbeam-format.md:59   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('start/0')
                          SingleStyledText(' function, i.e., whose flags mas...')
                          MixedStyledText('0x03', style='monospaced')   packbeam-format.md:59   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('0x03')
                          SingleStyledText('.  It is conventional, but not r...')
                          MixedStyledText('start/0', style='monospaced')   packbeam-format.md:59   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('start/0')
                          SingleStyledText(' entrypoint.')
                Paragraph('The reserved field is currently ...')   packbeam-format.md:61   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The reserved field is currently ...')
                      MixedStyledText('The reserved field is currently ...')
                        SingleStyledText('The ')
                        MixedStyledText('reserved', style='monospaced')   packbeam-format.md:61   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('reserved')
                        SingleStyledText(' field is currently unused.')
                Paragraph('The module_name is variable leng...')   packbeam-format.md:63   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The module_name is variable leng...')
                      MixedStyledText('The module_name is variable leng...')
                        SingleStyledText('The ')
                        MixedStyledText('module_name', style='monospaced')   packbeam-format.md:63   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('module_name')
                        SingleStyledText(' is variable length, null termin...')
                        MixedStyledText('0x00', style='monospaced')   packbeam-format.md:63   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00')
                        SingleStyledText('), in order to align the start o...')
              Section(id='%packbeam-format#example')   packbeam-format.md:65   <section>
                Heading('9.3.2 Example')   packbeam-format.md:65   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('9.3.2 ')
                      SingleStyledText('9.3.2')
                      SingleStyledText(' ')
                    MixedStyledText('Example')
                      MixedStyledText('Example')
                        SingleStyledText('Example')
                Paragraph('The following BEAM header indica...')   packbeam-format.md:67   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following BEAM header indica...')
                      MixedStyledText('The following BEAM header indica...')
                        SingleStyledText('The following BEAM header indica...')
                        MixedStyledText('0x00000134', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00000134')
                        SingleStyledText('), with a ')
                        MixedStyledText('start/0', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('start/0')
                        SingleStyledText(' entrypoint (')
                        MixedStyledText('0x00000003', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00000003')
                        SingleStyledText('), and named ')
                        MixedStyledText('mylib.beam', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mylib.beam')
                        SingleStyledText(' (')
                        MixedStyledText('0x6D796C69 622E6265 616D00', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x6D796C69 622E6265 616D00')
                        SingleStyledText(').  The header has a 1-byte padd...')
                        MixedStyledText('0x00', style='monospaced')   packbeam-format.md:67   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00')
                        SingleStyledText(') characters.')
                CodeBlock('00000134 00000003 00000000 6D796...')   packbeam-format.md:69   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('00000134 00000003 00000000 6D796...')
                      MixedStyledText('00000134 00000003 00000000 6D796...')
                        Token('00000134 00000003 00000000 6D796...', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
              Section(id='%packbeam-format#beam-files')   packbeam-format.md:71   <section>
                Heading('9.3.3 BEAM files')   packbeam-format.md:71   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('9.3.3 ')
                      SingleStyledText('9.3.3')
                      SingleStyledText(' ')
                    MixedStyledText('BEAM files')
                      MixedStyledText('BEAM files')
                        SingleStyledText('BEAM files')
                Paragraph('BEAM files obey IFF encoding as ...')   packbeam-format.md:73   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('BEAM files obey IFF encoding as ...')
                      MixedStyledText('BEAM files obey IFF encoding as ...')
                        SingleStyledText('BEAM files obey ')
                        SingleStyledText('IFF')
                        SingleStyledText(' encoding as detailed ')
                        SingleStyledText('here')
                        SingleStyledText(', but certain information in BEA...')
                Paragraph('The following BEAM chunks are in...')   packbeam-format.md:75   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following BEAM chunks are in...')
                      MixedStyledText('The following BEAM chunks are in...')
                        SingleStyledText('The following BEAM chunks are in...')
                List(style='bulleted')   packbeam-format.md:77   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   packbeam-format.md:77   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('AtU8')   packbeam-format.md:77   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('AtU8')
                            MixedStyledText('AtU8')
                              MixedStyledText('AtU8', style='monospaced')   packbeam-format.md:77   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('AtU8')
                  ListItem()   packbeam-format.md:78   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('Code')   packbeam-format.md:78   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('Code')
                            MixedStyledText('Code')
                              MixedStyledText('Code', style='monospaced')   packbeam-format.md:78   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('Code')
                  ListItem()   packbeam-format.md:79   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('ExpT')   packbeam-format.md:79   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ExpT')
                            MixedStyledText('ExpT')
                              MixedStyledText('ExpT', style='monospaced')   packbeam-format.md:79   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('ExpT')
                  ListItem()   packbeam-format.md:80   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('LocT')   packbeam-format.md:80   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('LocT')
                            MixedStyledText('LocT')
                              MixedStyledText('LocT', style='monospaced')   packbeam-format.md:80   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('LocT')
                  ListItem()   packbeam-format.md:81   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('ImpT')   packbeam-format.md:81   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('ImpT')
                            MixedStyledText('ImpT')
                              MixedStyledText('ImpT', style='monospaced')   packbeam-format.md:81   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('ImpT')
                  ListItem()   packbeam-format.md:82   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('LitU')   packbeam-format.md:82   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('LitU')
                            MixedStyledText('LitU')
                              MixedStyledText('LitU', style='monospaced')   packbeam-format.md:82   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('LitU')
                  ListItem()   packbeam-format.md:83   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('FunT')   packbeam-format.md:83   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('FunT')
                            MixedStyledText('FunT')
                              MixedStyledText('FunT', style='monospaced')   packbeam-format.md:83   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('FunT')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('84		Chapter 9.  Packbeam Format')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('84		Chapter 9.  Packbeam Format')
          MixedStyledText('84		Chapter 9.  Packbeam Format')
            Field('84')
              SingleStyledText('84')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('9')
              SingleStyledText('9')
            SingleStyledText('.  ')
            Field('Packbeam Format')
              MixedStyledText('Packbeam Format')
                MixedStyledText('Packbeam Format')
                  SingleStyledText('Packbeam Format')
---------------------------------- page 85 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%packbeam-format')   <start_of_file>
          (continued) Section(id='%packbeam-format#packbeam-format')   packbeam-format.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%packbeam-format#file-encodings')   packbeam-format.md:42   <section>
              (continued) Section(id='%packbeam-format#beam-files')   packbeam-format.md:71   <section>
                (continued) List(style='bulleted')   packbeam-format.md:77   <bullet_list>
                     > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                  ListItem()   packbeam-format.md:84   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('StrT')   packbeam-format.md:84   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('StrT')
                            MixedStyledText('StrT')
                              MixedStyledText('StrT', style='monospaced')   packbeam-format.md:84   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('StrT')
                  ListItem()   packbeam-format.md:85   <list_item>
                       x (0,0,1,0,4) bulleted list item
                    ListItemLabel('•')
                         > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                           (0,0,0,0,2) list item label [Sphinx] > default
                        MixedStyledText('•')
                          SingleStyledText('')
                          SingleStyledText('•')
                          SingleStyledText('')
                    StaticGroupedFlowables()
                         > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                      Paragraph('LitT')   packbeam-format.md:85   <paragraph>
                           > (0,0,0,0,5) list item paragraph [Sphinx] > default
                             (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('LitT')
                            MixedStyledText('LitT')
                              MixedStyledText('LitT', style='monospaced')   packbeam-format.md:85   <literal>
                                   > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                SingleStyledText('LitT')
                Paragraph('Any other chunks are stripped ou...')   packbeam-format.md:87   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Any other chunks are stripped ou...')
                      MixedStyledText('Any other chunks are stripped ou...')
                        SingleStyledText('Any other chunks are stripped ou...')
                Paragraph('In addition, data in the literal...')   packbeam-format.md:89   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('In addition, data in the literal...')
                      MixedStyledText('In addition, data in the literal...')
                        SingleStyledText('In addition, data in the literal...')
                        MixedStyledText('LitT', style='monospaced')   packbeam-format.md:89   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('LitT')
                        SingleStyledText(') are uncompressed before insert...')
                        MixedStyledText('zlib', style='monospaced')   packbeam-format.md:89   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('zlib')
                        SingleStyledText(' decompression.')
                Paragraph('BEAM files may be padded at the ...')   packbeam-format.md:91   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('BEAM files may be padded at the ...')
                      MixedStyledText('BEAM files may be padded at the ...')
                        SingleStyledText('BEAM files may be padded at the ...')
                        MixedStyledText('0x00', style='monospaced')   packbeam-format.md:91   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('0x00')
                        SingleStyledText(') characters, in order to align ...')
                StaticGroupedFlowables(style='block quote')   packbeam-format.md:93   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note.  The module_name field in ...')   packbeam-format.md:93   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note.  The module_name field in ...')
                        MixedStyledText('Note.  The module_name field in ...')
                          SingleStyledText('Note.  The ')
                          MixedStyledText('module_name', style='monospaced')   packbeam-format.md:93   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('module_name')
                          SingleStyledText(' field in the file header will o...')
              Section(id='%packbeam-format#normal-files')   packbeam-format.md:95   <section>
                Heading('9.3.4 Normal Files')   packbeam-format.md:95   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('9.3.4 ')
                      SingleStyledText('9.3.4')
                      SingleStyledText(' ')
                    MixedStyledText('Normal Files')
                      MixedStyledText('Normal Files')
                        SingleStyledText('Normal Files')
                Paragraph('Normal files (e.g., text files, ...')   packbeam-format.md:97   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Normal files (e.g., text files, ...')
                      MixedStyledText('Normal files (e.g., text files, ...')
                        SingleStyledText('Normal files (e.g., text files, ...')
                Paragraph('Normal files contain a 32-bit bi...')   packbeam-format.md:99   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Normal files contain a 32-bit bi...')
                      MixedStyledText('Normal files contain a 32-bit bi...')
                        SingleStyledText('Normal files contain a 32-bit bi...')
                        MixedStyledText('size', style='monospaced')   packbeam-format.md:99   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('size')
                        SingleStyledText(' field in the file header includ...')
                Paragraph('The AtomVM runtime provides acce...')   packbeam-format.md:101   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The AtomVM runtime provides acce...')
                      MixedStyledText('The AtomVM runtime provides acce...')
                        SingleStyledText('The AtomVM runtime provides acce...')
                        MixedStyledText('atomvm:read_priv/2', style='monospaced')   packbeam-format.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('atomvm:read_priv/2')
                        SingleStyledText(' NIF.  This function will create...')
                        MixedStyledText('App', style='monospaced')   packbeam-format.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('App')
                        SingleStyledText(' (atom) and ')
                        MixedStyledText('Path', style='monospaced')   packbeam-format.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('Path')
                        SingleStyledText(' (string) terms provided by this...')
                        MixedStyledText('"/priv/"', style='monospaced')   packbeam-format.md:101   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('"/priv/"')
                        SingleStyledText('.  For example, the expression')
                CodeBlock('atomvm:read_priv(mylib, "sample....')   packbeam-format.md:103   <literal_block>
                     > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                       (0,0,0,0,1) body [Sphinx] > default
                    MixedStyledText('atomvm:read_priv(mylib, "sample....')
                      MixedStyledText('atomvm:read_priv(mylib, "sample....')
                        Token('atomvm:read_priv(mylib, "sample....', type=Token.Text)
                             > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                Paragraph('yields a binary containing the c...')   packbeam-format.md:105   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('yields a binary containing the c...')
                      MixedStyledText('yields a binary containing the c...')
                        SingleStyledText('yields a ')
                        MixedStyledText('binary', style='monospaced')   packbeam-format.md:105   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('binary')
                        SingleStyledText(' containing the contents of ')
                        MixedStyledText('mylib/priv/sample.txt', style='monospaced')   packbeam-format.md:105   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('mylib/priv/sample.txt')
                        SingleStyledText(', if it exists, in the AtomVM pa...')
                Paragraph('As a consequence, normal files s...')   packbeam-format.md:107   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('As a consequence, normal files s...')
                      MixedStyledText('As a consequence, normal files s...')
                        SingleStyledText('As a consequence, normal files s...')
                StaticGroupedFlowables(style='block quote')   packbeam-format.md:109   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  Paragraph('Note. Normal file names may enco...')   packbeam-format.md:109   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Note. Normal file names may enco...')
                        MixedStyledText('Note. Normal file names may enco...')
                          SingleStyledText('Note. Normal file names may enco...')
                          MixedStyledText('mylib/priv/another/sample/text/f...', style='monospaced')   packbeam-format.md:109   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('mylib/priv/another/sample/text/f...')
                          SingleStyledText('.  There is no requirement that ...')
                          MixedStyledText('Path', style='monospaced')   packbeam-format.md:109   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('Path')
                          SingleStyledText(' component of a normal file be a...')
              Section(id='%packbeam-format#end-file')   packbeam-format.md:111   <section>
                Heading('9.3.5 end file')   packbeam-format.md:111   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('9.3.5 ')
                      SingleStyledText('9.3.5')
                      SingleStyledText(' ')
                    MixedStyledText('end file')
                      MixedStyledText('end file')
                        MixedStyledText('end', style='monospaced')   packbeam-format.md:111   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('end')
                        SingleStyledText(' file')
                Paragraph('Packbeam files end with a specia...')   packbeam-format.md:113   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Packbeam files end with a specia...')
                      MixedStyledText('Packbeam files end with a specia...')
                        SingleStyledText('Packbeam files end with a specia...')
                        MixedStyledText('end', style='monospaced')   packbeam-format.md:113   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('end')
                        SingleStyledText(' header.  The ')
                        MixedStyledText('size', style='monospaced')   packbeam-format.md:113   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('size')
                        SingleStyledText(' field of the ')
                        MixedStyledText('end', style='monospaced')   packbeam-format.md:113   <literal>
                             > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                          SingleStyledText('end')
                        SingleStyledText(' header is 0 bytes.')
                Section(id='%packbeam-format#id1')   packbeam-format.md:115   <section>
                  Heading('Example')   packbeam-format.md:115   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Example')
                        MixedStyledText('Example')
                          SingleStyledText('Example')
                  Paragraph('The following sequence of bytes ...')   packbeam-format.md:117   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('The following sequence of bytes ...')
                        MixedStyledText('The following sequence of bytes ...')
                          SingleStyledText('The following sequence of bytes ...')
                          MixedStyledText('end', style='monospaced')   packbeam-format.md:117   <literal>
                               > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                            SingleStyledText('end')
                          SingleStyledText(' header:')
                  CodeBlock('00000000 00000000 00000000 656E6...')   packbeam-format.md:119   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('00000000 00000000 00000000 656E6...')
                        MixedStyledText('00000000 00000000 00000000 656E6...')
                          Token('00000000 00000000 00000000 656E6...', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
        StaticGroupedFlowables(id='%api-reference-documentation')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		AtomVM, Release 0.5.0')
          MixedStyledText('		AtomVM, Release 0.5.0')
            Tab('	')
            Tab('	')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('9.3.  File encodings		85')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('9.3.  File encodings		85')
          MixedStyledText('9.3.  File encodings		85')
            Field('9.3')
              SingleStyledText('9.3')
            SingleStyledText('.  ')
            Field('File encodings')
              MixedStyledText('File encodings')
                MixedStyledText('File encodings')
                  SingleStyledText('File encodings')
            Tab('	')
            Tab('	')
            Field('85')
              SingleStyledText('85')
---------------------------------- page 86 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%api-reference-documentation')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('86		Chapter 9.  Packbeam Format')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('86		Chapter 9.  Packbeam Format')
          MixedStyledText('86		Chapter 9.  Packbeam Format')
            Field('86')
              SingleStyledText('86')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('9')
              SingleStyledText('9')
            SingleStyledText('.  ')
            Field('Packbeam Format')
              MixedStyledText('Packbeam Format')
                MixedStyledText('Packbeam Format')
                  SingleStyledText('Packbeam Format')
---------------------------------- page 87 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 10', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 10')
        MixedStyledText('Chapter 10')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('10', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('10')
  Paragraph('API Reference Documentation', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('API Reference Documentation')
        MixedStyledText('API Reference Documentation')
          MixedStyledText('API Reference Documentation')
            SingleStyledText('API Reference Documentation')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%api-reference-documentation')   <start_of_file>
          Section(id='%api-reference-documentation#api-reference-documentation')   api-reference-documentation.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%api-reference-documentation#erlang-libraries')   api-reference-documentation.md:9   <section>
              Heading('10.1 Erlang Libraries')   api-reference-documentation.md:9   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('10.1 ')
                    SingleStyledText('10.1')
                    SingleStyledText(' ')
                  MixedStyledText('Erlang Libraries')
                    MixedStyledText('Erlang Libraries')
                      SingleStyledText('Erlang Libraries')
              List(style='bulleted')   api-reference-documentation.md:11   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   api-reference-documentation.md:11   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('estdlib')   api-reference-documentation.md:11   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('estdlib')
                          MixedStyledText('estdlib')
                            SingleStyledText('estdlib')
                ListItem()   api-reference-documentation.md:12   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('eavmlib')   api-reference-documentation.md:12   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('eavmlib')
                          MixedStyledText('eavmlib')
                            SingleStyledText('eavmlib')
                ListItem()   api-reference-documentation.md:13   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('alisp')   api-reference-documentation.md:13   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('alisp')
                          MixedStyledText('alisp')
                            SingleStyledText('alisp')
                ListItem()   api-reference-documentation.md:14   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('etest')   api-reference-documentation.md:14   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('etest')
                          MixedStyledText('etest')
                            SingleStyledText('etest')
            Section(id='%api-reference-documentation#atomvmlib-c')   api-reference-documentation.md:16   <section>
              Heading('10.2 AtomVMLib (C)')   api-reference-documentation.md:16   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('10.2 ')
                    SingleStyledText('10.2')
                    SingleStyledText(' ')
                  MixedStyledText('AtomVMLib (C)')
                    MixedStyledText('AtomVMLib (C)')
                      SingleStyledText('AtomVMLib (C)')
              List(style='bulleted')   api-reference-documentation.md:18   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   api-reference-documentation.md:18   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('libAtomVM')   api-reference-documentation.md:18   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('libAtomVM')
                          MixedStyledText('libAtomVM')
                            SingleStyledText('libAtomVM')
      StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%CONTRIBUTING')   <start_of_file>
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		87')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		87')
          MixedStyledText('		87')
            Tab('	')
            Tab('	')
            Field('87')
              SingleStyledText('87')
---------------------------------- page 88 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%CONTRIBUTING')   <start_of_file>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('88		Chapter 10.  API Reference D...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('88		Chapter 10.  API Reference D...')
          MixedStyledText('88		Chapter 10.  API Reference D...')
            Field('88')
              SingleStyledText('88')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('10')
              SingleStyledText('10')
            SingleStyledText('.  ')
            Field('API Reference Documentation')
              MixedStyledText('API Reference Documentation')
                MixedStyledText('API Reference Documentation')
                  SingleStyledText('API Reference Documentation')
---------------------------------- page 89 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 11', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 11')
        MixedStyledText('Chapter 11')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('11', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('11')
  Paragraph('Contributing', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Contributing')
        MixedStyledText('Contributing')
          MixedStyledText('Contributing')
            SingleStyledText('Contributing')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%CONTRIBUTING')   <start_of_file>
          Section(id='%CONTRIBUTING#contributing')   CONTRIBUTING.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('Make sure to understand the lice...')   CONTRIBUTING.md:9   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('Make sure to understand the lice...')
                  MixedStyledText('Make sure to understand the lice...')
                    SingleStyledText('Make sure to understand the lice...')
            Section(id='%CONTRIBUTING#git-recommended-practices')   CONTRIBUTING.md:11   <section>
              Heading('11.1 Git Recommended Practices')   CONTRIBUTING.md:11   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('11.1 ')
                    SingleStyledText('11.1')
                    SingleStyledText(' ')
                  MixedStyledText('Git Recommended Practices')
                    MixedStyledText('Git Recommended Practices')
                      SingleStyledText('Git Recommended Practices')
              List(style='bulleted')   CONTRIBUTING.md:13   <bullet_list>
                   > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                ListItem()   CONTRIBUTING.md:13   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Commit messages should have a su...')   CONTRIBUTING.md:13   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Commit messages should have a su...')
                          MixedStyledText('Commit messages should have a su...')
                            SingleStyledText('Commit messages should have a ')
                            MixedStyledText('summary and a description', style='external link')   CONTRIBUTING.md:13   <reference>
                                 > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                              SingleStyledText('summary and a description')
                ListItem()   CONTRIBUTING.md:14   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Avoid trailing white spaces')   CONTRIBUTING.md:14   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Avoid trailing white spaces')
                          MixedStyledText('Avoid trailing white spaces')
                            SingleStyledText('Avoid trailing white spaces')
                ListItem()   CONTRIBUTING.md:15   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Always git pull --rebase')   CONTRIBUTING.md:15   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Always git pull --rebase')
                          MixedStyledText('Always git pull --rebase')
                            SingleStyledText('Always ')
                            MixedStyledText('git pull --rebase', style='monospaced')   CONTRIBUTING.md:15   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('git pull --rebase')
                ListItem()   CONTRIBUTING.md:16   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('Clean up your branch history wit...')   CONTRIBUTING.md:16   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('Clean up your branch history wit...')
                          MixedStyledText('Clean up your branch history wit...')
                            MixedStyledText('Clean up your branch history', style='external link')   CONTRIBUTING.md:16   <reference>
                                 > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                              SingleStyledText('Clean up your branch history')
                            SingleStyledText(' with ')
                            MixedStyledText('git rebase -i', style='monospaced')   CONTRIBUTING.md:16   <literal>
                                 > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                              SingleStyledText('git rebase -i')
                ListItem()   CONTRIBUTING.md:17   <list_item>
                     x (0,0,1,0,4) bulleted list item
                  ListItemLabel('•')
                       > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                         (0,0,0,0,2) list item label [Sphinx] > default
                      MixedStyledText('•')
                        SingleStyledText('')
                        SingleStyledText('•')
                        SingleStyledText('')
                  StaticGroupedFlowables()
                       > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                    Paragraph('All your intermediate commits sh...')   CONTRIBUTING.md:17   <paragraph>
                         > (0,0,0,0,5) list item paragraph [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('All your intermediate commits sh...')
                          MixedStyledText('All your intermediate commits sh...')
                            SingleStyledText('All your intermediate commits sh...')
            Section(id='%CONTRIBUTING#coding-style')   CONTRIBUTING.md:19   <section>
              Heading('11.2 Coding Style')   CONTRIBUTING.md:19   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('11.2 ')
                    SingleStyledText('11.2')
                    SingleStyledText(' ')
                  MixedStyledText('Coding Style')
                    MixedStyledText('Coding Style')
                      SingleStyledText('Coding Style')
              Section(id='%CONTRIBUTING#c-code')   CONTRIBUTING.md:21   <section>
                Heading('11.2.1 C Code')   CONTRIBUTING.md:21   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('11.2.1 ')
                      SingleStyledText('11.2.1')
                      SingleStyledText(' ')
                    MixedStyledText('C Code')
                      MixedStyledText('C Code')
                        SingleStyledText('C Code')
                Section(id='%CONTRIBUTING#indentation')   CONTRIBUTING.md:23   <section>
                  Heading('Indentation')   CONTRIBUTING.md:23   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Indentation')
                        MixedStyledText('Indentation')
                          SingleStyledText('Indentation')
                  List(style='bulleted')   CONTRIBUTING.md:25   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   CONTRIBUTING.md:25   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('K&R indentation and braces style')   CONTRIBUTING.md:25   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('K&R indentation and braces style')
                              MixedStyledText('K&R indentation and braces style')
                                MixedStyledText('K&R indentation and braces style', style='external link')   CONTRIBUTING.md:25   <reference>
                                     > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                  SingleStyledText('K&R indentation and braces style')
                    ListItem()   CONTRIBUTING.md:26   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Mandatory braces')   CONTRIBUTING.md:26   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Mandatory braces')
                              MixedStyledText('Mandatory braces')
                                MixedStyledText('Mandatory braces', style='external link')   CONTRIBUTING.md:26   <reference>
                                     > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                                  SingleStyledText('Mandatory braces')
                    ListItem()   CONTRIBUTING.md:27   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('4 spaces indentation')   CONTRIBUTING.md:27   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('4 spaces indentation')
                              MixedStyledText('4 spaces indentation')
                                SingleStyledText('4 spaces indentation')
                  Paragraph('Good:')   CONTRIBUTING.md:29   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Good:')
                        MixedStyledText('Good:')
                          SingleStyledText('Good:')
                  CodeBlock('void f(int reverse)\n{\n    if (re...')   CONTRIBUTING.md:30   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('void f(int reverse)\n{\n    if (re...')
                        MixedStyledText('void f(int reverse)\n{\n    if (re...')
                          Token('void', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('f', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('int', type=Token.Name.Builtin)
                               > (0,0,0,1,2) (pygments)Token.Name.Builtin [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('reverse', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(')', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('{', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n    ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('if', type=Token.Keyword)
                               > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('reverse', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(')', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('{', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n        ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('puts', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('"!dlroW olleH"', type=Token.Literal.String.Double)
                               > (0,0,0,1,2) (pygments)Token.Literal.String.Double [FriendlyStyle (pygments)] > DEFAULT
                          Token(');', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n    ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('}', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('else', type=Token.Keyword)
                               > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('{', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n        ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('puts', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('"Hello world"', type=Token.Literal.String.Double)
                               > (0,0,0,1,2) (pygments)Token.Literal.String.Double [FriendlyStyle (pygments)] > DEFAULT
                          Token(');', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n    ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('}', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('}', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                  Paragraph('Bad:')   CONTRIBUTING.md:41   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('Bad:')
                        MixedStyledText('Bad:')
                          SingleStyledText('Bad:')
                  CodeBlock('void f(int reverse) {\n    if (re...')   CONTRIBUTING.md:42   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                      MixedStyledText('void f(int reverse) {\n    if (re...')
                        MixedStyledText('void f(int reverse) {\n    if (re...')
                          Token('void', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('f', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('int', type=Token.Name.Builtin)
                               > (0,0,0,1,2) (pygments)Token.Name.Builtin [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('reverse', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(')', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('{', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n    ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('if', type=Token.Keyword)
                               > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('reverse', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(')', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n        ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('puts', type=Token.Name)
                               > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                          Token(' ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('(', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('"!dlroW olleH"', type=Token.Literal.String.Double)
                               > (0,0,0,1,2) (pygments)Token.Literal.String.Double [FriendlyStyle (pygments)] > DEFAULT
                          Token(');', type=Token.Punctuation)
                               > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n    ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
                          Token('else', type=Token.Keyword)
                               > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                          Token('\n        ', type=Token.Text)
                               > (0,0,0,1,2) (pygments)Token.Text [FriendlyStyle (pygments)] > DEFAULT
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		89')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		89')
          MixedStyledText('		89')
            Tab('	')
            Tab('	')
            Field('89')
              SingleStyledText('89')
---------------------------------- page 90 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%CONTRIBUTING')   <start_of_file>
          (continued) Section(id='%CONTRIBUTING#contributing')   CONTRIBUTING.md:7   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%CONTRIBUTING#coding-style')   CONTRIBUTING.md:19   <section>
              (continued) Section(id='%CONTRIBUTING#c-code')   CONTRIBUTING.md:21   <section>
                (continued) Section(id='%CONTRIBUTING#indentation')   CONTRIBUTING.md:23   <section>
                  (continued) CodeBlock('void f(int reverse) {\n    if (re...')   CONTRIBUTING.md:42   <literal_block>
                       > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                         (0,0,0,0,1) body [Sphinx] > default
                Section(id='%CONTRIBUTING#names')   CONTRIBUTING.md:51   <section>
                  Heading('Names')   CONTRIBUTING.md:51   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Names')
                        MixedStyledText('Names')
                          SingleStyledText('Names')
                  List(style='bulleted')   CONTRIBUTING.md:53   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   CONTRIBUTING.md:53   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Struct names are PascalCase (e.g...')   CONTRIBUTING.md:53   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Struct names are PascalCase (e.g...')
                              MixedStyledText('Struct names are PascalCase (e.g...')
                                SingleStyledText('Struct names are PascalCase (e.g...')
                    ListItem()   CONTRIBUTING.md:54   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Scalar types are lower case (e.g...')   CONTRIBUTING.md:54   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Scalar types are lower case (e.g...')
                              MixedStyledText('Scalar types are lower case (e.g...')
                                SingleStyledText('Scalar types are lower case (e.g...')
                    ListItem()   CONTRIBUTING.md:55   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('All other names (e.g. functions ...')   CONTRIBUTING.md:55   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('All other names (e.g. functions ...')
                              MixedStyledText('All other names (e.g. functions ...')
                                SingleStyledText('All other names (e.g. functions ...')
                    ListItem()   CONTRIBUTING.md:56   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Always prefix function names (e....')   CONTRIBUTING.md:56   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Always prefix function names (e....')
                              MixedStyledText('Always prefix function names (e....')
                                SingleStyledText('Always prefix function names (e....')
                Section(id='%CONTRIBUTING#other-coding-conventions')   CONTRIBUTING.md:58   <section>
                  Heading('Other Coding Conventions')   CONTRIBUTING.md:58   <title>
                       > (0,0,0,1,2) heading level 4 [Sphinx] > heading level 3
                         (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                      MixedStyledText('Other Coding Conventions')
                        MixedStyledText('Other Coding Conventions')
                          SingleStyledText('Other Coding Conventions')
                  List(style='bulleted')   CONTRIBUTING.md:59   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   CONTRIBUTING.md:59   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Pointer * should be with the var...')   CONTRIBUTING.md:59   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Pointer * should be with the var...')
                              MixedStyledText('Pointer * should be with the var...')
                                SingleStyledText('Pointer * should be with the var...')
                                MixedStyledText('char *name', style='monospaced')   CONTRIBUTING.md:59   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('char *name')
                                SingleStyledText(', not ')
                                MixedStyledText('char* name', style='monospaced')   CONTRIBUTING.md:59   <literal>
                                     > (0,0,1,0,1) monospaced [Sphinx] > DEFAULT
                                  SingleStyledText('char* name')
                                SingleStyledText(')')
                    ListItem()   CONTRIBUTING.md:60   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Avoid long lines, use intermedia...')   CONTRIBUTING.md:60   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Avoid long lines, use intermedia...')
                              MixedStyledText('Avoid long lines, use intermedia...')
                                SingleStyledText('Avoid long lines, use intermedia...')
              Section(id='%CONTRIBUTING#elixir-code')   CONTRIBUTING.md:62   <section>
                Heading('11.2.2 Elixir Code')   CONTRIBUTING.md:62   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('11.2.2 ')
                      SingleStyledText('11.2.2')
                      SingleStyledText(' ')
                    MixedStyledText('Elixir Code')
                      MixedStyledText('Elixir Code')
                        SingleStyledText('Elixir Code')
                Paragraph('Just use Elixir formatter enforc...')   CONTRIBUTING.md:64   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Just use Elixir formatter enforc...')
                      MixedStyledText('Just use Elixir formatter enforc...')
                        SingleStyledText('Just use Elixir formatter enforc...')
      List(style='bulleted')   index.rst:44   <bullet_list>
           > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('genindex')   index.rst:44   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('genindex')
                  MixedStyledText('genindex')
                    MixedStyledText('genindex')   <inline>
                      SingleStyledText('genindex')
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('modindex')   index.rst:45   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('modindex')
                  MixedStyledText('modindex')
                    MixedStyledText('modindex')   <inline>
                      SingleStyledText('modindex')
        ListItem()   index.rst   <list_item>
             x (0,0,1,0,4) bulleted list item
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                 (0,0,0,0,2) list item label [Sphinx] > default
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()
               > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
            Paragraph('search')   index.rst:46   <paragraph>
                 > (0,0,0,0,5) list item paragraph [Sphinx] > default
                   (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('search')
                  MixedStyledText('search')
                    MixedStyledText('search')   <inline>
                      SingleStyledText('search')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('AtomVM, Release 0.5.0')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('AtomVM, Release 0.5.0')
          MixedStyledText('AtomVM, Release 0.5.0')
            Field('AtomVM')
              SingleStyledText('AtomVM')
            SingleStyledText(', ')
            Field('Release 0.5.0')
              SingleStyledText('Release 0.5.0')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('90		Chapter 11.  Contributing')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('90		Chapter 11.  Contributing')
          MixedStyledText('90		Chapter 11.  Contributing')
            Field('90')
              SingleStyledText('90')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('11')
              SingleStyledText('11')
            SingleStyledText('.  ')
            Field('Contributing')
              MixedStyledText('Contributing')
                MixedStyledText('Contributing')
                  SingleStyledText('Contributing')
---------------------------------- page 91 ----------------------------------
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    StaticGroupedFlowables()
#### ChainedContainer('column2')
  StaticGroupedFlowables()
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		91')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		91')
          MixedStyledText('		91')
            Tab('	')
            Tab('	')
            Field('91')
              SingleStyledText('91')
